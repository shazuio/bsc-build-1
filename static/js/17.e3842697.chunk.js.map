{"version":3,"sources":["components/main/marketplace/ListingsTableItem.js","components/main/marketplace/ListingsTable.js","pages/marketplace/ListingDetailPage.js","components/BuyButton.js","components/ApproveShazuButton.js","components/BuyShazuButton.js","components/main/NFTCard.js"],"names":["successCheckOptions","loop","autoplay","animationData","SuccessCheckLottie","background","failedOptions","FailedLottie","LISTINGSCOLUMNS","id","label","minWidth","width","align","ListingsTableItem","_ref","items","index","playPopDingSound","stopPopDingSound","useSound","popDingSound","openStatusDialog","setOpenStatusDialog","useState","open","success","statusDialogMsg","setStatusDialogMsg","statusDialogInfo","setStatusDialogInfo","failedStatusMsg","setFailedStatusMsg","handleBuy","e","nftData","JSON","parse","target","value","handleOpenSuccessDialog","msg","info","concat","nftId","_jsxs","_Fragment","children","map","row","_jsx","TableRow","hover","role","tabIndex","column","cellIndex","nftBorder","rarity","TableCell","style","fontSize","Stack","direction","spacing","alignItems","justifyContent","src","smallThumbnail","alt","height","borderRadius","marginRight","border","className","fontWeight","href","rel","color","shortenAddress","alignItem","fCRCurrency","saleData","price","currency","marginLeft","marginTop","Button","stringify","variant","onClick","DialogAnimate","maxWidth","animate","varZoomInUp","scroll","onClose","handleCloseStatusDialog","DialogContent","textAlign","Lottie","options","isClickToPauseDisabled","Typography","NFT_COLLECTION","common","name","video","rare","superrare","ultimaterare","DUMMY_LISTINGS_DATA","nft","seller","saleId","marketData","floorPrice","ListingsTable","Component","ListingsTableItemComponent","nextPage","prevPage","setPageIndex","totalPages","usePaginator","PageComponent","maxPerPage","data","paginationPage","setPaginationPage","Scrollbar","TableContainer","sx","backgroundColor","padding","marginBottom","Table","TableHead","boxShadow","TableBody","Pagination","count","page","onChange","handlePaginationChange","event","DUMMY_LISTING_DETAIL_DATA","status","description","owner","ListingDetailPage","useParams","invalidId","setInvalidId","loadedNftDetailData","setLoadedNFTDetailData","nftDetailData","setNftDetailData","useEffect","console","Container","MotionInView","variants","varFadeInUp","Link","to","component","RouterLink","Grid","container","paddingTop","paddingBottom","item","xs","md","lg","xl","NFTCard","collection","big","size","BuyButton","props","disabled","setDisabled","usingDisabled","setUsingDisabled","buttonText","setButtonText","state","send","useContractFunction","SHAZU_MARKETPLACE_CONTRACT","transactionName","account","useEthers","balance","useEtherBalance","toLowerCase","gte","utils","parseEther","tokenId","ApproveShazuButton","SHAZU_CONTRACT","constants","MaxUint256","useTokenBalance","SHAZU_ADDRESS","handleApprove","SHAZU_MARKETPLACE_ADDRESS","BuyShazuButton","infoButtonStyle","editButtonStyle","CustomTextField","styled","TextField","borderBottomColor","borderColor","allowance","useTokenAllowance","SHAZU_NFT_CONTRACT","isTransfering","setisTransfering","isTransfered","setIsTransfered","theme","useTheme","collectionCardStyle","shape","borderRadiusMd","transition","getGradientClass","rarityLabelStyle","position","top","left","transform","infoOpen","setInfoOpen","openSuccessTransferDialog","setOpenSuccessTransferDialog","openFailedTransferDialog","setOpenFailedTransferDialog","shortenedTransferAddress","setShortenedTransferAddress","transferAddress","setTransferAddress","isValidAddress","setIsValidAddress","checkTransferAddress","error","click","setCLickTransfer","unknown","Box","visibility","playsInline","muted","autoPlay","aspectRatio","type","amount","display","flexDirection","opacity","sold","currentTarget","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","p","handleCloseSuccessTransferDialog","handleCloseFailedTransferDialog","editListingAction","right","ownedAction","handleCloseTransfer","gutterBottom","fullWidth","handleTransfer","alert","listingData","handleOpenListingDialog","gt","handleOpenEditListingDialog","marketplaceListing","topSaleData","topSale"],"mappings":"4ZAeA,MAAMA,EAAsB,CACxBC,MAAM,EACNC,UAAU,EACVC,cAAeC,EACfC,WAAY,eAGVC,EAAgB,CAClBL,MAAM,EACNC,UAAU,EACVC,cAAeI,EACfF,WAAY,eAGVG,EAAkB,CACpB,CAAEC,GAAI,MAAOC,MAAO,MAAOC,SAAU,IAAKC,MAAO,OACjD,CAAEH,GAAI,SAAUC,MAAO,SAAUC,SAAU,GAAIC,MAAO,OACtD,CAAEH,GAAI,QAASC,MAAO,QAASC,SAAU,IAAKE,MAAO,QAASD,MAAO,OACrE,CAAEH,GAAI,MAAOC,MAAO,IAAKC,SAAU,IAAKE,MAAO,QAASD,MAAO,QAGpD,SAASE,EAAiBC,GAAmB,IAAlB,MAAEC,EAAK,MAAEC,GAAOF,EACtD,MAAOG,GAAkB,iBAAEC,IAAsBC,YAASC,MAGnDC,EAAkBC,GAAuBC,mBAAS,CAAEC,MAAM,EAAOC,SAAS,KAC1EC,EAAiBC,GAAsBJ,mBAAS,KAChDK,EAAkBC,GAAuBN,mBAAS,KAClDO,EAAiBC,GAAsBR,mBAAS,IAsBjDS,EAAaC,IACf,MAAMC,EAAUC,KAAKC,MAAMH,EAAEI,OAAOC,OArBRC,IAACC,EAAKC,EAALD,EAuBL,qBAvBUC,EAuBW,OAADC,OAASR,EAAQS,OAtB7D1B,IACAU,EAAmBa,GACnBX,EAAoBY,GACpBnB,EAAoB,CAAEE,MAAM,EAAMC,SAAS,KAuB/C,OACImB,eAAAC,WAAA,CAAAC,SAAA,CAEQ/B,EAAMgC,KAAI,CAACC,EAAKhC,IACZiC,cAACC,IAAQ,CAACC,OAAK,EAACC,KAAK,WAAWC,UAAW,EAAEP,SACxCvC,EAAgBwC,KAAI,CAACO,EAAQC,KAC1B,MAAMjB,EAAQU,EAAIM,EAAO9C,IAEzB,GAAiB,QAAd8C,EAAO9C,GAAa,CACnB,IAAIgD,EAAY,GAUhB,MAToB,WAAjBlB,EAAMmB,OACLD,EAAY,gCACU,SAAjBlB,EAAMmB,OACXD,EAAY,8BACU,eAAjBlB,EAAMmB,OACXD,EAAY,+BACU,kBAAjBlB,EAAMmB,SACXD,EAAY,iCAGZP,cAACS,IAAS,CAAC9C,MAAO0C,EAAO1C,MAA4B+C,MAAO,CAAEC,SAAU,QAASd,SAC7EF,eAACiB,IAAK,CAACC,UAAU,MAAMC,QAAS,EAAGC,WAAW,SAASL,MAAO,CAAEM,eAAgBX,EAAO1C,OAAQkC,SAAA,CAC3FG,cAAA,OAAKiB,IAAK5B,EAAM6B,eAAgBC,IAAI,GAChCT,MAAO,CAAEhD,MAAO,OAAQ0D,OAAQ,OAAQC,aAAc,SAAUC,YAAa,SAAUC,OAAQhB,KAEnGP,cAAA,OAAKwB,UAAU,OAAM3B,SAChBE,EAAIL,YAEL,GAAAD,OAR4Ba,IAahD,MAAiB,WAAdD,EAAO9C,GAEFyC,cAACS,IAAS,CAAC9C,MAAO0C,EAAO1C,MAA4B+C,MAAO,CAAEe,WAAY,OAAO5B,SAC7EG,cAAA,KAAG0B,KAAI,+BAAAjC,OAAiCJ,GAASD,OAAO,SAASuC,IAAI,aAAajB,MAAO,CAAEkB,MAAO,QAASjB,SAAU,UAAWd,SAC3HgC,YAAexC,MAChB,GAAAI,OAHgCa,IAQ/B,UAAdD,EAAO9C,GAEFyC,cAACS,IAAS,CAAC9C,MAAO0C,EAAO1C,MAA4B+C,MAAO,CAAEe,WAAY,MAAOd,SAAU,UAAUd,SACjGF,eAACiB,IAAK,CAACC,UAAU,MAAMiB,UAAU,SAASd,eAAe,MAAKnB,SAAA,CAC1DF,eAAA,OAAAE,SAAA,CACKkC,YAAYhC,EAAIiC,SAASC,OAAO,IAAElC,EAAIiC,SAASE,YAGtB,QAA1BnC,EAAIiC,SAASE,UACblC,cAAA,OAAKiB,IAAI,iCAAiCE,IAAI,GAAGT,MAAO,CAAEhD,MAAO,SAAU0D,OAAQ,SAAUe,WAAY,SAAUC,UAAW,YAGpG,UAA1BrC,EAAIiC,SAASE,UACblC,cAAA,OAAKiB,IAAI,mCAAmCE,IAAI,GAAGT,MAAO,CAAEhD,MAAO,SAAU0D,OAAQ,SAAUe,WAAY,SAAUC,UAAW,gBAEhI,GAAA3C,OAb4Ba,IAkB/B,QAAdD,EAAO9C,IAEFyC,cAACS,IAAS,CAAC9C,MAAO0C,EAAO1C,MAA4B+C,MAAO,CAAEe,WAAY,MAAOd,SAAU,UAAUd,SACjGG,cAACqC,IAAM,CAAChD,MAAOH,KAAKoD,UAAUvC,GAC1BwC,QAAQ,YAAYX,MAAM,UAC1BY,QAASzD,EAAUc,SACtB,SAEQ,GAAAJ,OAN2Ba,QAYlD,GAAAb,OAzEgD1B,MA+E9DiC,cAACyC,IAAa,CAAClE,KAAMH,EAAiBG,KAAMmE,SAAS,KAAKC,QAASC,IAAaC,OAAO,QAAQC,QAhGvEC,KAC5B1E,EAAoB,IAAKD,EAAkBG,MAAM,IACjDG,EAAmB,IACnBI,EAAmB,KA6FiHe,SAC5HF,eAACqD,IAAa,CAACtC,MAAO,CAAEuC,UAAW,UAAWpD,SAAA,CAEtCzB,EAAiBI,QAEjBwB,cAAA,OAAKwB,UAAU,gCAA+B3B,SAC1CG,cAACkD,IAAM,CAACC,QAASrG,EAAqBsG,wBAAsB,MAGhEpD,cAAA,OAAKwB,UAAU,gCAA+B3B,SAC1CG,cAACkD,IAAM,CAACC,QAAS/F,EAAegG,wBAAsB,MAI9DpD,cAACqD,IAAU,CAACd,QAAQ,KAAI1C,SACnBpB,IAIDL,EAAiBI,QAEjBwB,cAAA,OAAKwB,UAAU,eAAc3B,SACzBG,cAACqD,IAAU,CAACd,QAAQ,KAAI1C,SACnBlB,MAITqB,cAAA,OAAAH,SACKhB,Y,aC7K7B,MAAMvB,EAAkB,CACpB,CAAEC,GAAI,MAAOC,MAAO,MAAOC,SAAU,IAAKC,MAAO,OACjD,CAAEH,GAAI,SAAUC,MAAO,SAAUC,SAAU,GAAIC,MAAO,OACtD,CAAEH,GAAI,QAASC,MAAO,QAASC,SAAU,IAAKE,MAAO,QAASD,MAAO,OACrE,CAAEH,GAAI,MAAOC,MAAO,IAAKC,SAAU,IAAKE,MAAO,QAASD,MAAO,QAG7D4F,EAAiB,CACnBC,OAAQ,CACJC,KAAM,eACNhD,OAAQ,SACRiD,MAAO,qCACPvC,eAAgB,wDAEpBwC,KAAM,CACFF,KAAM,aACNhD,OAAQ,OACRiD,MAAO,mCACPvC,eAAgB,sDAEpByC,UAAW,CACPH,KAAM,cACNhD,OAAQ,aACRiD,MAAO,oCACPvC,eAAgB,uDAEpB0C,aAAc,CACVJ,KAAM,eACNhD,OAAQ,gBACRiD,MAAO,qCACPvC,eAAgB,yDAIlB2C,EAAsB,CACxB,CACIC,IAAKR,EAAeM,aACpBlE,MAAO,UACPqE,OAAQ,6CACR/B,SAAU,CACNgC,OAAQ,gBACR/B,MAAO,IACPC,SAAU,OAEd+B,WAAY,CACRC,WAAY,OACZhC,SAAU,UAGlB,CACI4B,IAAKR,EAAeM,aACpBlE,MAAO,UACPqE,OAAQ,6CACR/B,SAAU,CACNgC,OAAQ,gBACR/B,MAAO,IACPC,SAAU,OAEd+B,WAAY,CACRC,WAAY,OACZhC,SAAU,UAGlB,CACI4B,IAAKR,EAAeM,aACpBlE,MAAO,UACPqE,OAAQ,6CACR/B,SAAU,CACNgC,OAAQ,gBACR/B,MAAO,IACPC,SAAU,OAEd+B,WAAY,CACRC,WAAY,OACZhC,SAAU,UAGlB,CACI4B,IAAKR,EAAeM,aACpBlE,MAAO,UACPqE,OAAQ,6CACR/B,SAAU,CACNgC,OAAQ,gBACR/B,MAAO,IACPC,SAAU,OAEd+B,WAAY,CACRC,WAAY,OACZhC,SAAU,UAGlB,CACI4B,IAAKR,EAAeM,aACpBlE,MAAO,UACPqE,OAAQ,6CACR/B,SAAU,CACNgC,OAAQ,gBACR/B,MAAO,IACPC,SAAU,OAEd+B,WAAY,CACRC,WAAY,OACZhC,SAAU,UAGlB,CACI4B,IAAKR,EAAeM,aACpBlE,MAAO,UACPqE,OAAQ,6CACR/B,SAAU,CACNgC,OAAQ,gBACR/B,MAAO,IACPC,SAAU,OAEd+B,WAAY,CACRC,WAAY,OACZhC,SAAU,WAKP,SAASiC,IAEpB,MAAQC,UAAWC,EAA0B,SAAEC,EAAQ,SAAEC,EAAQ,aAAEC,EAAY,WAAEC,GAAeC,YAAa,CACzGC,cAAe/G,EACfgH,WAAY,EACZC,KAAMhB,KAGHiB,EAAgBC,GAAqBzG,mBAAS,GAMrD,OACIqB,eAAAC,WAAA,CAAAC,SAAA,CACIG,cAACgF,IAAS,CAAAnF,SACNF,eAACsF,IAAc,CAACC,GAAI,CAAEzH,SAAU,QAASC,MAAO,OAASyH,gBAAiB,UAAW5D,OAAQ,oBAAqBF,aAAc,MAAO+D,QAAS,OAAQhD,UAAW,QAAU1B,MAAO,CAAEyB,WAAY,OAAQb,YAAa,QAASzB,SAAA,CAC5NG,cAACqD,IAAU,CAACd,QAAQ,KAAK7B,MAAO,CAAE2E,aAAc,UAAWxF,SAAC,aAG5DF,eAAC2F,IAAK,CAAAzF,SAAA,CACFG,cAACuF,IAAS,CAACL,GAAI,CAAGC,gBAAiB,UAAW9D,aAAc,QAASxB,SACjEG,cAACC,IAAQ,CAAAJ,SACRvC,EAAgBwC,KAAKO,GAClBL,cAACS,IAAS,CAAiB9C,MAAO0C,EAAO1C,MAAO+C,MAAO,CAAEjD,SAAU4C,EAAO5C,SAAUC,MAAO2C,EAAO3C,MAAO8H,UAAW,QAASN,GAAI,CAAE/H,WAAY,UAAWwD,SAAU,OAAQiB,MAAO,SAAU/B,SACxLQ,EAAO7C,OADI6C,EAAO9C,UAO/ByC,cAACyF,IAAS,CAAA5F,SACNG,cAACqE,EAA0B,cAK3CrE,cAACY,IAAK,CAACF,MAAO,CAAGhD,MAAO,OAAQ0E,UAAW,QAAUrB,WAAW,SAAQlB,SACpEG,cAAC0F,IAAU,CACP9D,MAAM,SACN+D,MAAOlB,EAAYmB,KAAMd,EACzBe,SAjCeC,CAACC,EAAO1G,KACnC0F,EAAkB1F,GAClBmF,EAAanF,WC7HrB,MAAMvC,EAAsB,CACxBC,MAAM,EACNC,UAAU,EACVC,cAAeC,EACfC,WAAY,eAGVC,EAAgB,CAClBL,MAAM,EACNC,UAAU,EACVC,cAAeI,EACfF,WAAY,eA8BV6I,EAA6B,CAC/BlC,IATc,CACVN,KAAM,eACNhD,OAAQ,gBACRiD,MAAO,qCACPvC,eAAgB,wDAMpBxB,MAAO,UACPuG,OAAQ,SACRC,YAAa,0CACbC,MAAO,6CACPnE,SAAU,CACNgC,OAAQ,gBACR/B,MAAO,OACPC,SAAU,SAEd+B,WAAY,CACRC,WAAY,OACZhC,SAAU,UAIH,SAASkE,IACpB,MAAM,MAAE1G,GAAU2G,eAEXC,EAAWC,GAAgBjI,oBAAS,IACpCkI,EAAqBC,GAA0BnI,oBAAS,IACxDoI,EAAeC,GAAoBrI,mBAAS,IAYnDsI,qBAAU,KAVmBrJ,QAWLmC,EAVpBmH,QAAQrH,KAAK,UAADC,OAAWlC,IAKvBoJ,EAAiBX,GACjBS,GAAuB,KAKxB,IAGH,MAAOzI,GAAkB,iBAAEC,IAAsBC,YAASC,MAGnDC,EAAkBC,GAAuBC,mBAAS,CAAEC,MAAM,EAAOC,SAAS,KAC1EC,EAAiBC,GAAsBJ,mBAAS,KAChDK,EAAkBC,GAAuBN,mBAAS,KAClDO,EAAiBC,GAAsBR,mBAAS,IA6BvD,OACI0B,cAAAJ,WAAA,CAAAC,SACIF,eAACmH,IAAS,CAACpE,SAAS,KAAI7C,SAAA,CACpBF,eAACoH,IAAY,CAACC,SAAUC,IAAYpH,SAAA,CAChCG,cAACkH,IAAI,CAAC1F,UAAU,gBAAgB2F,GAAG,eAAeC,UAAWC,IAAWxH,SACpEG,cAACqC,IAAM,CAACE,QAAQ,YAAYX,MAAM,SAAQ/B,SAAC,0BAK/CG,cAACqD,IAAU,CAACd,QAAQ,KAAK7B,MAAO,CAAE0B,UAAW,QAASvC,SAAC,sBAK3DF,eAACiB,IAAK,CAAAf,SAAA,CAEE2G,GACA7G,eAAAC,WAAA,CAAAC,SAAA,CACIG,cAAC+G,IAAY,CAACC,SAAUC,IAAYpH,SAChCF,eAAC2H,IAAI,CAACC,WAAS,EAACzG,QAAS,EAAGC,WAAW,UAAUF,UAAU,MAAMG,eAAe,aAAaN,MAAO,CAAE8G,WAAY,OAAQC,cAAe,QAAS5H,SAAA,CAC9IG,cAACsH,IAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEjI,SACpCG,cAAC+H,IAAO,CACJC,WAAYtB,EACZuB,KAAG,MAIXjI,cAACsH,IAAI,CAACI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAEjI,SACpCF,eAACiB,IAAK,CAACE,QAAS,EAAEjB,SAAA,CACdF,eAAA,OAAK6B,UAAU,kBAAkBd,MAAO,CAAE0E,QAAS,QAAQvF,SAAA,CAAC,UAChD,IACRG,cAAA,KAAG0B,KAAI,+BAAAjC,OAAiCiH,EAAcP,OAAS/G,OAAO,SAASuC,IAAI,aAAaH,UAAU,OAAM3B,SAC3GgC,YAAe6E,EAAcP,YAItCnG,cAAA,OAAKwB,UAAU,kBAAkBd,MAAO,CAAE0E,QAAS,QAAQvF,SACvDF,eAACiB,IAAK,CAAAf,SAAA,CACFG,cAAA,OAAAH,SAAK,kBAILF,eAACiB,IAAK,CAACC,UAAU,MAAME,WAAW,SAASD,QAAS,EAAEjB,SAAA,CACtDF,eAAC0D,IAAU,CAACd,QAAQ,KAAI1C,SAAA,CACnB6G,EAAc1E,SAASC,MAAM,IAAEyE,EAAc1E,SAASE,YAGf,QAApCwE,EAAc1E,SAASE,UACvBlC,cAAA,OAAKiB,IAAI,iCAAiCE,IAAI,GAAGT,MAAO,CAAEhD,MAAO,SAAU0D,OAAQ,SAAUe,WAAY,SAAUkD,aAAc,YAG7F,UAApCqB,EAAc1E,SAASE,UACvBlC,cAAA,OAAKiB,IAAI,mCAAmCE,IAAI,GAAGT,MAAO,CAAEhD,MAAO,SAAU0D,OAAQ,SAAUe,WAAY,SAAUkD,aAAc,eAI3IrF,cAACY,IAAK,CAACC,UAAU,SAASG,eAAe,gBAAgBN,MAAO,CAAE2E,aAAc,SAAUjD,UAAW,UAAUvC,SAC3GF,eAAA,OAAK6B,UAAU,kBAAkBd,MAAO,CAAEC,SAAU,OAAQjD,MAAO,eAAemC,SAAA,CAAC,gBACjE,IACdF,eAACiB,IAAK,CAACC,UAAU,MAAME,WAAW,SAAQlB,SAAA,CACtCF,eAAA,QAAMe,MAAO,CAAEe,WAAY,OAAQ5B,SAAA,CAC9B6G,EAAczC,WAAWC,WAAW,IAAEwC,EAAczC,WAAW/B,YAG1B,QAAtCwE,EAAczC,WAAW/B,UACzBlC,cAAA,OAAKiB,IAAI,iCAAiCE,IAAI,GAAGT,MAAO,CAAEhD,MAAO,SAAU0D,OAAQ,SAAUe,WAAY,SAAUkD,aAAc,YAG3F,UAAtCqB,EAAczC,WAAW/B,UACzBlC,cAAA,OAAKiB,IAAI,mCAAmCE,IAAI,GAAGT,MAAO,CAAEhD,MAAO,SAAU0D,OAAQ,SAAUe,WAAY,SAAUkD,aAAc,oBAMnJrF,cAACY,IAAK,CAACC,UAAU,MAAMC,QAAS,EAAGJ,MAAO,CAAE0B,UAAW,SAAUiD,aAAc,QAASxF,SACpFG,cAACqC,IAAM,CACHhD,MAAOH,KAAKoD,UAAUoE,GACtBlE,QAtFrCxD,IACf,MAAMC,EAAUC,KAAKC,MAAMH,EAAEI,OAAOC,OArBRC,IAACC,EAAKC,EAALD,EAuBL,qBAvBUC,EAuBW,OAADC,OAASR,EAAQS,OAtB7D1B,IACAU,EAAmBa,GACnBX,EAAoBY,GACpBnB,EAAoB,CAAEE,MAAM,EAAMC,SAAS,KAuGS0J,KAAK,QAAQ3F,QAAQ,YAAYX,MAAM,UAAS/B,SACnD,cAKLG,cAACmE,EAAa,mBAStCnE,cAACyC,IAAa,CAAClE,KAAMH,EAAiBG,KAAMmE,SAAS,KAAKC,QAASC,IAAaC,OAAO,QAAQC,QA5GvFC,KAC5B1E,EAAoB,IAAKD,EAAkBG,MAAM,IACjDG,EAAmB,IACnBI,EAAmB,KAyGiIe,SAC5HF,eAACqD,IAAa,CAACtC,MAAO,CAAEuC,UAAW,UAAWpD,SAAA,CAEtCzB,EAAiBI,QAEjBwB,cAAA,OAAKwB,UAAU,gCAA+B3B,SAC1CG,cAACkD,IAAM,CAACC,QAASrG,EAAqBsG,wBAAsB,MAGhEpD,cAAA,OAAKwB,UAAU,gCAA+B3B,SAC1CG,cAACkD,IAAM,CAACC,QAAS/F,EAAegG,wBAAsB,MAI9DpD,cAACqD,IAAU,CAACd,QAAQ,KAAI1C,SACnBpB,IAIDL,EAAiBI,QAEjBwB,cAAA,OAAKwB,UAAU,eAAc3B,SACzBG,cAACqD,IAAU,CAACd,QAAQ,KAAI1C,SACnBlB,MAITqB,cAAA,OAAAH,SACKhB,YASrByH,GAEAtG,cAAC+G,IAAY,CAACC,SAAUC,IAAYpH,SAChCG,cAACqD,IAAU,CAACd,QAAQ,KAAK7B,MAAO,CAAEe,WAAY,OAAQ5B,SAAC,mD,8SCzLpEsI,MAzEIC,IACjB,MAAOC,EAAUC,GAAehK,oBAAS,IAElCiK,EAAeC,GAAoBlK,oBAAS,IAE5CmK,EAAYC,GAAiBpK,mBAAS,QAEvC,MAAEqK,EAAK,KAAEC,GAASC,YAAoBC,IAA4B,YAAa,CAAEC,gBAAiB,gBAElG,QAAEC,GAAYC,cAEdC,EAAUC,YAAgBH,GAGhCpC,qBAAU,KACa,cAAjB+B,EAAM1C,QAA2C,SAAjB0C,EAAM1C,SAExCqC,GAAY,GACZE,GAAiB,GACjBE,EAAc,QAGZC,EAAM1C,OAIW,YAAjB0C,EAAM1C,QACRyC,EAAc,UAGK,WAAjBC,EAAM1C,SACRqC,GAAY,GACZE,GAAiB,GACjBE,EAAc,eAEf,CAACC,IA8BJ,OAtBA/B,qBAAU,KACHoC,GAAYA,EAAQI,gBAAkBhB,EAAMrE,OAAOqF,eAMlDJ,GAAWE,GAAWA,EAAQG,IAAIC,QAAMC,WAAWnB,EAAMnG,QACtDsG,GACHD,GAAY,GANXC,GACHD,GAAY,KAef,CAACU,EAASZ,EAAMrE,OAAQmF,IAIvBlJ,cAACqC,IAAM,CAACG,QA7BMzD,KAChBuJ,GAAY,GACZE,GAAiB,GACjBI,EAAKR,EAAMoB,QAAS,CAACnK,MAAMiK,QAAMC,WAAWnB,EAAMnG,UA2B5CM,QAAQ,YAAYX,MAAM,UAAUlB,MAAO,CAAEhD,MAAO,QAAU2K,SAAUA,EAASxI,SAChF4I,K,UCQIgB,MA3EarB,IAC1B,MAAOC,EAAUC,GAAehK,oBAAS,IAElCiK,EAAeC,GAAoBlK,oBAAS,IAE5CmK,EAAYC,GAAiBpK,mBAAS,kBAEvC,MAAEqK,EAAK,KAAEC,GAASC,YAAoBa,IAAgB,UAAW,CAAEX,gBAAiB,mBAEpF,QAAEC,GAAYC,cAEd5J,EAAQsK,YAAUC,WAElBV,EAAUW,YAAgBC,IAAed,GAG/CpC,qBAAU,KACa,cAAjB+B,EAAM1C,QAA2C,SAAjB0C,EAAM1C,SAExCqC,GAAY,GACZE,GAAiB,GACjBE,EAAc,kBAGZC,EAAM1C,OAIW,YAAjB0C,EAAM1C,QACRyC,EAAc,YAGK,WAAjBC,EAAM1C,SACRqC,GAAY,GACZE,GAAiB,GACjBE,EAAc,kBAEf,CAACC,IA8BJ,OArBA/B,qBAAU,KACHoC,GAAYA,EAAQI,gBAAkBhB,EAAMrE,OAAOqF,eAMlDJ,GAAWE,GAAWA,EAAQG,IAAIC,QAAMC,WAAWnB,EAAMnG,QACtDsG,GACHD,GAAY,GANXC,GACHD,GAAY,KAef,CAACU,EAASZ,EAAMrE,OAAQmF,IAGvBlJ,cAACqC,IAAM,CAACG,QA7BUuH,KACpBzB,GAAY,GACZE,GAAiB,GACjBI,EAAKoB,IAA2B3K,IA2B1BkD,QAAQ,YAAYX,MAAM,UAAUlB,MAAO,CAAEhD,MAAO,QAAU2K,SAAUA,EAASxI,SAChF4I,KCKIwB,MA3ES7B,IACtB,MAAOC,EAAUC,GAAehK,oBAAS,IAElCiK,EAAeC,GAAoBlK,oBAAS,IAE5CmK,EAAYC,GAAiBpK,mBAAS,QAEvC,MAAEqK,EAAK,KAAEC,GAASC,YAAoBC,IAA4B,YAAa,CAAEC,gBAAiB,gBAElG,QAAEC,GAAYC,cAIdC,GAFQS,YAAUC,WAERC,YAAgBC,IAAed,IAG/CpC,qBAAU,KACa,cAAjB+B,EAAM1C,QAA2C,SAAjB0C,EAAM1C,SAExCqC,GAAY,GACZE,GAAiB,GACjBE,EAAc,QAGZC,EAAM1C,OAIW,YAAjB0C,EAAM1C,QACRyC,EAAc,UAGK,WAAjBC,EAAM1C,SACRqC,GAAY,GACZE,GAAiB,GACjBE,EAAc,eAEf,CAACC,IA8BJ,OArBA/B,qBAAU,KACHoC,GAAYA,EAAQI,gBAAkBhB,EAAMrE,OAAOqF,eAMlDJ,GAAWE,GAAWA,EAAQG,IAAIC,QAAMC,WAAWnB,EAAMnG,QACtDsG,GACHD,GAAY,GANXC,GACHD,GAAY,KAef,CAACU,EAASZ,EAAMrE,OAAQmF,IAGvBlJ,cAACqC,IAAM,CAACG,QA7BMzD,KAChBuJ,GAAY,GACZE,GAAiB,GACjBI,EAAKR,EAAMoB,UA2BLjH,QAAQ,YAAYX,MAAM,UAAUlB,MAAO,CAAEhD,MAAO,QAAU2K,SAAUA,EAASxI,SAChF4I,KCzDX,MAAM3L,EAAsB,CACxBC,MAAM,EACNC,UAAU,EACVC,cAAeC,EACfC,WAAY,eAGVC,EAAgB,CAClBL,MAAM,EACNC,UAAU,EACVC,cAAeI,EACfF,WAAY,eAGV+M,EAAkB,CAAE9E,QAAS,UAAW/D,aAAc,QAAS3D,MAAO,SAAU0D,OAAQ,SAAU3D,SAAU,SAE5G0M,EAAkB,CAAE/E,QAAS,SAAU/D,aAAc,MAAO3D,MAAO,SAAU0D,OAAQ,SAAU3D,SAAU,SAEzG2M,EAAkBC,YAAOC,IAAPD,CAAkB,CACtC,sBAAuB,CACnBzI,MAAO,SAEX,8BAA+B,CAC3B2I,kBAAmB,SAEvB,2BAA4B,CACxB,aAAc,CACVC,YAAa,WAEjB,mBAAoB,CAChBA,YAAa,SAEjB,yBAA0B,CACtBA,YAAa,YAKV,SAASzC,EAAQK,GAE5B,MAAM,QAACY,GAAWC,cAGZwB,EAAYC,YAAkBZ,IAAed,EAASgB,MAEtD,MAAErB,EAAK,KAAEC,GAASC,YAAoB8B,IAAoB,eAAgB,CAC5E5B,gBAAiB,wBAGd6B,EAAeC,GAAoBvM,oBAAS,IAE5CwM,EAAcC,GAAmBzM,oBAAS,GAEjDsI,qBAAU,KACe,cAAjB+B,EAAM1C,QAGN4E,GAAiB,GAGA,SAAjBlC,EAAM1C,QAEN4E,GAAiB,GAGjBlC,EAAM1C,OAIW,YAAjB0C,EAAM1C,SAEN4E,GAAiB,GAEjBE,GAAgB,MAGrB,CAACpC,EAAOK,IAEX,MAAMgC,EAAQC,cACRC,EAAsB,CACxB7J,aAAc2J,EAAMG,MAAMC,eAC1BjG,gBAAiB,UACjB5D,OAAQ,YACRiJ,YAAa,UACbpF,QAAS,gBACTiG,WAAY,oBACZ3I,SAAU0F,EAAMH,IAAM,QAAU,QAChC9F,WAAY,OACZb,YAAa,OACb2B,UAAW,QAkBf,SAASqI,IACL,MAAmC,WAAhClD,EAAMJ,WAAWlE,IAAItD,OACb,yBAEwB,SAAhC4H,EAAMJ,WAAWlE,IAAItD,OACb,uBAEwB,eAAhC4H,EAAMJ,WAAWlE,IAAItD,OACb,wBAEwB,kBAAhC4H,EAAMJ,WAAWlE,IAAItD,OACb,8BADX,EAIJ,MAAM+K,EAAmB,CACrBC,SAAU,WACVpG,QAAS,gBACT/D,aAAc,MACdlE,WAhCmC,WAAhCiL,EAAMJ,WAAWlE,IAAItD,OACb,sBAEwB,SAAhC4H,EAAMJ,WAAWlE,IAAItD,OACb,oBAEwB,eAAhC4H,EAAMJ,WAAWlE,IAAItD,OACb,qBAEwB,kBAAhC4H,EAAMJ,WAAWlE,IAAItD,OACb,qGADX,EAwBAoB,MAAuC,kBAAhCwG,EAAMJ,WAAWlE,IAAItD,OAA6B,QAAU,QACnEG,SAAU,SACV8K,IAAK,QACLC,KAAM,UACNC,UAAW,iBACXjO,MAAO,gBAIJkO,EAAUC,GAAevN,mBAAS,OASlCN,GAAkB,iBAAEC,IAAsBC,YAASC,MACnD2N,EAA2BC,GAAgCzN,oBAAS,IACpE0N,EAA0BC,GAA+B3N,oBAAS,IAClE4N,EAA0BC,GAA+B7N,mBAAS,KAoBlE8N,EAAiBC,GAAsB/N,mBAAS,KAChDgO,EAAgBC,IAAqBjO,oBAAS,GAWrDsI,qBAAU,KACN2F,GAVyBC,MACzB,IAEI,OADA3K,YAAeuK,IACR,EACT,MAAOK,GACL,OAAO,IAKOD,MACnB,CAACJ,IAEJ,MAIOM,GAAOC,IAAoBrO,mBAAS,OAmCpCF,GAAkBC,IAAuBC,mBAAS,CAAEC,MAAM,EAAOC,SAAS,KAC1EC,GAAiBC,IAAsBJ,mBAAS,KAChDK,GAAkBC,IAAuBN,mBAAS,KAClDO,GAAiBC,IAAsBR,mBAAS,IAiCvD,OAAG8J,EAAMwE,QAED5M,cAAA,OAAKU,MAAO,CAAEU,OAAQ,QAASvB,SAC3BF,eAACkN,IAAG,CAACrL,UAAS,8BAAA/B,OAAgC6L,KAAsB5K,MAAQwK,EAAqBrL,SAAA,CAC7FF,eAAA,OAAKe,MAAO,CAAEoM,WAAY,UAAWjN,SAAA,CACjCG,cAAA,OAAKU,MAAO,CAAEhD,MAAO,OAAQ2D,aAAc2J,EAAMG,MAAMC,eAAgBhJ,UAAW,SAAUiD,aAAc,SAAWxF,SACjHG,cAAA,SAAOwB,UAAU,MAAMuL,aAAW,EAACC,OAAK,EAACC,UAAQ,EAAClQ,MAAI,EAAC2D,MAAO,CAAEhD,MAAO,OAAQ2D,aAAc,MAAO6L,YAAa,KAAMrN,SACnHG,cAAA,UAAQiB,IAAKmH,EAAMJ,WAAWlE,IAAIL,MAAO0J,KAAK,kBAGtDnN,cAAA,OAAKU,MAAO,CAAE8K,SAAU,WAAYpK,OAAQ,IAAK1D,MAAO,KAAKmC,SACzDG,cAAA,OAAKU,MAAO6K,EAAiB1L,SACxBuI,EAAMJ,WAAWlE,IAAItD,WAI9BR,cAACqD,IAAU,CAACd,QAAQ,KAAK7B,MAAO,CAAEe,WAAY,MAAO4D,aAAc,UAAWxF,SACzEuI,EAAMJ,WAAWlE,IAAIN,QAGxB4E,EAAMgF,QAA2B,IAAjBhF,EAAMgF,QAAiC,OAAjBhF,EAAMgF,SAC1CpN,cAAA,OAAKwB,UAAU,mBAAkB3B,SAC7BF,eAAA,OAAK6B,UAAU,kBAAiB3B,SAAA,CAAC,IAC3BuI,EAAMgF,eAMxBzN,eAAA,OAAKe,MAAO,CAAE8K,SAAU,WAAYC,IAAK,IAAKC,KAAM,IAChDhO,MAAO,OAAQ0D,OAAQ,OAAQiM,QAAS,OACxCC,cAAe,SAAUtM,eAAgB,SACzCD,WAAY,SAAUwM,QAAS,OAAQ1N,SAAA,CAEvCG,cAACqD,IAAU,CAAC3C,MAAO,CAAEC,SAAU,QAAQd,SAAC,MAGxCG,cAACqD,IAAU,CAAAxD,SAAC,0BAS7BuI,EAAMoF,KAEDxN,cAAA,OAAAH,SACIF,eAACkN,IAAG,CAACrL,UAAS,mBAAA/B,OAAqB6L,KAAsB5K,MAAO,IAAKwK,EAAqBM,SAAU,YAAa3L,SAAA,CAC7GG,cAAA,OAAKU,MAAO,CAAEhD,MAAO,OAAQ2D,aAAc2J,EAAMG,MAAMC,eAAgBhJ,UAAW,SAAUiD,aAAc,SAAWxF,SACjHG,cAAA,SAAOwB,UAAU,MAAMuL,aAAW,EAACC,OAAK,EAACC,UAAQ,EAAClQ,MAAI,EAAC2D,MAAO,CAAEhD,MAAO,OAAQ2D,aAAc,MAAO6L,YAAa,KAAMrN,SACnHG,cAAA,UAAQiB,IAAKmH,EAAMJ,WAAWlE,IAAIL,MAAO0J,KAAK,kBAGtDnN,cAAA,OAAKU,MAAO,CAAE8K,SAAU,WAAYpK,OAAQ,IAAK1D,MAAO,KAAKmC,SACzDG,cAAA,OAAKU,MAAO6K,EAAiB1L,SACxBuI,EAAMJ,WAAWlE,IAAItD,WAI9Bb,eAACiB,IAAK,CAACC,UAAU,MAAMG,eAAe,gBAAgBD,WAAW,SAASL,MAAO,CAAE2E,aAAc,UAAUxF,SAAA,CACvGF,eAACiB,IAAK,CAAAf,SAAA,CACFG,cAACqD,IAAU,CAACd,QAAQ,KAAK7B,MAAO,CAAEe,WAAY,MAAO4D,aAAc,UAAWxF,SACzEuI,EAAMJ,WAAWlE,IAAIN,OAGO,qBAAxB4E,EAAMJ,WAAWzK,IACtBoC,eAAC0D,IAAU,CAAC3C,MAAO,CAAE6M,QAAS,MAAO5M,SAAU,SAAUyB,UAAW,SAAUvC,SAAA,CAAC,OACtEuI,EAAMJ,WAAWzK,SAKO,qBAAjC6K,EAAMJ,WAAW9B,aACrBvG,eAAAC,WAAA,CAAAC,SAAA,CACIG,cAACqC,IAAM,CAACE,QAAQ,YAAY7B,MAAOwJ,EAAiB1H,QAAUxD,GAAM6M,EAAY7M,EAAEyO,eAAe5N,SAC7FG,cAAA,OAAKiB,IAAI,+BAA+BO,UAAU,UAAUL,IAAI,GAAGT,MAAO,CAAEhD,MAAO,OAAQ6P,QAAS,WAGxGvN,cAAC0N,IAAO,CACJnP,KAAMoP,QAAQ/B,GACdgC,SAAUhC,EACV9I,QAASA,IAAM+I,EAAY,MAC3BgC,aAAc,CAAEC,SAAU,MAAOC,WAAY,QAC7CC,gBAAiB,CAAEF,SAAU,SAAUC,WAAY,UACnDE,WAAY,CACR/I,GAAI,CACAgJ,EAAG,EACHxL,SAAU,MAEhB7C,SAEDuI,EAAMJ,WAAW9B,oBAMR,qBAAjBkC,EAAMgF,QACXpN,cAAA,OAAKwB,UAAU,mBAAkB3B,SAC7BF,eAAA,OAAK6B,UAAU,kBAAiB3B,SAAA,CAAC,IAC3BuI,EAAMgF,YAKpBpN,cAAA,OAAKwB,UAAU,eAAc3B,SACzBG,cAAA,OAAKiB,IAAI,mCAAmCE,IAAI,YAQhExB,eAAA,OAAAE,SAAA,CAEIG,cAACyC,IAAa,CAAClE,KAAMuN,EAA2BpJ,SAAS,KAAKC,QAASC,IAAaC,OAAO,QAAQC,QA9NlEqL,KACrCpC,GAA6B,GAC7BM,EAAmB,KA4N8HxM,SACzIF,eAACqD,IAAa,CAACtC,MAAO,CAAEuC,UAAW,UAAWpD,SAAA,CAC9CG,cAAA,OAAKwB,UAAU,gCAA+B3B,SAC1CG,cAACkD,IAAM,CAACC,QAASrG,EAAqBsG,wBAAsB,MAEhEpD,cAACqD,IAAU,CAACd,QAAQ,KAAI1C,SAAC,yBAIzBG,cAAA,OAAKwB,UAAU,eAAc3B,SACzBF,eAAC0D,IAAU,CAACd,QAAQ,KAAI1C,SAAA,CAAC,mBACLG,cAAA,SAChBA,cAAA,KAAG0B,KAAI,+BAAAjC,OAAiC2M,GAAmBzK,IAAI,aAAavC,OAAO,SAAQS,SACtFqM,cAQjBlM,cAACyC,IAAa,CAAClE,KAAMyN,EAA0BtJ,SAAS,KAAKC,QAASC,IAAaC,OAAO,QAAQC,QA1OlEsL,KACpCnC,GAA4B,IAyOmHpM,SACvIF,eAACqD,IAAa,CAACtC,MAAO,CAAEuC,UAAW,UAAWpD,SAAA,CAC9CG,cAAA,OAAKwB,UAAU,gCAA+B3B,SAC9CG,cAACkD,IAAM,CAACC,QAAS/F,EAAegG,wBAAsB,MAEtDpD,cAACqD,IAAU,CAACd,QAAQ,KAAI1C,SAAC,yBAM7BF,eAACkN,IAAG,CAACrL,UAAS,mBAAA/B,OAAqB6L,KAAsB5K,MAAQwK,EAAqBrL,SAAA,CAC3C,qBAA9BuI,EAAMJ,WAAWhG,UAA4BoG,EAAMiG,mBACxDrO,cAAAJ,WAAA,CAAAC,SACIG,cAAA,OAAKwB,UAAU,mBAAkB3B,SAC7BG,cAAA,OAAKiB,IAAI,sCAAsCE,IAAI,GAAGK,UAAU,sBAAsBd,MAAO,CAAE8K,SAAU,WAAY9N,MAAO,OAAQ4Q,MAAO,UAAW7C,IAAK,iBAKvKzL,cAAA,OAAKU,MAAO,CAAEhD,MAAO,OAAQ2D,aAAc2J,EAAMG,MAAMC,eAAgBhJ,UAAW,SAAUiD,aAAc,SAAWxF,SACjHG,cAAA,SAAOwB,UAAU,MAAMuL,aAAW,EAACC,OAAK,EAACC,UAAQ,EAAClQ,MAAI,EAAC2D,MAAO,CAAEhD,MAAO,OAAQ2D,aAAc,MAAO6L,YAAa,KAAMrN,SACnHG,cAAA,UAAQiB,IAAKmH,EAAMJ,WAAWlE,IAAIL,MAAO0J,KAAK,kBAGtDnN,cAAA,OAAKU,MAAO,CAAE8K,SAAU,WAAYpK,OAAQ,IAAK1D,MAAO,KAAKmC,SACzDG,cAAA,OAAKU,MAAO6K,EAAiB1L,SACxBuI,EAAMJ,WAAWlE,IAAItD,WAI9Bb,eAACiB,IAAK,CAACC,UAAU,MAAMG,eAAe,gBAAgBD,WAAW,SAASL,MAAO,CAAE2E,aAAc,UAAUxF,SAAA,CACvGF,eAACiB,IAAK,CAAAf,SAAA,CACFG,cAACqD,IAAU,CAACd,QAAQ,KAAK7B,MAAO,CAAEe,WAAY,MAAO4D,aAAc,UAAWxF,SACzEuI,EAAMJ,WAAWlE,IAAIN,OAGO,qBAAxB4E,EAAMJ,WAAWzK,IACtBoC,eAAC0D,IAAU,CAAC3C,MAAO,CAAE6M,QAAS,MAAO5M,SAAU,SAAUyB,UAAW,SAAUvC,SAAA,CAAC,OACtEuI,EAAMJ,WAAWzK,SAKO,qBAAjC6K,EAAMJ,WAAW9B,aACrBvG,eAAAC,WAAA,CAAAC,SAAA,CACIG,cAACqC,IAAM,CAACE,QAAQ,YAAY7B,MAAOwJ,EAAiB1H,QAAUxD,GAAM6M,EAAY7M,EAAEyO,eAAe5N,SAC7FG,cAAA,OAAKiB,IAAI,+BAA+BO,UAAU,UAAUL,IAAI,GAAGT,MAAO,CAAEhD,MAAO,OAAQ6P,QAAS,WAGxGvN,cAAC0N,IAAO,CACJnP,KAAMoP,QAAQ/B,GACdgC,SAAUhC,EACV9I,QAASA,IAAM+I,EAAY,MAC3BgC,aAAc,CAAEC,SAAU,MAAOC,WAAY,QAC7CC,gBAAiB,CAAEF,SAAU,SAAUC,WAAY,UACnDE,WAAY,CACR/I,GAAI,CACAgJ,EAAG,EACHxL,SAAU,MAEhB7C,SAEDuI,EAAMJ,WAAW9B,oBAMjCkC,EAAMmG,cAAgBzD,GACnB9K,cAAA,OAAKwB,UAAU,6BAA4B3B,SACvCG,cAACY,IAAK,CAACC,UAAU,MAAMC,QAAS,EAAGE,eAAe,gBAAgBD,WAAW,SAAQlB,SACjFF,eAACiB,IAAK,CAACC,UAAU,MAAMC,QAAS,EAAGJ,MAAO,CAAEhD,MAAO,QAAQmC,SAAA,CACvDG,cAACqC,IAAM,CAACG,QA1RPuD,IACzB4G,GAAiB5G,EAAM0H,gBAyRuClL,QAAQ,YAAYX,MAAM,SAASJ,UAAU,uBAAsB3B,SAAC,aAI1GG,cAAC0N,IAAO,CACJnP,KAAMoP,QAAQjB,IACdkB,SAAUlB,GACV5J,QA7RJ0L,KACxB7B,GAAiB,OA6RWkB,aAAc,CACVC,SAAU,SACVC,WAAY,UAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,UAClBlO,SAEEF,eAACkN,IAAG,CAAC3H,GAAI,CAAEgJ,EAAG,EAAGxL,SAAU,QAAShF,MAAO,QAASmC,SAAA,CAChDG,cAACqD,IAAU,CAACd,QAAQ,YAAYkM,cAAY,EAAA5O,SAAC,wBAI7CG,cAACoK,EAAe,CAACsE,WAAS,EAACvB,KAAK,SAASjF,KAAK,QAAQrC,SArT/D7G,IACvBqN,EAAmBrN,EAAEI,OAAOC,UAsTIM,eAAC0D,IAAU,CAACd,QAAQ,QAAQ2C,GAAI,CAAEtD,MAAO,iBAAkBQ,UAAW,UAAWvC,SAAA,CAC5EuI,EAAMJ,WAAWlE,IAAIN,KAAK,KAAG4E,EAAMJ,WAAWzK,GAAG,OAGtDyC,cAACqC,IAAM,CAACgG,UAAWiE,GAAkB1B,EACjCrI,QAAQ,YAAYX,MAAM,SAC1BY,QAhTjBmM,IACI,KAApBvC,GAA8C,OAApBA,GACzBwC,MAAM,wCACC,GAGPxC,IAAoBpD,GACpB4F,MAAM,uCACC,IAEXhG,EAAKI,EAASoD,EAAiBhE,EAAMJ,WAAWzK,IAEhD4O,EAA4BtK,YAAeuK,SAE3CvB,GAAiB,IAkS4CnK,MAAO,CAAE0B,UAAW,OAAQ1E,MAAO,QAASmC,SAEpE+K,EAAgB,kBAAoB,kBAKjD5K,cAACqC,IAAM,CAACG,QAtSbxD,IACnB,MAAM6P,EAAc3P,KAAKC,MAAMH,EAAEI,OAAOC,OACxCwH,QAAQrH,KAAKqP,GAEbzG,EAAM0G,wBAAwBD,IAkS0BxP,MAAOH,KAAKoD,UAAU8F,EAAMJ,YAAazF,QAAQ,YAAYX,MAAM,UAAUJ,UAAU,uBAAsB3B,SAAC,gBAQpI,qBAAjBuI,EAAMgF,QACXpN,cAAA,OAAKwB,UAAU,mBAAkB3B,SAC7BF,eAAA,OAAK6B,UAAU,kBAAiB3B,SAAA,CAAC,IAC3BuI,EAAMgF,YAMmB,qBAA9BhF,EAAMJ,WAAWhG,UAA4BoG,EAAMiG,mBAExDrO,cAAA,OAAKwB,UAAU,mBAAkB3B,SAC7BG,cAAA,OAAKwB,UAAU,0BAAyB3B,SACpCF,eAACiB,IAAK,CAACC,UAAU,MAAMC,QAAS,EAAGE,eAAe,gBAAgBD,WAAW,SAAQlB,SAAA,CACjFF,eAACiB,IAAK,CAAAf,SAAA,CACFG,cAAA,OAAKwB,UAAU,mBAAkB3B,SAAC,kBAGlCF,eAACiB,IAAK,CAACC,UAAU,MAAME,WAAW,SAASD,QAAS,EAAEjB,SAAA,CAClDF,eAAA,OAAAE,SAAA,CACCyJ,QAAMC,WAAWnB,EAAMJ,WAAWhG,SAASC,OAAO8M,GAAGzF,QAAMC,WAAW,MAAQxH,YAAYqG,EAAMJ,WAAWhG,SAASC,OAASmG,EAAMJ,WAAWhG,SAASC,MAAM,IAAEmG,EAAMJ,WAAWhG,SAASE,YAG/I,QAAvCkG,EAAMJ,WAAWhG,SAASE,UAC1BlC,cAAA,OAAKiB,IAAI,iCAAiCE,IAAI,GAAGT,MAAO,CAAEhD,MAAO,OAAQ0D,OAAQ,OAAQe,WAAY,SAAUkD,aAAc,YAGtF,UAAvC+C,EAAMJ,WAAWhG,SAASE,UAC1BlC,cAAA,OAAKiB,IAAI,mCAAmCE,IAAI,GAAGT,MAAO,CAAEhD,MAAO,OAAQ0D,OAAQ,OAAQe,WAAY,SAAUkD,aAAc,kBAK3IrF,cAACqC,IAAM,CAACE,QAAQ,YAAYlD,MAAOH,KAAKoD,UAAU8F,EAAMJ,YAAatH,MAAOyJ,EAAiB3H,QA1Z9FxD,IACvB,MAAM6P,EAAc3P,KAAKC,MAAMH,EAAEI,OAAOC,OACxC+I,EAAM4G,4BAA4BH,IAwZ8GhP,SACpHG,cAAA,OAAKiB,IAAI,+BAA+BO,UAAU,UAAUL,IAAI,GAAGT,MAAO,CAAEhD,MAAO,OAAQ6P,QAAS,kBAQ/E,qBAAhCnF,EAAMJ,WAAW/D,YAA8BmE,EAAM6G,oBAE1DtP,eAAAC,WAAA,CAAAC,SAAA,CACIG,cAAA,OAAKwB,UAAU,kBAAkBd,MAAO,CAAE2E,aAAc,QAAQxF,SAC5DF,eAACiB,IAAK,CAACC,UAAU,SAASG,eAAe,gBAAenB,SAAA,CACpDG,cAAA,OAAKU,MAAO,CAAEC,SAAU,UAAUd,SAAC,WAInCF,eAACiB,IAAK,CAACC,UAAU,MAAME,WAAW,SAASD,QAAS,EAAEjB,SAAA,CAClDF,eAAA,OAAKe,MAAO,CAAEC,SAAU,OAAQc,WAAY,OAAO5B,SAAA,CAC9CyJ,QAAMC,WAAWnB,EAAMJ,WAAWhG,SAASC,OAAO8M,GAAGzF,QAAMC,WAAW,MAAQxH,YAAYqG,EAAMJ,WAAWhG,SAASC,OAASmG,EAAMJ,WAAWhG,SAASC,MAAM,IAAEmG,EAAMJ,WAAWhG,SAASE,YAGnJ,QAAvCkG,EAAMJ,WAAWhG,SAASE,UAC1BlC,cAAA,OAAKiB,IAAI,iCAAiCE,IAAI,GAAGT,MAAO,CAAEhD,MAAO,SAAU0D,OAAQ,SAAUe,WAAY,SAAUkD,aAAc,YAG1F,UAAvC+C,EAAMJ,WAAWhG,SAASE,UAC1BlC,cAAA,OAAKiB,IAAI,mCAAmCE,IAAI,GAAGT,MAAO,CAAEhD,MAAO,SAAU0D,OAAQ,SAAUe,WAAY,SAAUkD,aAAc,oBAMnJrF,cAACY,IAAK,CAACC,UAAU,MAAMC,QAAS,EAAEjB,SAEU,SAAtCuI,EAAMJ,WAAWhG,SAASE,SACvBuI,GAAaA,EAAUpB,IAAIC,QAAMC,WAAWnB,EAAMJ,WAAWhG,SAASC,QACnEjC,cAACiK,EAAc,CAACT,QAAWpB,EAAMJ,WAAWhG,SAASgC,OAAQ/B,MAAOmG,EAAMJ,WAAWhG,SAASC,MAAO8B,OAAQqE,EAAMJ,WAAWhG,SAAS+B,SAEvI/D,cAACyJ,EAAkB,CAACxH,MAAOmG,EAAMJ,WAAWhG,SAASC,MAAO8B,OAAQqE,EAAMJ,WAAWhG,SAAS+B,SAGlG/D,cAACmI,EAAS,CAACqB,QAAWpB,EAAMJ,WAAWhG,SAASgC,OAAQ/B,MAAOmG,EAAMJ,WAAWhG,SAASC,MAAO8B,OAAQqE,EAAMJ,WAAWhG,SAAS+B,WAK1I/D,cAACyC,IAAa,CAAClE,KAAMH,GAAiBG,KAAMmE,SAAS,KAAKC,QAASC,IAAaC,OAAO,QAAQC,QA/VnFC,KAC5B1E,GAAoB,IAAKD,GAAkBG,MAAM,IACjDG,GAAmB,IACnBI,GAAmB,KA4V6He,SAC5HF,eAACqD,IAAa,CAACtC,MAAO,CAAEuC,UAAW,UAAWpD,SAAA,CAEtCzB,GAAiBI,QAEjBwB,cAAA,OAAKwB,UAAU,gCAA+B3B,SAC1CG,cAACkD,IAAM,CAACC,QAASrG,EAAqBsG,wBAAsB,MAGhEpD,cAAA,OAAKwB,UAAU,gCAA+B3B,SAC1CG,cAACkD,IAAM,CAACC,QAAS/F,EAAegG,wBAAsB,MAI9DpD,cAACqD,IAAU,CAACd,QAAQ,KAAI1C,SACnBpB,KAIDL,GAAiBI,QAEjBwB,cAAA,OAAKwB,UAAU,eAAc3B,SACzBG,cAACqD,IAAU,CAACd,QAAQ,KAAI1C,SACnBlB,OAITqB,cAAA,OAAAH,SACKhB,aASiB,qBAAjCuJ,EAAMJ,WAAWkH,aAA+B9G,EAAM+G,SAE3DnP,cAAAJ,WAAA,CAAAC,SACIG,cAAA,OAAKwB,UAAU,eAAed,MAAO,CAAE2E,aAAc,SAAUjD,UAAW,WAAYvC,SAClFG,cAACY,IAAK,CAACG,WAAW,SAAQlB,SACtBF,eAAA,OAAKe,MAAO,CAAEC,SAAU,SAAUc,WAAY,OAAO5B,SAAA,CACpDyJ,QAAMC,WAAWnB,EAAMJ,WAAWkH,YAAYjN,OAAO8M,GAAGzF,QAAMC,WAAW,MAAQxH,YAAYqG,EAAMJ,WAAWkH,YAAYjN,OAASmG,EAAMJ,WAAWkH,YAAYjN,MAAM,IAAEmG,EAAMJ,WAAWkH,YAAYhN","file":"static/js/17.e3842697.chunk.js","sourcesContent":["import { TableRow, TableCell, Stack, Button, Typography, DialogContent } from '@mui/material';\nimport { shortenAddress, shortenTransactionHash  } from '@usedapp/core';\nimport { useState } from 'react';\nimport Lottie from 'react-lottie';\nimport useSound from 'use-sound';\nimport { DialogAnimate, varZoomInUp } from '../../animate';\n\nimport { fCRCurrency } from '../../../utils/formatNumber';\n\n// assets\nimport SuccessCheckLottie from '../../../assets/lottie/successCheck.json';\nimport FailedLottie from '../../../assets/lottie/failed.json';\n\nimport popDingSound from '../../../assets/sfx/popDing.wav';\n\nconst successCheckOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: SuccessCheckLottie,\n    background: 'transparent'\n};\n\nconst failedOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: FailedLottie,\n    background: 'transparent'\n};\n\nconst LISTINGSCOLUMNS = [\n    { id: 'nft', label: 'NFT', minWidth: 150, width: '20%'},\n    { id: 'seller', label: 'Seller', minWidth: 80, width: '15%'},\n    { id: 'price', label: 'Price', minWidth: 100, align: 'right', width: '10%'},\n    { id: 'buy', label: ' ', minWidth: 150, align: 'right', width: '22%'},\n]\n\nexport default function ListingsTableItem({ items, index }){\n    const [playPopDingSound, { stopPopDingSound }] = useSound(popDingSound);\n\n    // STATUS DIALOG\n    const [openStatusDialog, setOpenStatusDialog] = useState({ open: false, success: false });\n    const [statusDialogMsg, setStatusDialogMsg] = useState('');\n    const [statusDialogInfo, setStatusDialogInfo] = useState('');\n    const [failedStatusMsg, setFailedStatusMsg] = useState('');\n\n    const handleOpenSuccessDialog = (msg, info) => {\n        playPopDingSound();\n        setStatusDialogMsg(msg);\n        setStatusDialogInfo(info);\n        setOpenStatusDialog({ open: true, success: true });\n    }\n\n    const handleOpenFailedDialog = (msg, reason) => {\n        playPopDingSound();\n        setStatusDialogMsg(msg);\n        setFailedStatusMsg(reason);\n        setOpenStatusDialog({ open: true, success: false });\n    }\n\n    const handleCloseStatusDialog = () => {\n        setOpenStatusDialog({ ...openStatusDialog, open: false });\n        setStatusDialogMsg('');\n        setFailedStatusMsg('');\n    }\n\n    const handleBuy = (e) => {\n        const nftData = JSON.parse(e.target.value);\n\n        handleOpenSuccessDialog('Buy NFT Successful', `id: ${nftData.nftId}`)\n        // handleOpenFailedDialog('Buy NFT Failed', 'failed reason here');\n    }\n\n    return(\n        <>\n            {\n                items.map((row, index) => (\n                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={`${index}`}>\n                        {LISTINGSCOLUMNS.map((column, cellIndex) => {\n                            const value = row[column.id];\n\n                            if(column.id === 'nft'){\n                                let nftBorder = '';\n                                if(value.rarity === 'Common'){\n                                    nftBorder = '2px solid var(--shazu-yellow)';\n                                }else if(value.rarity === 'Rare'){\n                                    nftBorder = '2px solid var(--shazu-blue)';\n                                }else if(value.rarity === 'Super Rare'){\n                                    nftBorder = '2px solid var(--shazu-green)';\n                                }else if(value.rarity === 'Ultimate Rare'){\n                                    nftBorder = '2px solid var(--shazu-purple)';\n                                }\n                                return (\n                                    <TableCell align={column.align} key={`${cellIndex}`} style={{ fontSize: '1rem' }}>\n                                        <Stack direction=\"row\" spacing={1} alignItems=\"center\" style={{ justifyContent: column.align }}>\n                                            <img src={value.smallThumbnail} alt='' \n                                                style={{ width: '2rem', height: '2rem', borderRadius: '0.3rem', marginRight: '0.4rem', border: nftBorder }} \n                                            />\n                                            <div className=\"bold\">\n                                                {row.nftId}\n                                            </div>\n                                        </Stack>\n                                    </TableCell>\n                                );\n                            }\n\n                            if(column.id === 'seller'){\n                                return(\n                                    <TableCell align={column.align} key={`${cellIndex}`} style={{ fontWeight: '500'}}>\n                                        <a href={`https://bscscan.com/address/${value}`} target=\"_blank\" rel=\"noreferrer\" style={{ color: 'white', fontSize: '0.9rem' }} >\n                                            {shortenAddress(value)}\n                                        </a>\n                                    </TableCell>\n                                )\n                            }\n\n                            if(column.id === 'price'){\n                                return(\n                                    <TableCell align={column.align} key={`${cellIndex}`} style={{ fontWeight: '500', fontSize: '0.9rem'}}>\n                                        <Stack direction=\"row\" alignItem=\"center\" justifyContent=\"end\" >\n                                            <div>\n                                                {fCRCurrency(row.saleData.price)} {row.saleData.currency}\n                                            </div>\n                                            {\n                                                row.saleData.currency === 'BNB' &&\n                                                <img src=\"/static/SHAZU/icons/ic_bnb.svg\" alt=\"\" style={{ width: '1.2rem', height: '1.2rem', marginLeft: '0.2rem', marginTop: '0.1rem' }}/>\n                                            }\n                                            {\n                                                row.saleData.currency === 'SHAZU' &&\n                                                <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1.2rem', height: '1.2rem', marginLeft: '0.2rem', marginTop: '0.1rem' }} />\n                                            }\n                                        </Stack>\n                                    </TableCell>\n                                )\n                            }\n\n                            if(column.id === 'buy'){\n                                return(\n                                    <TableCell align={column.align} key={`${cellIndex}`} style={{ fontWeight: '500', fontSize: '0.9rem'}}>\n                                        <Button value={JSON.stringify(row)} \n                                            variant=\"contained\" color=\"success\"\n                                            onClick={handleBuy}\n                                        >\n                                            Buy\n                                        </Button>\n                                    </TableCell>\n                                )\n                            }\n\n                            return false;\n                        })}\n                    </TableRow>\n                ))\n            }\n\n            {/* STATUS DIALOG */}\n            <DialogAnimate open={openStatusDialog.open} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseStatusDialog}>\n                <DialogContent style={{ textAlign: 'center' }}>\n                    {\n                        openStatusDialog.success \n                        ?\n                        <div className=\"successCheck-lottie-container\">\n                            <Lottie options={successCheckOptions} isClickToPauseDisabled />\n                        </div>\n                        :\n                        <div className=\"successCheck-lottie-container\">\n                            <Lottie options={failedOptions} isClickToPauseDisabled />\n                        </div>\n                    }\n                    \n                    <Typography variant=\"h3\">\n                        {statusDialogMsg}\n                    </Typography>\n                    \n                    {\n                        openStatusDialog.success \n                        ?\n                        <div className=\"elevate-card\">\n                            <Typography variant=\"h5\">\n                                {statusDialogInfo}\n                            </Typography>\n                        </div>\n                        :\n                        <div>\n                            {failedStatusMsg}\n                        </div>\n                    }\n                </DialogContent>\n            </DialogAnimate>\n        </>\n    )\n}","// material\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer, Pagination, Stack, Typography } from '@mui/material';\nimport { useState } from 'react';\nimport usePaginator from 'react-use-paginator';\n\n// components\nimport ListingsTableItem from './ListingsTableItem';\nimport Scrollbar from '../../Scrollbar';\n\n\nconst LISTINGSCOLUMNS = [\n    { id: 'nft', label: 'NFT', minWidth: 150, width: '20%'},\n    { id: 'seller', label: 'Seller', minWidth: 80, width: '15%'},\n    { id: 'price', label: 'Price', minWidth: 100, align: 'right', width: '10%'},\n    { id: 'buy', label: ' ', minWidth: 150, align: 'right', width: '22%'},\n]\n\nconst NFT_COLLECTION = {\n    common: {\n        name: 'Orange Ninja',\n        rarity: 'Common',\n        video: '/static/SHAZU/nft/ORANGE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_orange.jpg'\n    },\n    rare: {\n        name: 'Blue Ninja',\n        rarity: 'Rare',\n        video: '/static/SHAZU/nft/BLUE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_blue.jpg'\n    },\n    superrare: {\n        name: 'Green Ninja',\n        rarity: 'Super Rare',\n        video: '/static/SHAZU/nft/GREEN_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_green.jpg'\n    },\n    ultimaterare: {\n        name: 'Purple Ninja',\n        rarity: 'Ultimate Rare',\n        video: '/static/SHAZU/nft/PURPLE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_purple.jpg'\n    },\n}\n\nconst DUMMY_LISTINGS_DATA = [\n    {\n        nft: NFT_COLLECTION.ultimaterare,\n        nftId: 'id25125',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        saleData: {\n            saleId: 'ID22910492829',\n            price: '3',\n            currency: 'BNB'\n        },\n        marketData: {\n            floorPrice: '1500',\n            currency: 'SHAZU'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.ultimaterare,\n        nftId: 'id25125',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        saleData: {\n            saleId: 'ID22910492829',\n            price: '3',\n            currency: 'BNB'\n        },\n        marketData: {\n            floorPrice: '1500',\n            currency: 'SHAZU'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.ultimaterare,\n        nftId: 'id25125',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        saleData: {\n            saleId: 'ID22910492829',\n            price: '3',\n            currency: 'BNB'\n        },\n        marketData: {\n            floorPrice: '1500',\n            currency: 'SHAZU'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.ultimaterare,\n        nftId: 'id25125',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        saleData: {\n            saleId: 'ID22910492829',\n            price: '3',\n            currency: 'BNB'\n        },\n        marketData: {\n            floorPrice: '1500',\n            currency: 'SHAZU'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.ultimaterare,\n        nftId: 'id25125',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        saleData: {\n            saleId: 'ID22910492829',\n            price: '3',\n            currency: 'BNB'\n        },\n        marketData: {\n            floorPrice: '1500',\n            currency: 'SHAZU'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.ultimaterare,\n        nftId: 'id25125',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        saleData: {\n            saleId: 'ID22910492829',\n            price: '3',\n            currency: 'BNB'\n        },\n        marketData: {\n            floorPrice: '1500',\n            currency: 'SHAZU'\n        }\n    }\n]\n\nexport default function ListingsTable(){\n    // PAGINATION\n    const { Component: ListingsTableItemComponent, nextPage, prevPage, setPageIndex, totalPages } = usePaginator({\n        PageComponent: ListingsTableItem,\n        maxPerPage: 4,\n        data: DUMMY_LISTINGS_DATA\n    });\n\n    const [paginationPage, setPaginationPage] = useState(1);\n    const handlePaginationChange = (event, value) => {\n        setPaginationPage(value);\n        setPageIndex(value);\n    }    \n\n    return (\n        <>\n            <Scrollbar>\n                <TableContainer sx={{ minWidth: '700px', width: '100%' , backgroundColor: '#1C1C1C', border: 'solid 1px #3B3B3B', borderRadius: '8px', padding: '1rem', marginTop: '1rem' }} style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n                    <Typography variant=\"h5\" style={{ marginBottom: '0.4rem' }}>\n                        Listings\n                    </Typography>\n                    <Table>\n                        <TableHead sx={{  backgroundColor: '#1C1C1C', borderRadius: '12px' }}>\n                            <TableRow> \n                            {LISTINGSCOLUMNS.map((column) => (\n                                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth, width: column.width, boxShadow: 'none'}} sx={{ background: '#272727', fontSize: '1rem', color: 'white' }}>\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                            </TableRow>\n                        </TableHead>\n\n                        <TableBody>\n                            <ListingsTableItemComponent />\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Scrollbar>\n            <Stack style={{  width: '100%', marginTop: '1rem' }} alignItems=\"center\" >\n                <Pagination \n                    color=\"yellow\" \n                    count={totalPages} page={paginationPage}\n                    onChange={handlePaginationChange}\n                />\n            </Stack>\n        </>\n    );\n}","import { useParams, NavLink as RouterLink  } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Container, Link, Typography, Button, Grid, Stack, DialogContent } from '@mui/material';\nimport { shortenAddress, shortenTransactionHash  } from '@usedapp/core';\nimport Lottie from 'react-lottie';\nimport useSound from 'use-sound';\n\n// components\nimport { varFadeInUp, MotionInView, DialogAnimate, varZoomInUp } from '../../components/animate';\nimport NFTCard from '../../components/main/NFTCard';\nimport ListingsTable from '../../components/main/marketplace/ListingsTable';\n\n// assets\nimport SuccessCheckLottie from '../../assets/lottie/successCheck.json';\nimport FailedLottie from '../../assets/lottie/failed.json';\nimport popDingSound from '../../assets/sfx/popDing.wav';\n\nconst successCheckOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: SuccessCheckLottie,\n    background: 'transparent'\n};\n\nconst failedOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: FailedLottie,\n    background: 'transparent'\n};\n\nconst NFT_COLLECTION = {\n    common: {\n        name: 'Orange Ninja',\n        rarity: 'Common',\n        video: '/static/SHAZU/nft/ORANGE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_orange.jpg'\n    },\n    rare: {\n        name: 'Blue Ninja',\n        rarity: 'Rare',\n        video: '/static/SHAZU/nft/BLUE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_blue.jpg'\n    },\n    superrare: {\n        name: 'Green Ninja',\n        rarity: 'Super Rare',\n        video: '/static/SHAZU/nft/GREEN_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_green.jpg'\n    },\n    ultimaterare: {\n        name: 'Purple Ninja',\n        rarity: 'Ultimate Rare',\n        video: '/static/SHAZU/nft/PURPLE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_purple.jpg'\n    },\n}\n\nconst DUMMY_LISTING_DETAIL_DATA =  {\n    nft: NFT_COLLECTION.ultimaterare,\n    nftId: 'id22925',\n    status: 'listed',\n    description: 'Lorem ipsum dolor sit amet, consectetur',\n    owner: '0x29a97C6EfFB8A411DABc6aDEEfaa84f5067C8bbe',\n    saleData: {\n        saleId: 'ID29282637361',\n        price: '6000',\n        currency: 'SHAZU'\n    },\n    marketData: {\n        floorPrice: '1500',\n        currency: 'SHAZU'\n    }\n}\n\nexport default function ListingDetailPage(){\n    const { nftId } = useParams();\n\n    const [invalidId, setInvalidId] = useState(false);\n    const [loadedNftDetailData, setLoadedNFTDetailData] = useState(false);\n    const [nftDetailData, setNftDetailData] = useState('');\n\n    const handleGetDetailData = (id) => {\n        console.info(`nftId: ${id}`)\n\n        // if the nftId is invalid\n        // setInvalidId(true);\n\n        setNftDetailData(DUMMY_LISTING_DETAIL_DATA);\n        setLoadedNFTDetailData(true);\n    }\n\n    useEffect(() => {\n        handleGetDetailData(nftId);\n    }, []);\n\n\n    const [playPopDingSound, { stopPopDingSound }] = useSound(popDingSound);\n\n    // STATUS DIALOG\n    const [openStatusDialog, setOpenStatusDialog] = useState({ open: false, success: false });\n    const [statusDialogMsg, setStatusDialogMsg] = useState('');\n    const [statusDialogInfo, setStatusDialogInfo] = useState('');\n    const [failedStatusMsg, setFailedStatusMsg] = useState('');\n\n    const handleOpenSuccessDialog = (msg, info) => {\n        playPopDingSound();\n        setStatusDialogMsg(msg);\n        setStatusDialogInfo(info);\n        setOpenStatusDialog({ open: true, success: true });\n    }\n\n    const handleOpenFailedDialog = (msg, reason) => {\n        playPopDingSound();\n        setStatusDialogMsg(msg);\n        setFailedStatusMsg(reason);\n        setOpenStatusDialog({ open: true, success: false });\n    }\n\n    const handleCloseStatusDialog = () => {\n        setOpenStatusDialog({ ...openStatusDialog, open: false });\n        setStatusDialogMsg('');\n        setFailedStatusMsg('');\n    }\n\n    const handleBuy = (e) => {\n        const nftData = JSON.parse(e.target.value);\n\n        handleOpenSuccessDialog('Buy NFT Successful', `id: ${nftData.nftId}`)\n        // handleOpenFailedDialog('Buy NFT Failed', 'failed reason here');\n    }\n\n    return(\n        <> \n            <Container maxWidth=\"xl\">\n                <MotionInView variants={varFadeInUp}>\n                    <Link className=\"no-hover-line\" to=\"/marketplace\" component={RouterLink}>\n                        <Button variant=\"contained\" color=\"purple\">\n                            Back to Marketplace\n                        </Button>\n                    </Link>\n\n                    <Typography variant=\"h3\" style={{ marginTop: '2rem' }}>\n                        Listing Detail\n                    </Typography>\n                </MotionInView>\n\n                <Stack>\n                    {\n                        loadedNftDetailData &&\n                        <>\n                            <MotionInView variants={varFadeInUp}>\n                                <Grid container spacing={4} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\" style={{ paddingTop: '2rem', paddingBottom: '2rem' }}>\n                                    <Grid item xs={12} md={12} lg={4} xl={4}> \n                                        <NFTCard\n                                            collection={nftDetailData}\n                                            big\n                                        />\n                                    </Grid>\n\n                                    <Grid item xs={12} md={12} lg={8} xl={8}> \n                                        <Stack spacing={3}>\n                                            <div className=\"elevate-card-sm\" style={{ padding: '1rem'}}>\n                                                Owner: {\" \"}\n                                                <a href={`https://bscscan.com/address/${nftDetailData.owner}`} target=\"_blank\" rel=\"noreferrer\" className=\"bold\" >\n                                                    {shortenAddress(nftDetailData.owner)}\n                                                </a>\n                                            </div>\n\n                                            <div className=\"elevate-card-sm\" style={{ padding: '1rem'}}>\n                                                <Stack>\n                                                    <div>\n                                                        Listed Price:\n                                                    </div>\n\n                                                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                                                    <Typography variant=\"h4\">\n                                                        {nftDetailData.saleData.price} {nftDetailData.saleData.currency}\n                                                    </Typography>\n                                                        {\n                                                            nftDetailData.saleData.currency === 'BNB' &&\n                                                            <img src=\"/static/SHAZU/icons/ic_bnb.svg\" alt=\"\" style={{ width: '1.5rem', height: '1.5rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }}/>\n                                                        }\n                                                        {\n                                                            nftDetailData.saleData.currency === 'SHAZU' &&\n                                                            <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1.5rem', height: '1.5rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }} />\n                                                        }\n                                                    </Stack>\n\n                                                    <Stack direction=\"column\" justifyContent=\"space-between\" style={{ marginBottom: '0.8rem', marginTop: '0.4rem'}} >\n                                                        <div className=\"elevate-card-sm\" style={{ fontSize: '1rem', width: 'fit-content'}}>\n                                                            Floor Price: {\" \"}\n                                                            <Stack direction=\"row\" alignItems=\"center\">\n                                                                <span style={{ fontWeight: '700' }}>\n                                                                    {nftDetailData.marketData.floorPrice} {nftDetailData.marketData.currency}\n                                                                </span>\n                                                                {\n                                                                    nftDetailData.marketData.currency === 'BNB' &&\n                                                                    <img src=\"/static/SHAZU/icons/ic_bnb.svg\" alt=\"\" style={{ width: '1.2rem', height: '1.2rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }}/>\n                                                                }\n                                                                {\n                                                                    nftDetailData.marketData.currency === 'SHAZU' &&\n                                                                    <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1.2rem', height: '1.2rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }} />\n                                                                }\n                                                            </Stack>\n                                                        </div>\n                                                    </Stack>\n\n                                                    <Stack direction=\"row\" spacing={2} style={{ marginTop: '0.4rem', marginBottom: '1rem' }}>\n                                                        <Button \n                                                            value={JSON.stringify(nftDetailData)}\n                                                            onClick={handleBuy}\n                                                            size=\"large\" variant=\"contained\" color=\"success\"\n                                                        >\n                                                            Buy Now\n                                                        </Button>\n                                                    </Stack>\n\n                                                    <ListingsTable />\n                                                </Stack>\n                                            </div>\n                                        </Stack>\n                                    </Grid>\n                                </Grid>\n                            </MotionInView> \n\n                            {/* STATUS DIALOG */}\n                            <DialogAnimate open={openStatusDialog.open} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseStatusDialog}>\n                                <DialogContent style={{ textAlign: 'center' }}>\n                                    {\n                                        openStatusDialog.success \n                                        ?\n                                        <div className=\"successCheck-lottie-container\">\n                                            <Lottie options={successCheckOptions} isClickToPauseDisabled />\n                                        </div>\n                                        :\n                                        <div className=\"successCheck-lottie-container\">\n                                            <Lottie options={failedOptions} isClickToPauseDisabled />\n                                        </div>\n                                    }\n                                    \n                                    <Typography variant=\"h3\">\n                                        {statusDialogMsg}\n                                    </Typography>\n                                    \n                                    {\n                                        openStatusDialog.success \n                                        ?\n                                        <div className=\"elevate-card\">\n                                            <Typography variant=\"h5\">\n                                                {statusDialogInfo}\n                                            </Typography>\n                                        </div>\n                                        :\n                                        <div>\n                                            {failedStatusMsg}\n                                        </div>\n                                    }\n                                </DialogContent>\n                            </DialogAnimate>\n                        </>\n                    }\n\n                    {\n                        invalidId \n                        &&\n                        <MotionInView variants={varFadeInUp}>\n                            <Typography variant=\"h5\" style={{ fontWeight: '500' }}>\n                                The NFT with this ID isn't listed.\n                            </Typography>\n                        </MotionInView>\n                    }\n                </Stack>\n            </Container> \n        </>\n    )\n}","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers, useEtherBalance } from '@usedapp/core';\n\nimport { SHAZU_MARKETPLACE_CONTRACT} from '../config';\n\nconst BuyButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [usingDisabled, setUsingDisabled] = useState(false)\n\n  const [buttonText, setButtonText] = useState('BUY');\n\n  const { state, send } = useContractFunction(SHAZU_MARKETPLACE_CONTRACT, 'fillOffer', { transactionName: 'Fill Offer' });\n\n  const { account } = useEthers()\n\n  const balance = useEtherBalance(account)\n\n  \n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n      setDisabled(false)\n      setUsingDisabled(false)\n      setButtonText('BUY');\n    }\n\n    if (state.status === 'None') {\n\n    }\n\n    if (state.status === 'Success') {\n      setButtonText('BOUGHT');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setUsingDisabled(true)\n      setButtonText('BUYING..');\n    }\n  }, [state]);\n\n  const handleBuy = () => {\n    setDisabled(true)\n    setUsingDisabled(true)\n    send(props.tokenId, {value:utils.parseEther(props.price)});\n  };\n\n  useEffect(() => {\n    if (!account || (account.toLowerCase() === props.seller.toLowerCase())) {\n\n      if (!usingDisabled) {\n        setDisabled(true)\n      }\n    } else {\n      if (account && balance && balance.gte(utils.parseEther(props.price))) {\n        if (!usingDisabled) {\n          setDisabled(false)\n        }\n      } else {\n        if (!usingDisabled) {\n          setDisabled(true)\n        }\n      }\n    }\n\n  \n  }, [account, props.seller, balance]);\n\n\n  return (\n      <Button onClick={handleBuy} \n          variant=\"contained\" color=\"success\" style={{ width: '100%' }} disabled={disabled}>\n          {buttonText}\n      </Button>\n  );\n};\n\nexport default BuyButton;\n","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers, useTokenBalance } from '@usedapp/core';\n\nimport { SHAZU_CONTRACT, SHAZU_ADDRESS, SHAZU_MARKETPLACE_ADDRESS} from '../config';\n\n\nconst ApproveShazuButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [usingDisabled, setUsingDisabled] = useState(false)\n\n  const [buttonText, setButtonText] = useState('APPROVE SHAZU');\n\n  const { state, send } = useContractFunction(SHAZU_CONTRACT, 'approve', { transactionName: 'Approve SHAZU' });\n\n  const { account } = useEthers()\n\n  const value = constants.MaxUint256\n\n  const balance = useTokenBalance(SHAZU_ADDRESS, account)\n\n\n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n      setDisabled(false)\n      setUsingDisabled(false)\n      setButtonText('APPROVE SHAZU');\n    }\n\n    if (state.status === 'None') {\n\n    }\n\n    if (state.status === 'Success') {\n      setButtonText('APPROVED');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setUsingDisabled(true)\n      setButtonText('APPROVING..');\n    }\n  }, [state]);\n\n  const handleApprove = () => {\n    setDisabled(true)\n    setUsingDisabled(true)\n    send(SHAZU_MARKETPLACE_ADDRESS, value);\n  };\n\n\n  useEffect(() => {\n    if (!account || (account.toLowerCase() === props.seller.toLowerCase())) {\n\n      if (!usingDisabled) {\n        setDisabled(true)\n      }\n    } else {\n      if (account && balance && balance.gte(utils.parseEther(props.price))) {\n        if (!usingDisabled) {\n          setDisabled(false)\n        }\n      } else {\n        if (!usingDisabled) {\n          setDisabled(true)\n        }\n      }\n    }\n\n  \n  }, [account, props.seller, balance]);\n\n  return (\n      <Button onClick={handleApprove} \n          variant=\"contained\" color=\"success\" style={{ width: '100%' }} disabled={disabled}>\n          {buttonText}\n      </Button>\n  );\n};\n\nexport default ApproveShazuButton;\n","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers, useTokenBalance } from '@usedapp/core';\n\nimport { SHAZU_CONTRACT, SHAZU_ADDRESS, SHAZU_MARKETPLACE_ADDRESS, SHAZU_MARKETPLACE_CONTRACT} from '../config';\n\n\nconst BuyShazuButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [usingDisabled, setUsingDisabled] = useState(false)\n\n  const [buttonText, setButtonText] = useState('BUY');\n\n  const { state, send } = useContractFunction(SHAZU_MARKETPLACE_CONTRACT, 'fillOffer', { transactionName: 'Fill Offer' });\n\n  const { account } = useEthers()\n\n  const value = constants.MaxUint256\n\n  const balance = useTokenBalance(SHAZU_ADDRESS, account)\n\n\n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n      setDisabled(false)\n      setUsingDisabled(false)\n      setButtonText('BUY');\n    }\n\n    if (state.status === 'None') {\n\n    }\n\n    if (state.status === 'Success') {\n      setButtonText('BOUGHT');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setUsingDisabled(true)\n      setButtonText('BUYING..');\n    }\n  }, [state]);\n\n  const handleBuy = () => {\n    setDisabled(true)\n    setUsingDisabled(true)\n    send(props.tokenId);\n  };\n\n\n  useEffect(() => {\n    if (!account || (account.toLowerCase() === props.seller.toLowerCase())) {\n\n      if (!usingDisabled) {\n        setDisabled(true)\n      }\n    } else {\n      if (account && balance && balance.gte(utils.parseEther(props.price))) {\n        if (!usingDisabled) {\n          setDisabled(false)\n        }\n      } else {\n        if (!usingDisabled) {\n          setDisabled(true)\n        }\n      }\n    }\n\n  \n  }, [account, props.seller, balance]);\n\n  return (\n      <Button onClick={handleBuy} \n          variant=\"contained\" color=\"success\" style={{ width: '100%' }} disabled={disabled}>\n          {buttonText}\n      </Button>\n  );\n};\n\nexport default BuyShazuButton;\n","import { styled, useTheme  } from '@mui/material/styles';\nimport { useEffect, useState } from 'react';\nimport { utils, BigNumber, constants} from 'ethers'\nimport Lottie from 'react-lottie';\nimport { Box, Link, Typography, Stack, Popover, Button, TextField, DialogContent } from '@mui/material';\nimport useSound from 'use-sound';\nimport { shortenAddress, shortenIfAddress } from '@usedapp/core';\nimport { NavLink, NavLink as RouterLink } from 'react-router-dom';\n\nimport { fCRCurrency } from '../../utils/formatNumber';\n\n// components\nimport { DialogAnimate, varZoomInUp } from '../animate';\n\nimport SuccessCheckLottie from '../../assets/lottie/successCheck.json';\nimport FailedLottie from '../../assets/lottie/failed.json';\nimport popDingSound from '../../assets/sfx/popDing.wav';\nimport { useEthers, useContractFunction, useTokenAllowance} from '@usedapp/core';\nimport { SHAZU_ADDRESS, SHAZU_MARKETPLACE_ADDRESS, SHAZU_NFT_CONTRACT} from '../../config'\nimport BuyButton from '../BuyButton';\nimport ApproveShazuButton from '../ApproveShazuButton';\nimport BuyShazuButton from '../BuyShazuButton';\n\nconst successCheckOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: SuccessCheckLottie,\n    background: 'transparent'\n};\n\nconst failedOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: FailedLottie,\n    background: 'transparent'\n};\n\nconst infoButtonStyle = { padding: '0.25rem', borderRadius: '10rem', width: '2.4rem', height: '2.4rem', minWidth: 'unset'}\n\nconst editButtonStyle = { padding: '0.4rem', borderRadius: '8px', width: '2.2rem', height: '2.2rem', minWidth: 'unset'}\n\nconst CustomTextField = styled(TextField)({\n    '& label.Mui-focused': {\n        color: 'white',\n    },\n    '& .MuiInput-underline:after': {\n        borderBottomColor: 'white',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: '#3B3B3B',\n        },\n        '&:hover fieldset': {\n            borderColor: 'white',\n        },\n        '&.Mui-focused fieldset': {\n            borderColor: 'white',\n        },\n    },\n});\n\nexport default function NFTCard(props){\n\n    const {account} = useEthers()\n\n\n    const allowance = useTokenAllowance(SHAZU_ADDRESS, account, SHAZU_MARKETPLACE_ADDRESS)\n\n    const { state, send } = useContractFunction(SHAZU_NFT_CONTRACT, 'transferFrom', {\n        transactionName: 'Transfer SHAZU NFT'\n    });\n\n    const [isTransfering, setisTransfering] = useState(false)\n\n    const [isTransfered, setIsTransfered] = useState(false)\n\n    useEffect(() => {\n        if (state.status === 'Exception') {\n\n\n            setisTransfering(false)\n        }\n    \n        if (state.status === 'Fail') {\n\n            setisTransfering(false)\n        }\n    \n        if (state.status === 'None') {\n\n        }\n    \n        if (state.status === 'Success') {\n\n            setisTransfering(true)\n\n            setIsTransfered(true)\n        }\n    \n    }, [state, account]);\n\n    const theme = useTheme();\n    const collectionCardStyle = {\n        borderRadius: theme.shape.borderRadiusMd,\n        backgroundColor: '#1C1C1C',\n        border: 'solid 1px',\n        borderColor: '#3B3B3B',\n        padding: '0.5rem 0.8rem',\n        transition: 'border-color 0.3s',\n        maxWidth: props.big ? '25rem' : '17rem',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        textAlign: 'left'\n    }\n\n    function getRarityColor(){\n        if(props.collection.nft.rarity === 'Common'){\n            return 'var(--shazu-yellow)';\n        }\n        if(props.collection.nft.rarity === 'Rare'){\n            return 'var(--shazu-blue)';\n        }\n        if(props.collection.nft.rarity === 'Super Rare'){\n            return 'var(--shazu-green)';\n        }\n        if(props.collection.nft.rarity === 'Ultimate Rare'){\n            return 'linear-gradient(90deg, rgba(236,35,255,1) 0%, rgba(166,37,255,1) 34%, rgba(173,0,255,1) 100%)';\n        }\n    }\n\n    function getGradientClass(){\n        if(props.collection.nft.rarity === 'Common'){\n            return 'gradient-border-yellow';\n        }\n        if(props.collection.nft.rarity === 'Rare'){\n            return 'gradient-border-blue';\n        }\n        if(props.collection.nft.rarity === 'Super Rare'){\n            return 'gradient-border-green';\n        }\n        if(props.collection.nft.rarity === 'Ultimate Rare'){\n            return 'gradient-border-purple';\n        }\n    }\n    const rarityLabelStyle = {\n        position: 'absolute', \n        padding: '0.1rem 0.5rem', \n        borderRadius: '4px', \n        background: getRarityColor(), \n        color: props.collection.nft.rarity !== 'Ultimate Rare' ? 'black' : 'white', \n        fontSize: '0.8rem', \n        top: '-3rem', \n        left: '-0.5rem', \n        transform: 'rotate(-12deg)',\n        width: 'max-content'\n    }\n\n\n    const [infoOpen, setInfoOpen] = useState(null);\n    \n    // EDIT LISTING\n    const handleEditListing = (e) => {        \n        const listingData = JSON.parse(e.target.value);\n        props.handleOpenEditListingDialog(listingData);\n    }\n\n    // TRANSFER\n    const [playPopDingSound, { stopPopDingSound }] = useSound(popDingSound);\n    const [openSuccessTransferDialog, setOpenSuccessTransferDialog] = useState(false);\n    const [openFailedTransferDialog, setOpenFailedTransferDialog] = useState(false);\n    const [shortenedTransferAddress, setShortenedTransferAddress] = useState('');\n    \n\n\n    const handleOpenSuccessTransferDialog = () => {\n        setOpenSuccessTransferDialog(true);\n    }\n    const handleCloseSuccessTransferDialog = () => {\n        setOpenSuccessTransferDialog(false);\n        setTransferAddress('');\n    }\n\n\n    const handleOpenFailedTransferDialog = () => {\n        setOpenFailedTransferDialog(true);\n    }\n    const handleCloseFailedTransferDialog = () => {\n        setOpenFailedTransferDialog(false);\n    }\n\n    const [transferAddress, setTransferAddress] = useState('');\n    const [isValidAddress, setIsValidAddress] = useState(false);\n\n    const checkTransferAddress = () => {\n        try {\n            shortenAddress(transferAddress);\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    useEffect(() => {\n        setIsValidAddress(checkTransferAddress());\n    }, [transferAddress]);\n\n    const handleInputChange = (e) => {\n        setTransferAddress(e.target.value);\n    }\n\n    const [click, setCLickTransfer] = useState(null);\n    const handleClickTransfer = (event) => {\n        setCLickTransfer(event.currentTarget);\n    };\n\n    const handleCloseTransfer = () => {\n        setCLickTransfer(null);\n    };\n\n    const handleTransfer = () => {\n        if(transferAddress === '' || transferAddress === null){\n            alert('Fill the Destination Address first!');\n            return false;\n        }\n\n        if (transferAddress === account) {\n            alert('You cannot send token to yourself!');\n            return false;\n        }\n        send(account, transferAddress, props.collection.id)\n\n        setShortenedTransferAddress(shortenAddress(transferAddress));\n\n        setisTransfering(true)\n    }\n\n    const handleListing = (e) => {\n        const listingData = JSON.parse(e.target.value);\n        console.info(listingData);\n\n        props.handleOpenListingDialog(listingData);\n    }\n\n    // BUY NFT\n    // STATUS DIALOG\n    const [openStatusDialog, setOpenStatusDialog] = useState({ open: false, success: false });\n    const [statusDialogMsg, setStatusDialogMsg] = useState('');\n    const [statusDialogInfo, setStatusDialogInfo] = useState('');\n    const [failedStatusMsg, setFailedStatusMsg] = useState('');\n\n    const handleOpenSuccessDialog = (msg, info) => {\n        playPopDingSound();\n        setStatusDialogMsg(msg);\n        setStatusDialogInfo(info);\n        setOpenStatusDialog({ open: true, success: true });\n    }\n\n    const handleOpenFailedDialog = (msg, reason) => {\n        playPopDingSound();\n        /*setStatusDialogMsg(msg);\n        setFailedStatusMsg(reason);\n        setOpenStatusDialog({ open: true, success: true });\n        */\n        setStatusDialogMsg(msg);\n        setStatusDialogInfo(reason);\n        setOpenStatusDialog({ open: true, success: true });\n    }\n\n    const handleCloseStatusDialog = () => {\n        setOpenStatusDialog({ ...openStatusDialog, open: false });\n        setStatusDialogMsg('');\n        setFailedStatusMsg('');\n    }\n\n    const handleBuy = (e) => {\n        const nftData = JSON.parse(e.target.value);\n\n        //handleOpenSuccessDialog('Buy NFT Successful', `id: ${nftData.nftId}`)\n        // handleOpenFailedDialog('Buy NFT Failed', 'failed reason here');\n    }\n\n    if(props.unknown){\n        return(\n            <div style={{ height: '100%' }}>\n                <Box className={`gradient-border p-relative ${getGradientClass()}`} style={ collectionCardStyle }>\n                    <div style={{ visibility: 'hidden' }}>\n                        <div style={{ width: '100%', borderRadius: theme.shape.borderRadiusMd, marginTop: '0.5rem', marginBottom: '0.5em'  }} >\n                            <video className=\"vid\" playsInline muted autoPlay loop style={{ width: '100%', borderRadius: '8px', aspectRatio: '1' }} >\n                                <source src={props.collection.nft.video} type=\"video/mp4\"/>\n                            </video>\n                        </div>\n                        <div style={{ position: 'relative', height: '0', width: '0'}}>\n                            <div style={rarityLabelStyle}>\n                                {props.collection.nft.rarity}\n                            </div>\n                        </div>\n        \n                        <Typography variant=\"h6\" style={{ fontWeight: '700', marginBottom: '0.8rem' }}>\n                            {props.collection.nft.name}\n                        </Typography>\n        \n                        {(props.amount || props.amount !== 0 || props.amount !== null) &&\n                            <div className=\"p-relative w-100\">\n                                <div className=\"nft-card-amount\">\n                                    x{props.amount}\n                                </div>\n                            </div>\n                        }\n                    </div>\n\n                    <div style={{ position: 'absolute', top: '0', left: '0', \n                        width: '100%', height: '100%', display: 'flex', \n                        flexDirection: 'column', justifyContent: 'center', \n                        alignItems: 'center', opacity: '0.2' }}\n                    >\n                        <Typography style={{ fontSize: '4rem'}}>\n                            ?\n                        </Typography>\n                        <Typography>\n                            Not owned yet\n                        </Typography>\n                    </div>\n                </Box>\n            </div>\n        )\n    }\n\n    if(props.sold){\n        return(\n            <div>\n                <Box className={`gradient-border ${getGradientClass()}`} style={{ ...collectionCardStyle, position: 'relative' }}>\n                    <div style={{ width: '100%', borderRadius: theme.shape.borderRadiusMd, marginTop: '0.5rem', marginBottom: '0.5em'  }} >\n                        <video className=\"vid\" playsInline muted autoPlay loop style={{ width: '100%', borderRadius: '8px', aspectRatio: '1' }} >\n                            <source src={props.collection.nft.video} type=\"video/mp4\"/>\n                        </video>\n                    </div>\n                    <div style={{ position: 'relative', height: '0', width: '0'}}>\n                        <div style={rarityLabelStyle}>\n                            {props.collection.nft.rarity}\n                        </div>\n                    </div>\n    \n                    <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" style={{ marginBottom: '0.8rem'}} >\n                        <Stack>\n                            <Typography variant=\"h6\" style={{ fontWeight: '700', marginBottom: '0.8rem' }}>\n                                {props.collection.nft.name}\n                            </Typography>\n\n                            {(typeof props.collection.id !== 'undefined') &&\n                                <Typography style={{ opacity: '0.5', fontSize: '0.8rem', marginTop: '-1rem' }}>\n                                    id: {props.collection.id}\n                                </Typography>\n                            }\n                        </Stack>\n\n                        {typeof props.collection.description !== 'undefined' &&\n                            <>\n                                <Button variant=\"container\" style={infoButtonStyle} onClick={(e) => setInfoOpen(e.currentTarget)}>\n                                    <img src=\"/static/SHAZU/icons/info.svg\" className=\"pe-none\" alt=\"\" style={{ width: '100%', opacity: '0.5' }} />\n                                </Button>\n                                \n                                <Popover\n                                    open={Boolean(infoOpen)}\n                                    anchorEl={infoOpen}\n                                    onClose={() => setInfoOpen(null)}\n                                    anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                                    transformOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                                    PaperProps={{\n                                        sx: {\n                                            p: 1,\n                                            maxWidth: 200\n                                        }\n                                    }}\n                                >\n                                    {props.collection.description}\n                                </Popover>\n                            </>\n                        }   \n                    </Stack>\n    \n                    {(typeof props.amount !== 'undefined') &&\n                        <div className=\"p-relative w-100\">\n                            <div className=\"nft-card-amount\">\n                                x{props.amount}\n                            </div>\n                        </div>\n                    }\n\n                    <div className=\"sold-overlay\">\n                        <img src=\"/static/SHAZU/misc/sold-tape.png\" alt=\"\" />\n                    </div>\n                </Box>\n            </div>\n        )\n    }\n\n    return(\n        <div>\n            {/* TRANSFER DIALOG */}\n            <DialogAnimate open={openSuccessTransferDialog} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseSuccessTransferDialog}>\n                <DialogContent style={{ textAlign: 'center' }}>\n                <div className=\"successCheck-lottie-container\">\n                    <Lottie options={successCheckOptions} isClickToPauseDisabled />\n                </div>\n                <Typography variant=\"h3\">\n                    Transfer Successful!\n                </Typography>\n                \n                <div className=\"elevate-card\">\n                    <Typography variant=\"h6\">\n                        Transferred to: <br/> \n                        <a href={`https://bscscan.com/address/${transferAddress}`} rel=\"noreferrer\" target=\"_blank\">\n                            {shortenedTransferAddress}\n                        </a>\n                    </Typography>\n                </div>\n                </DialogContent>\n            </DialogAnimate>\n\n            {/* TRANSFER DIALOG FAILED */}\n            <DialogAnimate open={openFailedTransferDialog} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseFailedTransferDialog}>\n                <DialogContent style={{ textAlign: 'center' }}>\n                <div className=\"successCheck-lottie-container\">\n                <Lottie options={failedOptions} isClickToPauseDisabled />\n                </div>\n                <Typography variant=\"h3\">\n                    Transfer Failed\n                </Typography>\n                </DialogContent>\n            </DialogAnimate>\n\n            <Box className={`gradient-border ${getGradientClass()}`} style={ collectionCardStyle }>\n                {(typeof props.collection.saleData !== 'undefined' && props.editListingAction) &&\n                    <>\n                        <div className=\"p-relative w-100\">\n                            <img src=\"/static/SHAZU/misc/sale-sticker.svg\" alt=\"\" className=\"swing-rotate-normal\" style={{ position: 'absolute', width: '6rem', right: '-2.4rem', top: '-2.4rem' }} />\n                        </div>\n                    </>\n                }\n\n                <div style={{ width: '100%', borderRadius: theme.shape.borderRadiusMd, marginTop: '0.5rem', marginBottom: '0.5em'  }} >\n                    <video className=\"vid\" playsInline muted autoPlay loop style={{ width: '100%', borderRadius: '8px', aspectRatio: '1' }} >\n                        <source src={props.collection.nft.video} type=\"video/mp4\"/>\n                    </video>\n                </div>\n                <div style={{ position: 'relative', height: '0', width: '0'}}>\n                    <div style={rarityLabelStyle}>\n                        {props.collection.nft.rarity}\n                    </div>\n                </div>\n\n                <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" style={{ marginBottom: '0.8rem'}} >\n                    <Stack>\n                        <Typography variant=\"h6\" style={{ fontWeight: '700', marginBottom: '0.8rem' }}>\n                            {props.collection.nft.name}\n                        </Typography>\n\n                        {(typeof props.collection.id !== 'undefined') &&\n                            <Typography style={{ opacity: '0.5', fontSize: '0.8rem', marginTop: '-1rem' }}>\n                                id: {props.collection.id}\n                            </Typography>\n                        }\n                    </Stack>\n\n                    {typeof props.collection.description !== 'undefined' &&\n                        <>\n                            <Button variant=\"container\" style={infoButtonStyle} onClick={(e) => setInfoOpen(e.currentTarget)}>\n                                <img src=\"/static/SHAZU/icons/info.svg\" className=\"pe-none\" alt=\"\" style={{ width: '100%', opacity: '0.5' }} />\n                            </Button>\n                            \n                            <Popover\n                                open={Boolean(infoOpen)}\n                                anchorEl={infoOpen}\n                                onClose={() => setInfoOpen(null)}\n                                anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                                transformOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                                PaperProps={{\n                                    sx: {\n                                        p: 1,\n                                        maxWidth: 200\n                                    }\n                                }}\n                            >\n                                {props.collection.description}\n                            </Popover>\n                        </>\n                    }   \n                </Stack>\n\n                {props.ownedAction && !isTransfered &&\n                    <div className=\"nft-owned-action shadow-sm\">\n                        <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\" alignItems=\"center\">\n                            <Stack direction=\"row\" spacing={1} style={{ width: '100%'}}>\n                                <Button onClick={handleClickTransfer} variant=\"contained\" color=\"yellow\" className=\"nft-owned-action-btn\">\n                                    Transfer\n                                </Button>\n\n                                <Popover\n                                    open={Boolean(click)}\n                                    anchorEl={click}\n                                    onClose={handleCloseTransfer}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'center'\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'center'\n                                }}\n                                >\n                                    <Box sx={{ p: 2, maxWidth: '30rem', width: '90vw' }}>\n                                        <Typography variant=\"subtitle1\" gutterBottom>\n                                            Destination Address\n                                        </Typography>\n\n                                        <CustomTextField fullWidth type=\"search\" size=\"small\" onChange={handleInputChange}/>\n\n                                        <Typography variant=\"body2\" sx={{ color: 'text.secondary', marginTop: '0.2rem' }}>\n                                            {props.collection.nft.name} ({props.collection.id})\n                                        </Typography>\n\n                                        <Button disabled={!isValidAddress || isTransfering}\n                                            variant=\"contained\" color=\"yellow\"\n                                            onClick={handleTransfer} style={{ marginTop: '2rem', width: '100%' }}\n                                        >\n                                            {isTransfering ? \"Transferring...\" : \"Transfer\" }\n                                        </Button>\n                                    </Box>\n                                </Popover>\n\n                                <Button onClick={handleListing} value={JSON.stringify(props.collection)} variant=\"contained\" color=\"success\" className=\"nft-owned-action-btn\">\n                                    List\n                                </Button>\n                            </Stack>\n                        </Stack>\n                    </div>\n                }\n\n                {(typeof props.amount !== 'undefined') &&\n                    <div className=\"p-relative w-100\">\n                        <div className=\"nft-card-amount\">\n                            x{props.amount}\n                        </div>\n                    </div>\n                }\n\n                {/* EDIT LISTING ACTION */}\n                {(typeof props.collection.saleData !== 'undefined' && props.editListingAction) \n                    &&\n                    <div className=\"p-relative w-100\">\n                        <div className=\"nft-sale-info shadow-sm\">\n                            <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\" alignItems=\"center\">\n                                <Stack>\n                                    <div className=\"nft-sale-caption\">\n                                        Listing price\n                                    </div>\n                                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                                        <div>\n                                        {utils.parseEther(props.collection.saleData.price).gt(utils.parseEther(\"1\")) ? fCRCurrency(props.collection.saleData.price) : props.collection.saleData.price} {props.collection.saleData.currency}\n                                        </div>\n                                        {\n                                            props.collection.saleData.currency === 'BNB' &&\n                                            <img src=\"/static/SHAZU/icons/ic_bnb.svg\" alt=\"\" style={{ width: '1rem', height: '1rem', marginLeft: '0.2rem', marginBottom: '0.2rem' }}/>\n                                        }\n                                        {\n                                            props.collection.saleData.currency === 'SHAZU' &&\n                                            <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1rem', height: '1rem', marginLeft: '0.2rem', marginBottom: '0.2rem' }} />\n                                        }\n                                    </Stack>\n                                </Stack>\n\n                                <Button variant=\"container\" value={JSON.stringify(props.collection)} style={editButtonStyle} onClick={handleEditListing}>\n                                    <img src=\"/static/SHAZU/icons/edit.svg\" className=\"pe-none\" alt=\"\" style={{ width: '100%', opacity: '0.5' }} />\n                                </Button>\n                            </Stack>\n                        </div>\n                    </div>\n                }\n\n                {/* MARKETPLACE LISTING ACTION */}\n                {(typeof props.collection.marketData !== 'undefined' && props.marketplaceListing)\n                    &&\n                    <>\n                        <div className=\"elevate-card-sm\" style={{ marginBottom: '1rem'}}>\n                            <Stack direction=\"column\" justifyContent=\"space-between\" >\n                                <div style={{ fontSize: '0.8rem'}}>\n                                    Price: \n                                </div>\n\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                                    <div style={{ fontSize: '1rem', fontWeight: '700'}}>\n                                        {utils.parseEther(props.collection.saleData.price).gt(utils.parseEther(\"1\")) ? fCRCurrency(props.collection.saleData.price) : props.collection.saleData.price} {props.collection.saleData.currency}\n                                    </div>\n                                    {\n                                        props.collection.saleData.currency === 'BNB' &&\n                                        <img src=\"/static/SHAZU/icons/ic_bnb.svg\" alt=\"\" style={{ width: '1.2rem', height: '1.2rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }}/>\n                                    }\n                                    {\n                                        props.collection.saleData.currency === 'SHAZU' &&\n                                        <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1.2rem', height: '1.2rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }} />\n                                    }\n                                </Stack>\n                            </Stack>\n                        </div>\n                      \n                        <Stack direction=\"row\" spacing={1}>\n                            \n                            {(props.collection.saleData.currency == 'SHAZU') ? (\n                                (allowance && allowance.gte(utils.parseEther(props.collection.saleData.price))) ? (\n                                    <BuyShazuButton tokenId = {props.collection.saleData.saleId} price={props.collection.saleData.price} seller={props.collection.saleData.seller}/>\n                                ):(\n                                    <ApproveShazuButton price={props.collection.saleData.price} seller={props.collection.saleData.seller} />\n                                )\n                            ): (\n                                <BuyButton tokenId = {props.collection.saleData.saleId} price={props.collection.saleData.price} seller={props.collection.saleData.seller}/>\n                            )}\n                        </Stack>\n\n                        {/* STATUS DIALOG */}\n                        <DialogAnimate open={openStatusDialog.open} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseStatusDialog}>\n                            <DialogContent style={{ textAlign: 'center' }}>\n                                {\n                                    openStatusDialog.success \n                                    ?\n                                    <div className=\"successCheck-lottie-container\">\n                                        <Lottie options={successCheckOptions} isClickToPauseDisabled />\n                                    </div>\n                                    :\n                                    <div className=\"successCheck-lottie-container\">\n                                        <Lottie options={failedOptions} isClickToPauseDisabled />\n                                    </div>\n                                }\n                                \n                                <Typography variant=\"h3\">\n                                    {statusDialogMsg}\n                                </Typography>\n                                \n                                {\n                                    openStatusDialog.success \n                                    ?\n                                    <div className=\"elevate-card\">\n                                        <Typography variant=\"h5\">\n                                            {statusDialogInfo}\n                                        </Typography>\n                                    </div>\n                                    :\n                                    <div>\n                                        {failedStatusMsg}\n                                    </div>\n                                }\n                            </DialogContent>\n                        </DialogAnimate>\n                    </>\n                }\n\n                {/* TOP SALE */}\n                {(typeof props.collection.topSaleData !== 'undefined' && props.topSale)\n                    &&\n                    <>\n                        <div className=\"elevate-card\" style={{ marginBottom: '0.4rem', marginTop: '-0.4rem' }}>\n                            <Stack alignItems=\"center\">\n                                <div style={{ fontSize: '1.2rem', fontWeight: '700'}}>\n                                {utils.parseEther(props.collection.topSaleData.price).gt(utils.parseEther(\"1\")) ? fCRCurrency(props.collection.topSaleData.price) : props.collection.topSaleData.price} {props.collection.topSaleData.currency}\n                                </div>\n                            </Stack>\n                        </div>\n                    </>\n                }\n            </Box>\n        </div>\n    )\n\n}\n"],"sourceRoot":""}