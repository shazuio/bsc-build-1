{"version":3,"sources":["components/main/marketplace/MarketplaceListingItem.js","hooks/useMarketPlaceHistory.js","components/main/marketplace/MarketplaceListing.js","components/main/SaleCard.js","components/main/marketplace/SaleTableItem.js","components/main/marketplace/SaleTable.js","hooks/useStat.js","components/main/marketplace/MarketplaceStatistics.js","pages/marketplace/MarketplacePage.js","config/index.js","utils/formatNumber.js","assets/sfx/popDing.wav","components/BuyButton.js","components/ApproveShazuButton.js","components/BuyShazuButton.js","components/main/NFTCard.js","queries/index.js"],"names":["MarketplaceListingItem","_ref","items","index","console","log","_jsx","_Fragment","children","Container","maxWidth","Grid","container","spacing","alignItems","direction","justifyContent","style","minHeight","map","collection","item","xs","sm","md","lg","xl","marginBottom","motion","div","variants","varFadeInUp","NFTCard","marketplaceListing","concat","useMarketPlaceHistory","NFT_COLLECTION","NFT_DESCRIPTION","mountedRef","useRef","nft","setNft","useState","undefined","data","useQuery","MARKETPLACE_HISTORY","pollInterval","useEffect","offers","marketPlaceData","row","rarity","common","rare","superrare","ultimaterare","id","parseInt","token","status","description","saleData","saleId","offerId","seller","user","price","currency","isShazuPrice","marketData","floorPrice","current","name","video","smallThumbnail","RARITY_TYPE","label","MarketplaceListing","listingRef","nftListing","setNftListing","filteredNftList","setFilteredNftList","typeFilterOpen","setTypeFilterOpen","typeFilter","setTypeFilter","handleTypeFilterClose","handleTypeFilter","type","filter","length","Component","MarketplaceListingComponent","nextPage","prevPage","setPageIndex","totalPages","usePaginator","PageComponent","maxPerPage","paginationPage","setPaginationPage","_jsxs","ref","Stack","Button","variant","border","marginTop","marginLeft","onClick","event","currentTarget","className","Typography","component","sx","color","Menu","keepMounted","anchorEl","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","option","MenuItem","selected","typography","value","width","Pagination","size","count","page","onChange","handlePaginationChange","window","scrollTo","behavior","top","offsetTop","fontWeight","SaleCard","props","theme","useTheme","Box","borderRadius","backgroundColor","padding","fontSize","background","palette","gradients","rainbow","WebkitBackgroundClip","WebkitTextFillColor","SALECOLUMNS","minWidth","align","SaleItemTable","TableRow","hover","role","tabIndex","column","cellIndex","nftBorder","TableCell","src","alt","height","marginRight","nftId","href","target","rel","shortenAddress","utils","parseEther","gt","fCRCurrency","date","SaleTable","SALE_HISTORY","listedData","buyer","tokenprice","datetime","Date","timestamp","toUTCString","time","SaleItemTableComponent","columnFormatting","Scrollbar","TableContainer","Table","TableHead","boxShadow","TableBody","useStat","stat","setStat","STAT","stats","statData","minSalePriceSHAZU","minSalePriceBNB","volumeSHAZU","volumeBNB","MarketplaceStatistics","LAST_TOP_SALE","topSaleData","topsales","topSale","salehistory","AnimateContainer","styled","MarketplacePage","themeStretch","useSettings","useMediaQuery","breakpoints","down","Page","title","overflow","initial","animate","varWrapEnter","position","bottom","left","zIndex","opacity","MERKLE_DISTRIBUTER_ADDRESS","MERKLE_VESTED_DISTRIBUTER_ADDRESS","SHAZU_NFT_ADDRESS","SHAZU_MARKETPLACE_ADDRESS","SHAZU_BOOST_TOKEN_ADDRESS","SHAZU_BOOST_POOL_ADDRESS","PANCAKE_ROUTER_V2_ADDRESS","WBNB_ADDRESS","BUSD_ADDRESS","SHAZU_ADDRESS","MERKLE_DISTRIBUTER_INTERFACE","Interface","DISTRIBUTER_ABI","MERKLE_VESTED_DISTRIBUTER_INTERFACE","DISTIRIBUTER_VESTED_ABI","SHAZU_NFT_INTERFACE","SHAZU_NFT_ABI","SHAZU_MARKETPLACE_INTERFACE","SHAZU_MARKETPLACE_ABI","SHAZU_BOOST_POOL_INTERFACE","SHAZU_BOOST_POOL_ABI","SHAZU_BOOST_TOKEN_INTERFACE","SHAZU_BOOST_TOKEN_ABI","DISTRIBUTER_CONTRACT","SHAZU_ABI","ROUTER_ABI","Contract","DISTRIBUTER_VESTED_CONTRACT","SHAZU_NFT_CONTRACT","SHAZU_MARKETPLACE_CONTRACT","SHAZU_BOOST_POOL_CONTRACT","SHAZU_BOOST_TOKEN_CONTRACT","ROUTER_CONTRACT","SHAZU_CONTRACT","WORKER_HOST","number","numeral","format","Number","isInteger","BuyButton","disabled","setDisabled","usingDisabled","setUsingDisabled","buttonText","setButtonText","state","send","useContractFunction","transactionName","account","useEthers","balance","useEtherBalance","toLowerCase","gte","handleBuy","tokenId","ApproveShazuButton","constants","MaxUint256","useTokenBalance","handleApprove","BuyShazuButton","successCheckOptions","loop","autoplay","animationData","SuccessCheckLottie","failedOptions","FailedLottie","infoButtonStyle","editButtonStyle","CustomTextField","TextField","borderBottomColor","borderColor","allowance","useTokenAllowance","isTransfering","setisTransfering","isTransfered","setIsTransfered","collectionCardStyle","shape","borderRadiusMd","transition","big","textAlign","getGradientClass","rarityLabelStyle","transform","infoOpen","setInfoOpen","playPopDingSound","stopPopDingSound","useSound","popDingSound","openSuccessTransferDialog","setOpenSuccessTransferDialog","openFailedTransferDialog","setOpenFailedTransferDialog","shortenedTransferAddress","setShortenedTransferAddress","transferAddress","setTransferAddress","isValidAddress","setIsValidAddress","checkTransferAddress","error","click","setCLickTransfer","openStatusDialog","setOpenStatusDialog","success","statusDialogMsg","setStatusDialogMsg","statusDialogInfo","setStatusDialogInfo","failedStatusMsg","setFailedStatusMsg","unknown","visibility","playsInline","muted","autoPlay","aspectRatio","amount","display","flexDirection","sold","e","Popover","PaperProps","p","DialogAnimate","varZoomInUp","scroll","handleCloseSuccessTransferDialog","DialogContent","Lottie","options","isClickToPauseDisabled","handleCloseFailedTransferDialog","editListingAction","right","ownedAction","handleCloseTransfer","gutterBottom","fullWidth","handleTransfer","alert","listingData","JSON","parse","info","handleOpenListingDialog","stringify","handleOpenEditListingDialog","handleCloseStatusDialog","GET_NFT_BY_USER","gql","_templateObject","_taggedTemplateLiteral","GET_LISTED_NFT_BY_USER","_templateObject2","GET_SOLD_NFT_BY_USER","_templateObject3","LAST_MINT_NFT","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9"],"mappings":"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","file":"static/js/9.f17fc632.chunk.js","sourcesContent":["import { Container, Grid } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport NFTCard from '../NFTCard';\nimport { varFadeInUp } from '../../animate';\n\nexport default function MarketplaceListingItem({ items, index }){\n\n    console.log(items)\n\n    return(\n        <>\n            <Container maxWidth=\"xl\">\n                <Grid container spacing={4} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\" style={{ minHeight: '40rem' }}>\n                    {items.map((collection, index) => {\n   \n                        return(\n                            <>\n                                <Grid item xs={12} sm={6} md={4} lg={3} xl={3} style={{ marginBottom: '1rem' }} key={index} >\n                                    <motion.div key={`${index}`} variants={varFadeInUp}>\n                                        <NFTCard\n                                            collection={collection} \n                                            marketplaceListing\n                                        />\n                                    </motion.div>\n                                </Grid>\n                            </>\n                        )\n                    })}\n                </Grid>\n            </Container>\n        </>\n    )\n}","import { useEffect, useState, useRef } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { MARKETPLACE_HISTORY } from '../queries';\n\n\n\nconst useMarketPlaceHistory = (NFT_COLLECTION, NFT_DESCRIPTION) => {\n\n    const mountedRef = useRef(true);\n\n    const [nft, setNft] = useState(undefined);\n\n    const { data } = useQuery(MARKETPLACE_HISTORY, {\n        pollInterval: 3000\n    });\n\n\n\n    useEffect(() => {\n        if (data && data.offers) {\n            const marketPlaceData = data.offers.map((row) => ({\n                nft: row.rarity == 1 ? NFT_COLLECTION.common : row.rarity == 2 ? NFT_COLLECTION.rare : row.rarity == 3 ? NFT_COLLECTION.superrare : NFT_COLLECTION.ultimaterare,\n                id: parseInt(row.token.id), \n                status: 'listed',\n                description: NFT_DESCRIPTION[row.rarity],\n                saleData: {\n                    saleId: row.offerId,\n                    seller: row.user.id,\n                    price: row.price,\n                    currency: row.isShazuPrice ? 'SHAZU' : 'BNB',   \n                },\n                marketData: {\n                    floorPrice: '1500',\n                    currency: 'SHAZU'\n                }\n            }))\n\n            setNft(marketPlaceData)\n        }\n\n        return () => {\n          mountedRef.current = false;\n        };\n    }, [data, mountedRef]);\n\n    return nft\n}\n\nexport default useMarketPlaceHistory;","// material\nimport { Container, Typography, Button, Menu, MenuItem, Grid, Pagination, DialogContent, ToggleButton, ToggleButtonGroup, Divider, Stack, Box, useMediaQuery, TextField } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport { useState, useRef, useEffect } from 'react';\nimport usePaginator from 'react-use-paginator';\n\nimport { varFadeInUp } from '../../animate';\nimport NFTCard from '../NFTCard';\nimport MarketplaceListingItem from './MarketplaceListingItem';\nimport useMarketPlaceHistory from '../../../hooks/useMarketPlaceHistory';\n\nconst NFT_COLLECTION = {\n    common: {\n        name: 'Orange Ninja',\n        rarity: 'Common',\n        video: '/static/SHAZU/nft/ORANGE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_orange.jpg'\n    },\n    rare: {\n        name: 'Blue Ninja',\n        rarity: 'Rare',\n        video: '/static/SHAZU/nft/BLUE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_blue.jpg'\n    },\n    superrare: {\n        name: 'Green Ninja',\n        rarity: 'Super Rare',\n        video: '/static/SHAZU/nft/GREEN_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_green.jpg'\n    },\n    ultimaterare: {\n        name: 'Purple Ninja',\n        rarity: 'Ultimate Rare',\n        video: '/static/SHAZU/nft/PURPLE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_purple.jpg'\n    },\n}\n\n\nconst NFT_DESCRIPTION = {\n    1: \"Though the most common, one of the most needed in your journey. This Orange Belt Ninja will allow you to have standard capabilities to punch your way through to staking.\",\n    2: \"With the ability to punch, comes with the ability to kick. A common kick but a rare breed of form. The color blue signifies the peace with your inner self. You are nearly there, you are not a novice anymore.\",\n    3: \"Super Rare Green Belt with Super Rare Kick Combos. Congratulations, you are now ranking up and have the ability to do combos. Every ninja must be ready to stake and earn $SHAZU.\",\n    4: \"You have mastered the art of Ninja Spirit! Gravity does not matter anymore. Welcome to the Dojo. It is now time to earn and reap the rewards.\"\n  }\n\nconst RARITY_TYPE = [\n    {\n        id: 'all',\n        label: 'All'\n    },\n    {\n        id: 'common',\n        label: 'Common'\n    },\n    {\n        id: 'rare',\n        label: 'Rare'\n    },\n    {\n        id: 'superrare',\n        label: 'Super Rare'\n    },\n    {\n        id: 'ultimaterare',\n        label: 'Ultimate Rare'\n    }\n]\n\nexport default function MarketplaceListing(){\n    const listingRef = useRef();\n    const handleScrollToTop = () => {\n        window.scrollTo({ behavior: 'smooth', top: listingRef.current.offsetTop-100 });\n    }\n\n    const [nftListing, setNftListing] = useState([]);\n    const [filteredNftList, setFilteredNftList] = useState([]);\n\n    const [typeFilterOpen, setTypeFilterOpen] = useState(null);\n    const [typeFilter, setTypeFilter] = useState({id: 'all', label: 'All'});\n    const handleTypeFilterOpen = (event) => {\n        setTypeFilterOpen(event.currentTarget);\n    }\n    const handleTypeFilterClose = () => {\n        setTypeFilterOpen(null);\n    }\n\n    const handleTypeFilter = (type) => {\n        setTypeFilter({id: type.id, label: type.label});\n\n        if(type.id === 'all'){\n            setFilteredNftList(nftListing);\n        }else if(type.id === 'common'){\n            setFilteredNftList(nftListing.filter((item) => item.nft.rarity === 'Common' ));\n        }else if(type.id === 'rare'){\n            setFilteredNftList(nftListing.filter((item) => item.nft.rarity === 'Rare' ));\n        }else if(type.id === 'superrare'){\n            setFilteredNftList(nftListing.filter((item) => item.nft.rarity === 'Super Rare' ));\n        }else if(type.id === 'ultimaterare'){\n            setFilteredNftList(nftListing.filter((item) => item.nft.rarity === 'Ultimate Rare' ));\n        }\n\n        handleTypeFilterClose();\n    }   \n\n    const data = useMarketPlaceHistory(NFT_COLLECTION, NFT_DESCRIPTION)\n\n    useEffect(() => {\n        if(data != undefined ) {\n            setNftListing(data)\n        } else {\n            setNftListing([])\n        }\n    }, [data])\n\n    useEffect(() => {\n        if (nftListing.length > 0) {\n            handleTypeFilter(typeFilter)\n        }\n    }, [nftListing])\n\n    const { Component: MarketplaceListingComponent, nextPage, prevPage, setPageIndex, totalPages } = usePaginator({\n        PageComponent: MarketplaceListingItem,\n        maxPerPage: 8,\n        data: filteredNftList\n    });\n\n\n\n    const [paginationPage, setPaginationPage] = useState(1);\n    const handlePaginationChange = (event, value) => {\n        setPaginationPage(value);\n        setPageIndex(value);\n        handleScrollToTop();\n    }\n    \n    return(\n        <>\n            {/* RARITY TAB */}\n            <motion.div ref={listingRef} variants={varFadeInUp} >\n                <Stack>\n                    <Button variant=\"container\"\n                        style={{ border: '1px solid rgba(255, 255, 255, 0.3)', marginTop: 'auto', marginBottom: 'auto', marginLeft: 'auto' }} \n                        onClick={handleTypeFilterOpen}\n                        className=\"nft-rarity-button\"\n                    >\n                        Rarity:&nbsp;\n                        <Typography component=\"span\" variant=\"subtitle2\" sx={{ color: 'text.secondary' }}>\n                            {typeFilter.label}\n                        </Typography>\n                    </Button>\n\n                    <Menu\n                        keepMounted\n                        anchorEl={typeFilterOpen}\n                        open={Boolean(typeFilterOpen)}\n                        onClose={handleTypeFilterClose}\n                        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\n                        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                    >\n                        {RARITY_TYPE.map((option) => (\n                            <MenuItem\n                                key={option.value}\n                                selected={option.id === typeFilter.id}\n                                onClick={() => handleTypeFilter(option)}\n                                sx={{ typography: 'body2' }}\n                            >\n                                {option.label}\n                            </MenuItem>\n                        ))}\n                    </Menu>\n                </Stack>\n            </motion.div>\n            \n            <motion.div variants={varFadeInUp} >\n                <Typography variant=\"h3\" style={{ marginBottom: '2rem', marginTop: '1rem' }}>\n                    On Sale\n                </Typography>\n            </motion.div>\n            \n            <motion.div variants={varFadeInUp} >\n                {\n                    filteredNftList.length !== 0\n                    ?\n                    <>\n                        <MarketplaceListingComponent />\n\n                        <motion.div variants={varFadeInUp}>\n                            <Stack justifyContent=\"center\" alignItems=\"center\" style={{ width: '100%', marginTop: '2rem' }}>\n                                <Pagination \n                                    size=\"large\"\n                                    count={totalPages} page={paginationPage} \n                                    color=\"yellow\" onChange={handlePaginationChange}\n                                />\n                            </Stack>\n                        </motion.div>\n                    </>\n                    :\n                    <motion.div variants={varFadeInUp} style={{ width: '100%', marginTop: '0rem'}}>\n                        <Stack alignItems=\"center\">\n                            <Typography variant=\"h4\">No NFT found</Typography>\n                            <Typography variant=\"h6\" style={{ fontWeight: '500' }}>No NFT listed yet on this category.</Typography>\n                        </Stack>\n                    </motion.div>\n                }\n            </motion.div>\n        </>\n    )\n}","import { Box, Stack, Typography, useTheme } from '@mui/material';\n\nexport default function SaleCard(props){\n    const theme = useTheme();\n\n    const saleCardStyle={\n        borderRadius: '8px',\n        border: 'solid 1px #3B3B3B',\n        backgroundColor: '#1C1C1C',\n        padding: '0.75rem'\n    }\n\n    return(\n        <Box style={saleCardStyle}>\n            <Typography variant='h4' style={{ marginBottom: '-0.2rem', fontSize: '1.8rem', background: theme.palette.gradients.rainbow, WebkitBackgroundClip: 'text', WebkitTextFillColor: 'transparent'}}>\n                {props.value}\n            </Typography>\n            <Typography variant='h6' style={{ fontWeight: '500' }}>{props.label}</Typography>\n        </Box>\n    )\n}","\nimport { TableRow, TableCell, Stack } from '@mui/material';\n\nimport { shortenAddress, shortenTransactionHash  } from '@usedapp/core';\nimport { fCRCurrency } from '../../../utils/formatNumber';\nimport { utils, BigNumber, constants} from 'ethers'\n\nconst SALECOLUMNS = [\n    { id: 'nft', label: 'NFT', minWidth: 150, width: '20%'},\n    { id: 'buyer', label: 'Buyer', minWidth: 70, align: 'center', width: '15%'},\n    { id: 'seller', label: 'Seller', minWidth: 80, align: 'center', width: '15%'},\n    { id: 'tokenprice', label: 'Token Price',  align: 'center', minWidth: 100, width: '10%'},\n    { id: 'datetime', label: 'Date', minWidth: 150, align: 'right', width: '22%'},\n]\n\nexport default function SaleItemTable({ items, index }){\n    return(\n        <>\n            {items.map((row, index) => (\n                <TableRow hover role=\"checkbox\" tabIndex={-1} key={`salerow${index}`}>\n                    {SALECOLUMNS.map((column, cellIndex) => {\n                        const value = row[column.id];\n                        \n                        if(column.id === 'nft'){\n                            let nftBorder = '';\n                            if(value.rarity === 'Common'){\n                                nftBorder = '2px solid var(--shazu-yellow)';\n                            }else if(value.rarity === 'Rare'){\n                                nftBorder = '2px solid var(--shazu-blue)';\n                            }else if(value.rarity === 'Super Rare'){\n                                nftBorder = '2px solid var(--shazu-green)';\n                            }else if(value.rarity === 'Ultimate Rare'){\n                                nftBorder = '2px solid var(--shazu-purple)';\n                            }\n                            return (\n                                <TableCell align={column.align} key={`lastgamecell${cellIndex}`} style={{ fontSize: '1rem' }}>\n                                    <Stack direction=\"row\" spacing={1} alignItems=\"center\" style={{ justifyContent: column.align }}>\n                                        <img src={value.smallThumbnail} alt='' \n                                            style={{ width: '2rem', height: '2rem', borderRadius: '0.3rem', marginRight: '0.4rem', border: nftBorder }} \n                                        />\n                                        <div className=\"bold\">\n                                            {row.nftId}\n                                        </div>\n                                    </Stack>\n                                </TableCell>\n                            );\n                        }\n\n                        if(column.id === 'buyer'){\n                            return(\n                                <TableCell align={column.align} key={`salecell${cellIndex}`} style={{ fontWeight: '500'}}>\n                                    <a href={`https://bscscan.com/address/${value}`} target=\"_blank\" rel=\"noreferrer\" style={{ color: 'white', fontSize: '0.9rem' }} >\n                                        {shortenAddress(value)}\n                                    </a>\n                                </TableCell>\n                            )\n                        }\n\n                        if(column.id === 'seller'){\n                            return(\n                                <TableCell align={column.align} key={`salecell${cellIndex}`} style={{ fontWeight: '500'}}>\n                                    <a href={`https://bscscan.com/address/${value}`} target=\"_blank\" rel=\"noreferrer\" style={{ color: 'white', fontSize: '0.9rem' }} >\n                                        {shortenAddress(value)}\n                                    </a>\n                                </TableCell>\n                            )\n                        }\n\n                        if(column.id === 'tokenprice'){\n                            return(\n                                <TableCell align={column.align} key={`salecell${cellIndex}`} style={{ fontWeight: '500', fontSize: '0.9rem'}}>\n                                    {utils.parseEther(value).gt(utils.parseEther(\"1\")) ? fCRCurrency(value) : value} {row.currency}\n                                </TableCell>\n                            )\n                        }\n\n                        if(column.id === 'datetime'){\n                            return(\n                                <TableCell align={column.align} key={`salecell${cellIndex}`} style={{ fontWeight: '500', fontSize: '0.9rem'}}>\n                                    {value.date}\n                                </TableCell>\n                            )\n                        }\n\n                        return false;\n                    })}\n                </TableRow>\n            ))}\n        </>\n    )\n}","// material\nimport { Table, TableRow, TableHead, TableBody, TableCell, TableContainer, Pagination, Stack } from '@mui/material';\n\nimport { useState, useEffect } from 'react';\nimport usePaginator from 'react-use-paginator';\n\n// components\nimport Scrollbar from '../../Scrollbar';\nimport SaleItemTable from './SaleTableItem';\nimport { SALE_HISTORY} from '../../../queries';\n\nimport { useQuery } from '@apollo/client';\n\nconst SALECOLUMNS = [\n    { id: 'nft', label: 'NFT', minWidth: 150, width: '20%'},\n    { id: 'buyer', label: 'Buyer', minWidth: 70, align: 'center', width: '15%'},\n    { id: 'seller', label: 'Seller', minWidth: 80, align: 'center', width: '15%'},\n    { id: 'tokenprice', label: 'Token Price', minWidth: 100, width: '10%'},\n    { id: 'datetime', label: 'Date', minWidth: 150, align: 'right', width: '22%'},\n]\n\nconst NFT_COLLECTION = {\n    common: {\n        name: 'Orange Ninja',\n        rarity: 'Common',\n        video: '/static/SHAZU/nft/ORANGE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_orange.jpg'\n    },\n    rare: {\n        name: 'Blue Ninja',\n        rarity: 'Rare',\n        video: '/static/SHAZU/nft/BLUE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_blue.jpg'\n    },\n    superrare: {\n        name: 'Green Ninja',\n        rarity: 'Super Rare',\n        video: '/static/SHAZU/nft/GREEN_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_green.jpg'\n    },\n    ultimaterare: {\n        name: 'Purple Ninja',\n        rarity: 'Ultimate Rare',\n        video: '/static/SHAZU/nft/PURPLE_NINJA.mp4',\n        smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_purple.jpg'\n    },\n}\n\nconst DUMMY_SALE_HISTORY = [\n    {\n        nft: NFT_COLLECTION.rare,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.ultimaterare,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.common,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.superrare,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.rare,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.ultimaterare,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.common,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.superrare,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.rare,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.ultimaterare,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.common,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    },\n    {\n        nft: NFT_COLLECTION.superrare,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    }\n]\n\n\n\nexport default function SaleTable() {\n\n    const { data } = useQuery(SALE_HISTORY, {\n        pollInterval: 3000\n    });\n\n    const [nft, setNft] = useState(undefined);\n\n    useEffect(() => {\n        if (data && data.offers) {\n            const listedData = data.offers.map((row) => (        {\n                nft: row.rarity == 1 ? NFT_COLLECTION.common : row.rarity == 2 ? NFT_COLLECTION.rare : row.rarity == 3 ? NFT_COLLECTION.superrare : NFT_COLLECTION.ultimaterare,\n                nftId: parseInt(row.token.id),\n                seller: row.user.id,\n                buyer: row.buyer.id,\n                currency: row.isShazuPrice ? 'SHAZU' : 'BNB',\n                tokenprice: row.price,\n                datetime: {\n                    date: (new Date(row.timestamp * 1000)).toUTCString(),\n                    time: '19:02:23'\n                }\n            }))\n\n            setNft(listedData)\n        }\n    }, [data])\n\n    /*\n         {\n        nft: NFT_COLLECTION.superrare,\n        nftId: 'id1234',\n        buyer: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        seller: '0xEF0274E31810C9Df02F98FAFDe0f841F4E66a1Cd',\n        inUSD: 12345,\n        tokenprice: '123',\n        currency: 'BNB',\n        datetime: {\n            date: '12 March 2021',\n            time: '19:02:23'\n        }\n    }\n    */\n\n    // PAGINATION\n    const { Component: SaleItemTableComponent, nextPage, prevPage, setPageIndex, totalPages } = usePaginator({\n        PageComponent: SaleItemTable,\n        maxPerPage: 6,\n        data: nft,\n        columnFormatting: SALECOLUMNS\n    });\n\n    const [paginationPage, setPaginationPage] = useState(1);\n    const handlePaginationChange = (event, value) => {\n        setPaginationPage(value);\n        setPageIndex(value);\n    }    \n\n    return (\n        <>\n            <Scrollbar>\n                <TableContainer sx={{ minWidth: '700px', width: '100%' , backgroundColor: '#1C1C1C', border: 'solid 1px #3B3B3B', borderRadius: '8px', padding: '1rem', marginTop: '1rem' }} style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n                    <Table>\n                        <TableHead sx={{  backgroundColor: '#1C1C1C', borderRadius: '12px' }}>\n                            <TableRow> \n                            {SALECOLUMNS.map((column) => (\n                                <TableCell key={column.id} align={column.align} style={{ minWidth: column.minWidth, width: column.width, boxShadow: 'none'}} sx={{ background: '#272727', fontSize: '1rem', color: 'white' }}>\n                                    {column.label}\n                                </TableCell>\n                            ))}\n                            </TableRow>\n                        </TableHead>\n\n                        <TableBody>\n                            <SaleItemTableComponent />\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Scrollbar>\n            <Stack style={{  width: '100%' }} alignItems=\"center\" >\n                <Pagination \n                    color=\"yellow\" \n                    count={totalPages} page={paginationPage}\n                    onChange={handlePaginationChange}\n                />\n            </Stack>\n        </>\n    );\n}\n","import { useEffect, useState, useRef } from 'react';\nimport { useBlockNumber, useEthers } from '@usedapp/core';\nimport { useQuery } from '@apollo/client';\nimport { STAT } from '../queries';\nimport { utils, BigNumber, constants} from 'ethers'\nimport { fCRCurrency } from '../utils/formatNumber';\n\nconst useStat = () => {\n\n    const mountedRef = useRef(true);\n\n    const [stat, setStat] = useState(undefined);\n\n    const { data } = useQuery(STAT, {\n        pollInterval: 3000\n    });\n\n    useEffect(() => {\n\n    \n        if (data && data.stats) {\n\n            const statData = [\n                {\n                    label: 'Min Sale Price (SHAZU)',\n                    value: data.stats[0] && data.stats[0].minSalePriceSHAZU ? utils.parseEther(data.stats[0].minSalePriceSHAZU).gt(utils.parseEther(\"1\")) ? fCRCurrency(data.stats[0].minSalePriceSHAZU) : data.stats[0].minSalePriceSHAZU : 0\n                },\n                {\n                    label: 'Min Sale Price (BNB)',\n                    value: data.stats[0] && data.stats[0].minSalePriceBNB ? utils.parseEther(data.stats[0].minSalePriceBNB).gt(utils.parseEther(\"1\")) ? fCRCurrency(data.stats[0].minSalePriceBNB) : data.stats[0].minSalePriceBNB : 0\n                },\n                {\n                    label: 'Volume Trade (SHAZU)',\n                    value: data.stats[0] && data.stats[0].volumeSHAZU ? utils.parseEther(data.stats[0].volumeSHAZU).gt(utils.parseEther(\"1\")) ? fCRCurrency(data.stats[0].volumeSHAZU) : data.stats[0].volumeSHAZU : 0\n                },\n                {\n                    label: 'Volume Trade (BNB)',\n                    value: data.stats[0] && data.stats[0].volumeBNB ? utils.parseEther(data.stats[0].volumeBNB).gt(utils.parseEther(\"1\")) ? fCRCurrency(data.stats[0].volumeBNB) : data.stats[0].volumeBNB : 0\n                }\n            ]\n\n            setStat(statData)\n        }\n\n        return () => {\n          mountedRef.current = false;\n        };\n    }, [data, mountedRef]);\n\n    return stat\n}\n\nexport default useStat;\n\n","// material\nimport { Container, Typography, Grid, Stack, Box, useMediaQuery, styled, useTheme } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport { useState, useEffect } from 'react';\n// components\nimport { varFadeInUp } from '../../animate';\nimport NFTCard from '../NFTCard';\nimport SaleCard from '../SaleCard';\nimport SaleTable from './SaleTable';\nimport { LAST_TOP_SALE} from '../../../queries';\nimport { useQuery } from '@apollo/client';\nimport useStat from '../../../hooks/useStat';\n\n\nexport default function MarketplaceStatistics(){\n    const NFT_COLLECTION = {\n        common: {\n            name: 'Orange Ninja',\n            rarity: 'Common',\n            video: '/static/SHAZU/nft/ORANGE_NINJA.mp4',\n            smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_orange.jpg'\n        },\n        rare: {\n            name: 'Blue Ninja',\n            rarity: 'Rare',\n            video: '/static/SHAZU/nft/BLUE_NINJA.mp4',\n            smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_blue.jpg'\n        },\n        superrare: {\n            name: 'Green Ninja',\n            rarity: 'Super Rare',\n            video: '/static/SHAZU/nft/GREEN_NINJA.mp4',\n            smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_green.jpg'\n        },\n        ultimaterare: {\n            name: 'Purple Ninja',\n            rarity: 'Ultimate Rare',\n            video: '/static/SHAZU/nft/PURPLE_NINJA.mp4',\n            smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_purple.jpg'\n        },\n    }\n\n    const NFT_DESCRIPTION = {\n        1: \"Though the most common, one of the most needed in your journey. This Orange Belt Ninja will allow you to have standard capabilities to punch your way through to staking.\",\n        2: \"With the ability to punch, comes with the ability to kick. A common kick but a rare breed of form. The color blue signifies the peace with your inner self. You are nearly there, you are not a novice anymore.\",\n        3: \"Super Rare Green Belt with Super Rare Kick Combos. Congratulations, you are now ranking up and have the ability to do combos. Every ninja must be ready to stake and earn $SHAZU.\",\n        4: \"You have mastered the art of Ninja Spirit! Gravity does not matter anymore. Welcome to the Dojo. It is now time to earn and reap the rewards.\"\n      }\n\n    const { data } = useQuery(LAST_TOP_SALE, {\n        pollInterval: 3000\n    });\n\n    const [nft, setNft] = useState(undefined);\n\n\n    const stat = useStat()\n\n    useEffect(() => {\n\n\n        if (data && data.offers) {\n            const listedData = data.offers.map((row) => (        {\n                nft: row.rarity == 1 ? NFT_COLLECTION.common : row.rarity == 2 ? NFT_COLLECTION.rare : row.rarity == 3 ? NFT_COLLECTION.superrare : NFT_COLLECTION.ultimaterare,\n                id: parseInt(row.token.id),\n                status: 'listed',\n                description: NFT_DESCRIPTION[row.rarity],\n                topSaleData: {\n                    price: row.price,\n                    currency: row.isShazuPrice ? 'SHAZU' :'BNB'\n                }\n            }))\n\n            setNft(listedData)\n        }\n    }, [data])\n\n    return(\n\n        <>\n            <Container maxWidth=\"xl\">\n                {/* TOP SALES */}\n                <motion.div variants={varFadeInUp}>\n                    <Grid container spacing={2} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\" style={{ marginBottom: '3rem' }}>\n                        <Grid item xs={12} style={{ marginBottom: '1rem' }}>\n                            <Typography variant='h3'>Top Sales</Typography>\n                        </Grid>\n\n                        {nft && nft.map((topsales, index) => (\n                            <Grid item xs={12} sm={6} md={4} lg={3} xl={3} style={{ marginBottom: '1rem' }} key={index}>\n                                <NFTCard collection={topsales} topSale />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </motion.div>\n                \n                <motion.div variants={varFadeInUp}>\n                    <Grid container spacing={2} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\">\n                        {stat && stat.map((salehistory, index) => (\n                            <Grid item xs={12} sm={6} md={6} lg={3} xl={3} key={index}>\n                                <SaleCard label={salehistory.label} value={salehistory.value} key={index} />\n                            </Grid>\n                        ))}\n                    </Grid>\n                </motion.div>\n\n                <motion.div variants={varFadeInUp}>\n                    <Grid container spacing={2} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\">\n                        <Grid item xs={12} style={{ marginBottom: '-0.5rem' }}>\n                            <Typography variant='h3'>Sale History</Typography>\n                        </Grid>\n                    </Grid>\n                </motion.div>\n\n                <motion.div variants={varFadeInUp}>\n                    <Grid container spacing={2} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\" style={{ marginBottom: '3rem' }}>\n                        <Grid item xs={12} style={{ marginBottom: '5rem' }}>\n                            <SaleTable />\n                        </Grid>\n                    </Grid>\n                </motion.div>                    \n            </Container>\n        </>\n    )\n}","// material\nimport { Container, Typography, Button, Paper, Grid, Divider, Stack, Box, useMediaQuery } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport { styled, useTheme  } from '@mui/material/styles';\nimport Marquee from \"react-fast-marquee\";\n\n// hooks\nimport useSettings from '../../hooks/useSettings';\n// components\nimport Page from '../../components/Page';\nimport { varWrapEnter, varFadeInUp } from '../../components/animate';\nimport MarketplaceListing from '../../components/main/marketplace/MarketplaceListing';\nimport MarketplaceStatistics from '../../components/main/marketplace/MarketplaceStatistics';\n// ----------------------------------------------------------------------\n\nconst AnimateContainer = styled(motion.div)(({ theme }) => ({\n\n}));\n\nexport default function MarketplacePage() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\n\n  return (\n    <Page title=\"SHAZU - Marketplace\" style={{ overflow: 'hidden'}}>\n      <AnimateContainer initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\n        <section>\n          <Container maxWidth={themeStretch ? false : 'xl'}>\n            <motion.div variants={varFadeInUp}>\n              <Stack alignItems=\"center\" style={{ marginBottom: '2rem' }} >\n                <div className=\"gradient-bar\" style={{ width: '15rem', height: '0.4rem' }} />\n                <Typography variant=\"h1\" className=\"neo-font\">\n                  Marketplace\n                </Typography>\n\n                <Typography variant=\"h5\" className=\"neo-font yellow-color\">\n                  Shazu Action Cards Collection\n                </Typography>\n              </Stack>\n            </motion.div>\n\n            <MarketplaceListing />\n\n            <div style={{ marginTop: '4rem'}} />\n\n            <MarketplaceStatistics />\n            \n          </Container>\n        </section>\n      </AnimateContainer>\n\n      <img src=\"/static/SHAZU/background/store.png\" alt=\"\" style={{ position: 'fixed', bottom: '-2rem', left: '0', width: '100%', zIndex: '-2', opacity: '0.3' }} />\n    </Page>\n  );\n}\n","import { Contract, utils } from 'ethers';\nimport DISTRIBUTER_ABI from '../abi/MerkleDistributer.json';\nimport DISTIRIBUTER_VESTED_ABI from '../abi/MerkleVestedDistributer.json';\nimport SHAZU_NFT_ABI from '../abi/ShazuNFT.json';\nimport SHAZU_MARKETPLACE_ABI from '../abi/ShazuMarketplace.json';\nimport SHAZU_BOOST_POOL_ABI from '../abi/ShazuBoostPool.json';\nimport SHAZU_BOOST_TOKEN_ABI from '../abi/BoostToken.json';\nimport ROUTER_ABI from '../abi/Router.json';\nimport SHAZU_ABI from '../abi/ERC20.json';\n\nexport const MERKLE_DISTRIBUTER_ADDRESS = '0xb4CD27732213ED035174875C55F1a0bd8a9E9593';\nexport const MERKLE_VESTED_DISTRIBUTER_ADDRESS = '0x4ABf69C0C15B41A0d9fa66023c1fcD5efb9080e5';\nexport const SHAZU_NFT_ADDRESS = '0xb53c33b5925b18f15e1bf0908303066c0d54fdf5'\nexport const SHAZU_MARKETPLACE_ADDRESS = '0x0C4abB1db041D3FeCa1B5405717Ac5Afb0A3245f'\nexport const SHAZU_BOOST_TOKEN_ADDRESS = '0x1F13D0523BC2F26E5c86E212cA8A3aA1aB43cD04'\nexport const SHAZU_BOOST_POOL_ADDRESS = '0xb5e7b965964c13F0a1C309EC25130009932eecEa'\n\n\nexport const PANCAKE_ROUTER_V2_ADDRESS = '0x10ED43C718714eb63d5aA57B78B54704E256024E'\n\nexport const WBNB_ADDRESS = '0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c';\n\nexport const BUSD_ADDRESS = '0x55d398326f99059fF775485246999027B3197955'\n\nexport const SHAZU_ADDRESS = '0x4105a12eea88bb5d112778587aa9f9af4a2527a0';\n\nexport const MERKLE_DISTRIBUTER_INTERFACE = new utils.Interface(DISTRIBUTER_ABI);\n\nexport const MERKLE_VESTED_DISTRIBUTER_INTERFACE = new utils.Interface(DISTIRIBUTER_VESTED_ABI);\n\nexport const SHAZU_NFT_INTERFACE = new utils.Interface(SHAZU_NFT_ABI)\n\nexport const SHAZU_MARKETPLACE_INTERFACE = new utils.Interface(SHAZU_MARKETPLACE_ABI)\n\nexport const SHAZU_BOOST_POOL_INTERFACE = new utils.Interface(SHAZU_BOOST_POOL_ABI)\n\nexport const SHAZU_BOOST_TOKEN_INTERFACE =  new utils.Interface(SHAZU_BOOST_TOKEN_ABI)\n\nexport const SHAZU_INTERFACE = new utils.Interface(SHAZU_ABI)\n\nexport const ROUTER_INTERFACE = new utils.Interface(ROUTER_ABI);\n\nexport const DISTRIBUTER_CONTRACT = new Contract(MERKLE_DISTRIBUTER_ADDRESS, MERKLE_DISTRIBUTER_INTERFACE);\n\nexport const DISTRIBUTER_VESTED_CONTRACT = new Contract(MERKLE_VESTED_DISTRIBUTER_ADDRESS, MERKLE_VESTED_DISTRIBUTER_INTERFACE);\n\nexport const SHAZU_NFT_CONTRACT = new Contract(SHAZU_NFT_ADDRESS, SHAZU_NFT_INTERFACE)\n\nexport const SHAZU_MARKETPLACE_CONTRACT = new Contract(SHAZU_MARKETPLACE_ADDRESS, SHAZU_MARKETPLACE_INTERFACE)\n\nexport const SHAZU_BOOST_POOL_CONTRACT = new Contract(SHAZU_BOOST_POOL_ADDRESS, SHAZU_BOOST_POOL_INTERFACE)\n\nexport const SHAZU_BOOST_TOKEN_CONTRACT = new Contract(SHAZU_BOOST_TOKEN_ADDRESS, SHAZU_BOOST_TOKEN_INTERFACE)\n\nexport const ROUTER_CONTRACT = new Contract(PANCAKE_ROUTER_V2_ADDRESS, ROUTER_ABI)\n\nexport const SHAZU_CONTRACT = new Contract(SHAZU_ADDRESS, SHAZU_ABI)\n\n\n\nexport const WORKER_HOST = 'https://tokens.shenzuninja.workers.dev';\n\n","\nimport { replace } from 'lodash';\nimport numeral from 'numeral';\n\n// ----------------------------------------------------------------------\n\nexport function fCurrency(number) {\n    return numeral(number).format(Number.isInteger(number) ? '$0,0' : '$0,0.00');\n}\n\nexport function fCRCurrency(number) {\n    return numeral(number).format(Number.isInteger(number) ? '0,000' : '0,0.00');\n}\n\nexport function fPercent(number) {\n    return numeral(number / 100).format('0.0%');\n}\n\nexport function fNumber(number) {\nreturn numeral(number).format();\n}\n\nexport function fShortenNumber(number) {\n    return replace(numeral(number).format('0.00a'), '.00', '');\n}\n\nexport function fData(number) {\n    return numeral(number).format('0.0 b');\n}\n","export default __webpack_public_path__ + \"static/media/popDing.90182dda.wav\";","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers, useEtherBalance } from '@usedapp/core';\n\nimport { SHAZU_MARKETPLACE_CONTRACT} from '../config';\n\nconst BuyButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [usingDisabled, setUsingDisabled] = useState(false)\n\n  const [buttonText, setButtonText] = useState('BUY');\n\n  const { state, send } = useContractFunction(SHAZU_MARKETPLACE_CONTRACT, 'fillOffer', { transactionName: 'Fill Offer' });\n\n  const { account } = useEthers()\n\n  const balance = useEtherBalance(account)\n\n  \n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n      setDisabled(false)\n      setUsingDisabled(false)\n      setButtonText('BUY');\n    }\n\n    if (state.status === 'None') {\n\n    }\n\n    if (state.status === 'Success') {\n      setButtonText('BOUGHT');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setUsingDisabled(true)\n      setButtonText('BUYING..');\n    }\n  }, [state]);\n\n  const handleBuy = () => {\n    setDisabled(true)\n    setUsingDisabled(true)\n    send(props.tokenId, {value:utils.parseEther(props.price)});\n  };\n\n  useEffect(() => {\n    if (!account || (account.toLowerCase() === props.seller.toLowerCase())) {\n\n      if (!usingDisabled) {\n        setDisabled(true)\n      }\n    } else {\n      if (account && balance && balance.gte(utils.parseEther(props.price))) {\n        if (!usingDisabled) {\n          setDisabled(false)\n        }\n      } else {\n        if (!usingDisabled) {\n          setDisabled(true)\n        }\n      }\n    }\n\n  \n  }, [account, props.seller, balance]);\n\n\n  return (\n      <Button onClick={handleBuy} \n          variant=\"contained\" color=\"success\" style={{ width: '100%' }} disabled={disabled}>\n          {buttonText}\n      </Button>\n  );\n};\n\nexport default BuyButton;\n","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers, useTokenBalance } from '@usedapp/core';\n\nimport { SHAZU_CONTRACT, SHAZU_ADDRESS, SHAZU_MARKETPLACE_ADDRESS} from '../config';\n\n\nconst ApproveShazuButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [usingDisabled, setUsingDisabled] = useState(false)\n\n  const [buttonText, setButtonText] = useState('APPROVE SHAZU');\n\n  const { state, send } = useContractFunction(SHAZU_CONTRACT, 'approve', { transactionName: 'Approve SHAZU' });\n\n  const { account } = useEthers()\n\n  const value = constants.MaxUint256\n\n  const balance = useTokenBalance(SHAZU_ADDRESS, account)\n\n\n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n      setDisabled(false)\n      setUsingDisabled(false)\n      setButtonText('APPROVE SHAZU');\n    }\n\n    if (state.status === 'None') {\n\n    }\n\n    if (state.status === 'Success') {\n      setButtonText('APPROVED');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setUsingDisabled(true)\n      setButtonText('APPROVING..');\n    }\n  }, [state]);\n\n  const handleApprove = () => {\n    setDisabled(true)\n    setUsingDisabled(true)\n    send(SHAZU_MARKETPLACE_ADDRESS, value);\n  };\n\n\n  useEffect(() => {\n    if (!account || (account.toLowerCase() === props.seller.toLowerCase())) {\n\n      if (!usingDisabled) {\n        setDisabled(true)\n      }\n    } else {\n      if (account && balance && balance.gte(utils.parseEther(props.price))) {\n        if (!usingDisabled) {\n          setDisabled(false)\n        }\n      } else {\n        if (!usingDisabled) {\n          setDisabled(true)\n        }\n      }\n    }\n\n  \n  }, [account, props.seller, balance]);\n\n  return (\n      <Button onClick={handleApprove} \n          variant=\"contained\" color=\"success\" style={{ width: '100%' }} disabled={disabled}>\n          {buttonText}\n      </Button>\n  );\n};\n\nexport default ApproveShazuButton;\n","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers, useTokenBalance } from '@usedapp/core';\n\nimport { SHAZU_CONTRACT, SHAZU_ADDRESS, SHAZU_MARKETPLACE_ADDRESS, SHAZU_MARKETPLACE_CONTRACT} from '../config';\n\n\nconst BuyShazuButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [usingDisabled, setUsingDisabled] = useState(false)\n\n  const [buttonText, setButtonText] = useState('BUY');\n\n  const { state, send } = useContractFunction(SHAZU_MARKETPLACE_CONTRACT, 'fillOffer', { transactionName: 'Fill Offer' });\n\n  const { account } = useEthers()\n\n  const value = constants.MaxUint256\n\n  const balance = useTokenBalance(SHAZU_ADDRESS, account)\n\n\n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n      setDisabled(false)\n      setUsingDisabled(false)\n      setButtonText('BUY');\n    }\n\n    if (state.status === 'None') {\n\n    }\n\n    if (state.status === 'Success') {\n      setButtonText('BOUGHT');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setUsingDisabled(true)\n      setButtonText('BUYING..');\n    }\n  }, [state]);\n\n  const handleBuy = () => {\n    setDisabled(true)\n    setUsingDisabled(true)\n    send(props.tokenId);\n  };\n\n\n  useEffect(() => {\n    if (!account || (account.toLowerCase() === props.seller.toLowerCase())) {\n\n      if (!usingDisabled) {\n        setDisabled(true)\n      }\n    } else {\n      if (account && balance && balance.gte(utils.parseEther(props.price))) {\n        if (!usingDisabled) {\n          setDisabled(false)\n        }\n      } else {\n        if (!usingDisabled) {\n          setDisabled(true)\n        }\n      }\n    }\n\n  \n  }, [account, props.seller, balance]);\n\n  return (\n      <Button onClick={handleBuy} \n          variant=\"contained\" color=\"success\" style={{ width: '100%' }} disabled={disabled}>\n          {buttonText}\n      </Button>\n  );\n};\n\nexport default BuyShazuButton;\n","import { styled, useTheme  } from '@mui/material/styles';\nimport { useEffect, useState } from 'react';\nimport { utils, BigNumber, constants} from 'ethers'\nimport Lottie from 'react-lottie';\nimport { Box, Link, Typography, Stack, Popover, Button, TextField, DialogContent } from '@mui/material';\nimport useSound from 'use-sound';\nimport { shortenAddress, shortenIfAddress } from '@usedapp/core';\nimport { NavLink, NavLink as RouterLink } from 'react-router-dom';\n\nimport { fCRCurrency } from '../../utils/formatNumber';\n\n// components\nimport { DialogAnimate, varZoomInUp } from '../animate';\n\nimport SuccessCheckLottie from '../../assets/lottie/successCheck.json';\nimport FailedLottie from '../../assets/lottie/failed.json';\nimport popDingSound from '../../assets/sfx/popDing.wav';\nimport { useEthers, useContractFunction, useTokenAllowance} from '@usedapp/core';\nimport { SHAZU_ADDRESS, SHAZU_MARKETPLACE_ADDRESS, SHAZU_NFT_CONTRACT} from '../../config'\nimport BuyButton from '../BuyButton';\nimport ApproveShazuButton from '../ApproveShazuButton';\nimport BuyShazuButton from '../BuyShazuButton';\n\nconst successCheckOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: SuccessCheckLottie,\n    background: 'transparent'\n};\n\nconst failedOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: FailedLottie,\n    background: 'transparent'\n};\n\nconst infoButtonStyle = { padding: '0.25rem', borderRadius: '10rem', width: '2.4rem', height: '2.4rem', minWidth: 'unset'}\n\nconst editButtonStyle = { padding: '0.4rem', borderRadius: '8px', width: '2.2rem', height: '2.2rem', minWidth: 'unset'}\n\nconst CustomTextField = styled(TextField)({\n    '& label.Mui-focused': {\n        color: 'white',\n    },\n    '& .MuiInput-underline:after': {\n        borderBottomColor: 'white',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: '#3B3B3B',\n        },\n        '&:hover fieldset': {\n            borderColor: 'white',\n        },\n        '&.Mui-focused fieldset': {\n            borderColor: 'white',\n        },\n    },\n});\n\nexport default function NFTCard(props){\n\n    const {account} = useEthers()\n\n\n    const allowance = useTokenAllowance(SHAZU_ADDRESS, account, SHAZU_MARKETPLACE_ADDRESS)\n\n    const { state, send } = useContractFunction(SHAZU_NFT_CONTRACT, 'transferFrom', {\n        transactionName: 'Transfer SHAZU NFT'\n    });\n\n    const [isTransfering, setisTransfering] = useState(false)\n\n    const [isTransfered, setIsTransfered] = useState(false)\n\n    useEffect(() => {\n        if (state.status === 'Exception') {\n\n\n            setisTransfering(false)\n        }\n    \n        if (state.status === 'Fail') {\n\n            setisTransfering(false)\n        }\n    \n        if (state.status === 'None') {\n\n        }\n    \n        if (state.status === 'Success') {\n\n            setisTransfering(true)\n\n            setIsTransfered(true)\n        }\n    \n    }, [state, account]);\n\n    const theme = useTheme();\n    const collectionCardStyle = {\n        borderRadius: theme.shape.borderRadiusMd,\n        backgroundColor: '#1C1C1C',\n        border: 'solid 1px',\n        borderColor: '#3B3B3B',\n        padding: '0.5rem 0.8rem',\n        transition: 'border-color 0.3s',\n        maxWidth: props.big ? '25rem' : '17rem',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        textAlign: 'left'\n    }\n\n    function getRarityColor(){\n        if(props.collection.nft.rarity === 'Common'){\n            return 'var(--shazu-yellow)';\n        }\n        if(props.collection.nft.rarity === 'Rare'){\n            return 'var(--shazu-blue)';\n        }\n        if(props.collection.nft.rarity === 'Super Rare'){\n            return 'var(--shazu-green)';\n        }\n        if(props.collection.nft.rarity === 'Ultimate Rare'){\n            return 'linear-gradient(90deg, rgba(236,35,255,1) 0%, rgba(166,37,255,1) 34%, rgba(173,0,255,1) 100%)';\n        }\n    }\n\n    function getGradientClass(){\n        if(props.collection.nft.rarity === 'Common'){\n            return 'gradient-border-yellow';\n        }\n        if(props.collection.nft.rarity === 'Rare'){\n            return 'gradient-border-blue';\n        }\n        if(props.collection.nft.rarity === 'Super Rare'){\n            return 'gradient-border-green';\n        }\n        if(props.collection.nft.rarity === 'Ultimate Rare'){\n            return 'gradient-border-purple';\n        }\n    }\n    const rarityLabelStyle = {\n        position: 'absolute', \n        padding: '0.1rem 0.5rem', \n        borderRadius: '4px', \n        background: getRarityColor(), \n        color: props.collection.nft.rarity !== 'Ultimate Rare' ? 'black' : 'white', \n        fontSize: '0.8rem', \n        top: '-3rem', \n        left: '-0.5rem', \n        transform: 'rotate(-12deg)',\n        width: 'max-content'\n    }\n\n\n    const [infoOpen, setInfoOpen] = useState(null);\n    \n    // EDIT LISTING\n    const handleEditListing = (e) => {        \n        const listingData = JSON.parse(e.target.value);\n        props.handleOpenEditListingDialog(listingData);\n    }\n\n    // TRANSFER\n    const [playPopDingSound, { stopPopDingSound }] = useSound(popDingSound);\n    const [openSuccessTransferDialog, setOpenSuccessTransferDialog] = useState(false);\n    const [openFailedTransferDialog, setOpenFailedTransferDialog] = useState(false);\n    const [shortenedTransferAddress, setShortenedTransferAddress] = useState('');\n    \n\n\n    const handleOpenSuccessTransferDialog = () => {\n        setOpenSuccessTransferDialog(true);\n    }\n    const handleCloseSuccessTransferDialog = () => {\n        setOpenSuccessTransferDialog(false);\n        setTransferAddress('');\n    }\n\n\n    const handleOpenFailedTransferDialog = () => {\n        setOpenFailedTransferDialog(true);\n    }\n    const handleCloseFailedTransferDialog = () => {\n        setOpenFailedTransferDialog(false);\n    }\n\n    const [transferAddress, setTransferAddress] = useState('');\n    const [isValidAddress, setIsValidAddress] = useState(false);\n\n    const checkTransferAddress = () => {\n        try {\n            shortenAddress(transferAddress);\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    useEffect(() => {\n        setIsValidAddress(checkTransferAddress());\n    }, [transferAddress]);\n\n    const handleInputChange = (e) => {\n        setTransferAddress(e.target.value);\n    }\n\n    const [click, setCLickTransfer] = useState(null);\n    const handleClickTransfer = (event) => {\n        setCLickTransfer(event.currentTarget);\n    };\n\n    const handleCloseTransfer = () => {\n        setCLickTransfer(null);\n    };\n\n    const handleTransfer = () => {\n        if(transferAddress === '' || transferAddress === null){\n            alert('Fill the Destination Address first!');\n            return false;\n        }\n\n        if (transferAddress === account) {\n            alert('You cannot send token to yourself!');\n            return false;\n        }\n        send(account, transferAddress, props.collection.id)\n\n        setShortenedTransferAddress(shortenAddress(transferAddress));\n\n        setisTransfering(true)\n    }\n\n    const handleListing = (e) => {\n        const listingData = JSON.parse(e.target.value);\n        console.info(listingData);\n\n        props.handleOpenListingDialog(listingData);\n    }\n\n    // BUY NFT\n    // STATUS DIALOG\n    const [openStatusDialog, setOpenStatusDialog] = useState({ open: false, success: false });\n    const [statusDialogMsg, setStatusDialogMsg] = useState('');\n    const [statusDialogInfo, setStatusDialogInfo] = useState('');\n    const [failedStatusMsg, setFailedStatusMsg] = useState('');\n\n    const handleOpenSuccessDialog = (msg, info) => {\n        playPopDingSound();\n        setStatusDialogMsg(msg);\n        setStatusDialogInfo(info);\n        setOpenStatusDialog({ open: true, success: true });\n    }\n\n    const handleOpenFailedDialog = (msg, reason) => {\n        playPopDingSound();\n        /*setStatusDialogMsg(msg);\n        setFailedStatusMsg(reason);\n        setOpenStatusDialog({ open: true, success: true });\n        */\n        setStatusDialogMsg(msg);\n        setStatusDialogInfo(reason);\n        setOpenStatusDialog({ open: true, success: true });\n    }\n\n    const handleCloseStatusDialog = () => {\n        setOpenStatusDialog({ ...openStatusDialog, open: false });\n        setStatusDialogMsg('');\n        setFailedStatusMsg('');\n    }\n\n    const handleBuy = (e) => {\n        const nftData = JSON.parse(e.target.value);\n\n        //handleOpenSuccessDialog('Buy NFT Successful', `id: ${nftData.nftId}`)\n        // handleOpenFailedDialog('Buy NFT Failed', 'failed reason here');\n    }\n\n    if(props.unknown){\n        return(\n            <div style={{ height: '100%' }}>\n                <Box className={`gradient-border p-relative ${getGradientClass()}`} style={ collectionCardStyle }>\n                    <div style={{ visibility: 'hidden' }}>\n                        <div style={{ width: '100%', borderRadius: theme.shape.borderRadiusMd, marginTop: '0.5rem', marginBottom: '0.5em'  }} >\n                            <video className=\"vid\" playsInline muted autoPlay loop style={{ width: '100%', borderRadius: '8px', aspectRatio: '1' }} >\n                                <source src={props.collection.nft.video} type=\"video/mp4\"/>\n                            </video>\n                        </div>\n                        <div style={{ position: 'relative', height: '0', width: '0'}}>\n                            <div style={rarityLabelStyle}>\n                                {props.collection.nft.rarity}\n                            </div>\n                        </div>\n        \n                        <Typography variant=\"h6\" style={{ fontWeight: '700', marginBottom: '0.8rem' }}>\n                            {props.collection.nft.name}\n                        </Typography>\n        \n                        {(props.amount || props.amount !== 0 || props.amount !== null) &&\n                            <div className=\"p-relative w-100\">\n                                <div className=\"nft-card-amount\">\n                                    x{props.amount}\n                                </div>\n                            </div>\n                        }\n                    </div>\n\n                    <div style={{ position: 'absolute', top: '0', left: '0', \n                        width: '100%', height: '100%', display: 'flex', \n                        flexDirection: 'column', justifyContent: 'center', \n                        alignItems: 'center', opacity: '0.2' }}\n                    >\n                        <Typography style={{ fontSize: '4rem'}}>\n                            ?\n                        </Typography>\n                        <Typography>\n                            Not owned yet\n                        </Typography>\n                    </div>\n                </Box>\n            </div>\n        )\n    }\n\n    if(props.sold){\n        return(\n            <div>\n                <Box className={`gradient-border ${getGradientClass()}`} style={{ ...collectionCardStyle, position: 'relative' }}>\n                    <div style={{ width: '100%', borderRadius: theme.shape.borderRadiusMd, marginTop: '0.5rem', marginBottom: '0.5em'  }} >\n                        <video className=\"vid\" playsInline muted autoPlay loop style={{ width: '100%', borderRadius: '8px', aspectRatio: '1' }} >\n                            <source src={props.collection.nft.video} type=\"video/mp4\"/>\n                        </video>\n                    </div>\n                    <div style={{ position: 'relative', height: '0', width: '0'}}>\n                        <div style={rarityLabelStyle}>\n                            {props.collection.nft.rarity}\n                        </div>\n                    </div>\n    \n                    <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" style={{ marginBottom: '0.8rem'}} >\n                        <Stack>\n                            <Typography variant=\"h6\" style={{ fontWeight: '700', marginBottom: '0.8rem' }}>\n                                {props.collection.nft.name}\n                            </Typography>\n\n                            {(typeof props.collection.id !== 'undefined') &&\n                                <Typography style={{ opacity: '0.5', fontSize: '0.8rem', marginTop: '-1rem' }}>\n                                    id: {props.collection.id}\n                                </Typography>\n                            }\n                        </Stack>\n\n                        {typeof props.collection.description !== 'undefined' &&\n                            <>\n                                <Button variant=\"container\" style={infoButtonStyle} onClick={(e) => setInfoOpen(e.currentTarget)}>\n                                    <img src=\"/static/SHAZU/icons/info.svg\" className=\"pe-none\" alt=\"\" style={{ width: '100%', opacity: '0.5' }} />\n                                </Button>\n                                \n                                <Popover\n                                    open={Boolean(infoOpen)}\n                                    anchorEl={infoOpen}\n                                    onClose={() => setInfoOpen(null)}\n                                    anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                                    transformOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                                    PaperProps={{\n                                        sx: {\n                                            p: 1,\n                                            maxWidth: 200\n                                        }\n                                    }}\n                                >\n                                    {props.collection.description}\n                                </Popover>\n                            </>\n                        }   \n                    </Stack>\n    \n                    {(typeof props.amount !== 'undefined') &&\n                        <div className=\"p-relative w-100\">\n                            <div className=\"nft-card-amount\">\n                                x{props.amount}\n                            </div>\n                        </div>\n                    }\n\n                    <div className=\"sold-overlay\">\n                        <img src=\"/static/SHAZU/misc/sold-tape.png\" alt=\"\" />\n                    </div>\n                </Box>\n            </div>\n        )\n    }\n\n    return(\n        <div>\n            {/* TRANSFER DIALOG */}\n            <DialogAnimate open={openSuccessTransferDialog} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseSuccessTransferDialog}>\n                <DialogContent style={{ textAlign: 'center' }}>\n                <div className=\"successCheck-lottie-container\">\n                    <Lottie options={successCheckOptions} isClickToPauseDisabled />\n                </div>\n                <Typography variant=\"h3\">\n                    Transfer Successful!\n                </Typography>\n                \n                <div className=\"elevate-card\">\n                    <Typography variant=\"h6\">\n                        Transferred to: <br/> \n                        <a href={`https://bscscan.com/address/${transferAddress}`} rel=\"noreferrer\" target=\"_blank\">\n                            {shortenedTransferAddress}\n                        </a>\n                    </Typography>\n                </div>\n                </DialogContent>\n            </DialogAnimate>\n\n            {/* TRANSFER DIALOG FAILED */}\n            <DialogAnimate open={openFailedTransferDialog} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseFailedTransferDialog}>\n                <DialogContent style={{ textAlign: 'center' }}>\n                <div className=\"successCheck-lottie-container\">\n                <Lottie options={failedOptions} isClickToPauseDisabled />\n                </div>\n                <Typography variant=\"h3\">\n                    Transfer Failed\n                </Typography>\n                </DialogContent>\n            </DialogAnimate>\n\n            <Box className={`gradient-border ${getGradientClass()}`} style={ collectionCardStyle }>\n                {(typeof props.collection.saleData !== 'undefined' && props.editListingAction) &&\n                    <>\n                        <div className=\"p-relative w-100\">\n                            <img src=\"/static/SHAZU/misc/sale-sticker.svg\" alt=\"\" className=\"swing-rotate-normal\" style={{ position: 'absolute', width: '6rem', right: '-2.4rem', top: '-2.4rem' }} />\n                        </div>\n                    </>\n                }\n\n                <div style={{ width: '100%', borderRadius: theme.shape.borderRadiusMd, marginTop: '0.5rem', marginBottom: '0.5em'  }} >\n                    <video className=\"vid\" playsInline muted autoPlay loop style={{ width: '100%', borderRadius: '8px', aspectRatio: '1' }} >\n                        <source src={props.collection.nft.video} type=\"video/mp4\"/>\n                    </video>\n                </div>\n                <div style={{ position: 'relative', height: '0', width: '0'}}>\n                    <div style={rarityLabelStyle}>\n                        {props.collection.nft.rarity}\n                    </div>\n                </div>\n\n                <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" style={{ marginBottom: '0.8rem'}} >\n                    <Stack>\n                        <Typography variant=\"h6\" style={{ fontWeight: '700', marginBottom: '0.8rem' }}>\n                            {props.collection.nft.name}\n                        </Typography>\n\n                        {(typeof props.collection.id !== 'undefined') &&\n                            <Typography style={{ opacity: '0.5', fontSize: '0.8rem', marginTop: '-1rem' }}>\n                                id: {props.collection.id}\n                            </Typography>\n                        }\n                    </Stack>\n\n                    {typeof props.collection.description !== 'undefined' &&\n                        <>\n                            <Button variant=\"container\" style={infoButtonStyle} onClick={(e) => setInfoOpen(e.currentTarget)}>\n                                <img src=\"/static/SHAZU/icons/info.svg\" className=\"pe-none\" alt=\"\" style={{ width: '100%', opacity: '0.5' }} />\n                            </Button>\n                            \n                            <Popover\n                                open={Boolean(infoOpen)}\n                                anchorEl={infoOpen}\n                                onClose={() => setInfoOpen(null)}\n                                anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                                transformOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                                PaperProps={{\n                                    sx: {\n                                        p: 1,\n                                        maxWidth: 200\n                                    }\n                                }}\n                            >\n                                {props.collection.description}\n                            </Popover>\n                        </>\n                    }   \n                </Stack>\n\n                {props.ownedAction && !isTransfered &&\n                    <div className=\"nft-owned-action shadow-sm\">\n                        <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\" alignItems=\"center\">\n                            <Stack direction=\"row\" spacing={1} style={{ width: '100%'}}>\n                                <Button onClick={handleClickTransfer} variant=\"contained\" color=\"yellow\" className=\"nft-owned-action-btn\">\n                                    Transfer\n                                </Button>\n\n                                <Popover\n                                    open={Boolean(click)}\n                                    anchorEl={click}\n                                    onClose={handleCloseTransfer}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'center'\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'center'\n                                }}\n                                >\n                                    <Box sx={{ p: 2, maxWidth: '30rem', width: '90vw' }}>\n                                        <Typography variant=\"subtitle1\" gutterBottom>\n                                            Destination Address\n                                        </Typography>\n\n                                        <CustomTextField fullWidth type=\"search\" size=\"small\" onChange={handleInputChange}/>\n\n                                        <Typography variant=\"body2\" sx={{ color: 'text.secondary', marginTop: '0.2rem' }}>\n                                            {props.collection.nft.name} ({props.collection.id})\n                                        </Typography>\n\n                                        <Button disabled={!isValidAddress || isTransfering}\n                                            variant=\"contained\" color=\"yellow\"\n                                            onClick={handleTransfer} style={{ marginTop: '2rem', width: '100%' }}\n                                        >\n                                            {isTransfering ? \"Transferring...\" : \"Transfer\" }\n                                        </Button>\n                                    </Box>\n                                </Popover>\n\n                                <Button onClick={handleListing} value={JSON.stringify(props.collection)} variant=\"contained\" color=\"success\" className=\"nft-owned-action-btn\">\n                                    List\n                                </Button>\n                            </Stack>\n                        </Stack>\n                    </div>\n                }\n\n                {(typeof props.amount !== 'undefined') &&\n                    <div className=\"p-relative w-100\">\n                        <div className=\"nft-card-amount\">\n                            x{props.amount}\n                        </div>\n                    </div>\n                }\n\n                {/* EDIT LISTING ACTION */}\n                {(typeof props.collection.saleData !== 'undefined' && props.editListingAction) \n                    &&\n                    <div className=\"p-relative w-100\">\n                        <div className=\"nft-sale-info shadow-sm\">\n                            <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\" alignItems=\"center\">\n                                <Stack>\n                                    <div className=\"nft-sale-caption\">\n                                        Listing price\n                                    </div>\n                                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                                        <div>\n                                        {utils.parseEther(props.collection.saleData.price).gt(utils.parseEther(\"1\")) ? fCRCurrency(props.collection.saleData.price) : props.collection.saleData.price} {props.collection.saleData.currency}\n                                        </div>\n                                        {\n                                            props.collection.saleData.currency === 'BNB' &&\n                                            <img src=\"/static/SHAZU/icons/ic_bnb.svg\" alt=\"\" style={{ width: '1rem', height: '1rem', marginLeft: '0.2rem', marginBottom: '0.2rem' }}/>\n                                        }\n                                        {\n                                            props.collection.saleData.currency === 'SHAZU' &&\n                                            <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1rem', height: '1rem', marginLeft: '0.2rem', marginBottom: '0.2rem' }} />\n                                        }\n                                    </Stack>\n                                </Stack>\n\n                                <Button variant=\"container\" value={JSON.stringify(props.collection)} style={editButtonStyle} onClick={handleEditListing}>\n                                    <img src=\"/static/SHAZU/icons/edit.svg\" className=\"pe-none\" alt=\"\" style={{ width: '100%', opacity: '0.5' }} />\n                                </Button>\n                            </Stack>\n                        </div>\n                    </div>\n                }\n\n                {/* MARKETPLACE LISTING ACTION */}\n                {(typeof props.collection.marketData !== 'undefined' && props.marketplaceListing)\n                    &&\n                    <>\n                        <div className=\"elevate-card-sm\" style={{ marginBottom: '1rem'}}>\n                            <Stack direction=\"column\" justifyContent=\"space-between\" >\n                                <div style={{ fontSize: '0.8rem'}}>\n                                    Price: \n                                </div>\n\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                                    <div style={{ fontSize: '1rem', fontWeight: '700'}}>\n                                        {utils.parseEther(props.collection.saleData.price).gt(utils.parseEther(\"1\")) ? fCRCurrency(props.collection.saleData.price) : props.collection.saleData.price} {props.collection.saleData.currency}\n                                    </div>\n                                    {\n                                        props.collection.saleData.currency === 'BNB' &&\n                                        <img src=\"/static/SHAZU/icons/ic_bnb.svg\" alt=\"\" style={{ width: '1.2rem', height: '1.2rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }}/>\n                                    }\n                                    {\n                                        props.collection.saleData.currency === 'SHAZU' &&\n                                        <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1.2rem', height: '1.2rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }} />\n                                    }\n                                </Stack>\n                            </Stack>\n                        </div>\n                      \n                        <Stack direction=\"row\" spacing={1}>\n                            \n                            {(props.collection.saleData.currency == 'SHAZU') ? (\n                                (allowance && allowance.gte(utils.parseEther(props.collection.saleData.price))) ? (\n                                    <BuyShazuButton tokenId = {props.collection.saleData.saleId} price={props.collection.saleData.price} seller={props.collection.saleData.seller}/>\n                                ):(\n                                    <ApproveShazuButton price={props.collection.saleData.price} seller={props.collection.saleData.seller} />\n                                )\n                            ): (\n                                <BuyButton tokenId = {props.collection.saleData.saleId} price={props.collection.saleData.price} seller={props.collection.saleData.seller}/>\n                            )}\n                        </Stack>\n\n                        {/* STATUS DIALOG */}\n                        <DialogAnimate open={openStatusDialog.open} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseStatusDialog}>\n                            <DialogContent style={{ textAlign: 'center' }}>\n                                {\n                                    openStatusDialog.success \n                                    ?\n                                    <div className=\"successCheck-lottie-container\">\n                                        <Lottie options={successCheckOptions} isClickToPauseDisabled />\n                                    </div>\n                                    :\n                                    <div className=\"successCheck-lottie-container\">\n                                        <Lottie options={failedOptions} isClickToPauseDisabled />\n                                    </div>\n                                }\n                                \n                                <Typography variant=\"h3\">\n                                    {statusDialogMsg}\n                                </Typography>\n                                \n                                {\n                                    openStatusDialog.success \n                                    ?\n                                    <div className=\"elevate-card\">\n                                        <Typography variant=\"h5\">\n                                            {statusDialogInfo}\n                                        </Typography>\n                                    </div>\n                                    :\n                                    <div>\n                                        {failedStatusMsg}\n                                    </div>\n                                }\n                            </DialogContent>\n                        </DialogAnimate>\n                    </>\n                }\n\n                {/* TOP SALE */}\n                {(typeof props.collection.topSaleData !== 'undefined' && props.topSale)\n                    &&\n                    <>\n                        <div className=\"elevate-card\" style={{ marginBottom: '0.4rem', marginTop: '-0.4rem' }}>\n                            <Stack alignItems=\"center\">\n                                <div style={{ fontSize: '1.2rem', fontWeight: '700'}}>\n                                {utils.parseEther(props.collection.topSaleData.price).gt(utils.parseEther(\"1\")) ? fCRCurrency(props.collection.topSaleData.price) : props.collection.topSaleData.price} {props.collection.topSaleData.currency}\n                                </div>\n                            </Stack>\n                        </div>\n                    </>\n                }\n            </Box>\n        </div>\n    )\n\n}\n","import { gql } from '@apollo/client';\n\n\nexport const GET_NFT_BY_USER = gql`\n  query GetNFT($account: String!) {\n    tokens(first: 1000, orderBy:id, orderDirection:desc, where: { owner: $account }) {\n        rarity\n        id\n        offer {\n          id\n          offerId\n          price\n          isShazuPrice\n          cancelled\n          fulfilled\n        }\n    }\n  }\n`;\n\nexport const GET_LISTED_NFT_BY_USER = gql`\n  query GetNFT($account: String!) {\n    tokens(first: 1000, orderBy:id, orderDirection:desc, where: { owner: $account,  offer_not: null}) {\n        rarity\n        id\n        offer {\n          id\n          offerId\n          price\n          isShazuPrice\n          cancelled\n          fulfilled\n        }\n    }\n  }\n`;\n\nexport const GET_SOLD_NFT_BY_USER = gql`\nquery GetNFT($account: String!) {\n    offers(first: 1000, orderBy:id, orderDirection:desc, where:{user: $account, fulfilled: true}) {\n            id\n            offerId\n            token {\n            id\n        }\n        rarity\n        price\n        isShazuPrice\n        cancelled\n        fulfilled\n    }\n  }\n`;\n\n\nexport const GET_BURNED_NFT_BY_USER = gql`\nquery GetNFT($account: String!) {\n    transfers(first: 1000, orderBy:id, orderDirection:desc, where:{from: $account, to: \"0x0000000000000000000000000000000000000000\"}) {\n      id\n      token {\n        id\n        rarity\n      }\n      \n      from {\n        id\n      }\n    }\n  }\n`;\n\nexport const LAST_MINT_NFT = gql`\nquery GetScratches {\n  scratches(first: 1000, orderBy:id, orderDirection:desc) {\n    owner {\n      id\n    }\n    \n    rarity\n    \n    token {\n      id\n    }\n    \n    rarity\n    block\n    transactionHash\n    timestamp\n  }\n}\n`\n\nexport const LAST_TOP_SALE = gql`\nquery GetNFT {\n  offers(first: 4, orderBy:price, orderDirection:desc, where:{fulfilled: true}) {\n      id\n      offerId\n      token {\n          id\n      }\n      buyer {\n        id\n      }\n      rarity\n      price\n      isShazuPrice\n      cancelled\n      fulfilled\n  }\n}\n`\n\n\nexport const SALE_HISTORY = gql`\nquery GetNFT {\n  offers(first: 1000, orderBy:block, orderDirection:desc, where:{fulfilled: true}) {\n      id\n      offerId\n      token {\n          id\n      }\n      buyer {\n        id\n      }\n\n      user {\n        id\n      }\n\n      rarity\n      price\n      isShazuPrice\n      cancelled\n      fulfilled\n      timestamp\n  }\n}\n`\n\nexport const MARKETPLACE_HISTORY = gql`\nquery GetNFT {\n  offers(first: 1000, orderBy:price, orderDirection:asc, where:{fulfilled: false, cancelled:false}) {\n      id\n      offerId\n      token {\n          id\n      }\n      user {\n        id\n      }\n      rarity\n      price\n      isShazuPrice\n      cancelled\n      fulfilled\n      timestamp\n  }\n}\n`\n\nexport const STAT = gql`\nquery GetStat {\n  stats {\n    minSalePriceBNB\n    minSalePriceSHAZU\n    volumeBNB\n    volumeSHAZU\n  }\n}\n`"],"sourceRoot":""}