{"version":3,"sources":["components/ApproveBoostButton.js","components/BoostButton.js","components/ApproveUnstakeButton.js","components/UnstakeButton.js","pages/DojoPage.js","hooks/useCountdown.js","components/BuyButton.js","components/ApproveShazuButton.js","components/BuyShazuButton.js","components/main/NFTCard.js"],"names":["ApproveBoostButton","props","disabled","setDisabled","useState","buttonText","setButtonText","value","constants","MaxUint256","state","send","useContractFunction","SHAZU_CONTRACT","transactionName","useEffect","status","handleOpenFailedDialog","_jsx","Button","onClick","handleApprove","SHAZU_BOOST_POOL_ADDRESS","color","variant","className","children","BoostButton","SHAZU_BOOST_POOL_CONTRACT","boostAmount","utils","parseEther","BigNumber","from","console","log","handleOpenSuccessDialog","handle","handleBoost","enabled","ApproveUnstakeButton","SHAZU_BOOST_TOKEN_CONTRACT","UnstakeButton","parseInt","AnimateContainer","styled","motion","div","_ref","theme","display","justifyContent","Typography","_ref2","margin","spacing","breakpoints","up","Date","prototype","addHours","h","this","setHours","getHours","DUMMY_START_COUNTDOWN","DUMMY_FINISH_COUNTDOWN","successCheckOptions","loop","autoplay","animationData","SuccessCheckLottie","background","failedOptions","FailedLottie","NFT_COLLECTION","common","name","rarity","video","smallThumbnail","rare","superrare","ultimaterare","NFT_COLLECTION_TYPES","nft","rarity_id","DojoPage","themeStretch","useSettings","useTheme","playPopDingSound","stopPopDingSound","useMediaQuery","down","useSound","popDingSound","stakingTab","setStakingTab","handleChangeStakeTab","e","target","progressPCT","getTime","now","openStatusDialog","setOpenStatusDialog","open","success","statusDialogMsg","setStatusDialogMsg","statusDialogAmt","setStatusDialogAmt","failedStatusMsg","setFailedStatusMsg","statusType","setStatusType","msg","amount","type","reason","stakedAmount","setStakedAmount","claimAmount","setClaimAmount","canClaim","setCanClaim","account","date","countdown","setCountdown","days","hours","minutes","seconds","interval","setInterval","setNewTime","clearInterval","distanceToNow","getDays","Math","floor","concat","slice","getMinutes","getSeconds","useCountdown","useEthers","rarityCollection","setRarityCollection","tokenTypes","setTokenTypes","rarities","userInfo","rewards","balanceOf","useCalls","contract","SHAZU_NFT_CONTRACT","address","SHAZU_NFT_ADDRESS","method","args","commonAmount","toString","rareAmount","epicAmount","mythicAmount","areAllTypesAvailable","commonTokenId","rareTokenId","epicTokenId","mythicTokenId","allowance","useTokenAllowance","SHAZU_ADDRESS","allowanceUnstake","SHAZU_BOOST_TOKEN_ADDRESS","balance","useTokenBalance","balanceBoost","boostAmountMax","setBoostAmountMax","unstakeAmountMax","setUnstakeAmountMax","balanceSetuped","setBalanceSetuped","setBoostAmount","formatEther","setUnstakeAmount","round","str","decimalPlaces","arguments","length","undefined","arr","split","fraction","substr","unstakeAmount","_jsxs","Page","title","style","overflow","initial","animate","variants","varWrapEnter","varFadeInUp","paddingBottom","borderBottom","Container","maxWidth","Stack","direction","paddingTop","alignItems","src","alt","width","marginRight","flexWrap","fCRCurrency","height","varFadeInLeft","position","top","opacity","left","Grid","container","item","xs","md","lg","xl","padding","lineHeight","marginBottom","fontSize","paragraph","marginTop","varFadeInRight","right","Box","fontWeight","marginLeft","backgroundColor","borderRadius","marginInline","TextField","onChange","gt","label","lt","caption","textAlign","join","map","collection","index","ownedAmount","_Fragment","sm","align","NFTCard","unknown","DialogAnimate","varZoomInUp","scroll","onClose","handleCloseStatusDialog","DialogContent","Lottie","options","isClickToPauseDisabled","BuyButton","usingDisabled","setUsingDisabled","SHAZU_MARKETPLACE_CONTRACT","useEtherBalance","toLowerCase","seller","gte","price","handleBuy","tokenId","ApproveShazuButton","SHAZU_MARKETPLACE_ADDRESS","BuyShazuButton","infoButtonStyle","minWidth","editButtonStyle","CustomTextField","borderBottomColor","borderColor","isTransfering","setisTransfering","isTransfered","setIsTransfered","collectionCardStyle","shape","borderRadiusMd","border","transition","big","getGradientClass","rarityLabelStyle","transform","infoOpen","setInfoOpen","openSuccessTransferDialog","setOpenSuccessTransferDialog","openFailedTransferDialog","setOpenFailedTransferDialog","shortenedTransferAddress","setShortenedTransferAddress","transferAddress","setTransferAddress","isValidAddress","setIsValidAddress","checkTransferAddress","shortenAddress","error","click","setCLickTransfer","statusDialogInfo","setStatusDialogInfo","visibility","playsInline","muted","autoPlay","aspectRatio","flexDirection","sold","id","description","currentTarget","Popover","Boolean","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","PaperProps","sx","p","handleCloseSuccessTransferDialog","href","rel","handleCloseFailedTransferDialog","saleData","editListingAction","ownedAction","event","handleCloseTransfer","gutterBottom","fullWidth","size","handleTransfer","alert","listingData","JSON","parse","info","handleOpenListingDialog","stringify","currency","handleOpenEditListingDialog","marketData","marketplaceListing","saleId","topSaleData","topSale"],"mappings":"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","file":"static/js/15.8386ddbc.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers } from '@usedapp/core';\n\nimport { SHAZU_CONTRACT, SHAZU_BOOST_POOL_ADDRESS } from '../config';\n\nconst ApproveBoostButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [buttonText, setButtonText] = useState('APPROVE SHAZU');\n\n  const value = constants.MaxUint256\n\n\nconst { state, send } = useContractFunction(SHAZU_CONTRACT, 'approve', { transactionName: 'Approve SHAZU' });\n\n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n    \n      setDisabled(false)\n      setButtonText('APPROVE SHAZU');\n      props.handleOpenFailedDialog('Failed to approve $SHAZU', 0, 'APPROVE')\n    }\n\n    if (state.status === 'None') {\n      setDisabled(false)\n      setButtonText('APPROVE SHAZU');\n    }\n\n    if (state.status === 'Success') {\n      setDisabled(false)\n      setButtonText('APPROVE SHAZU');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setButtonText('APPROVING...');\n    }\n  }, [state]);\n\n  const handleApprove = () => {\n    send(SHAZU_BOOST_POOL_ADDRESS, value);\n  };\n\n  return (\n    <Button onClick={handleApprove} disabled={disabled} color=\"yellow\" variant=\"contained\" className=\"border-field-button\">\n        {buttonText}\n    </Button>\n  );\n};\n\nexport default ApproveBoostButton;\n","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers } from '@usedapp/core';\n\nimport { SHAZU_BOOST_POOL_CONTRACT} from '../config';\n\nconst BoostButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [buttonText, setButtonText] = useState('BOOST');\n\n  const { state, send } = useContractFunction(SHAZU_BOOST_POOL_CONTRACT, 'stake', { transactionName: 'BOOST' });\n\n  const value = props.boostAmount !== '' ? utils.parseEther(props.boostAmount) : BigNumber.from('0');\n\n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n\n      console.log(state)\n      setDisabled(false)\n      setButtonText('BOOST');\n      props.handleOpenFailedDialog('Boost failed', props.boostAmount, 'BOOST')\n    }\n\n    if (state.status === 'None') {\n      setDisabled(false)\n      setButtonText('BOOST');\n    }\n\n    if (state.status === 'Success') {\n      setDisabled(false)\n      setButtonText('BOOST');\n      props.handleOpenSuccessDialog('Boost successful', props.boostAmount, 'BOOST')\n      props.handle()\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setButtonText('BOOST...');\n    }\n  }, [state]);\n\n  const handleBoost = () => {\n    send(value);\n  };\n\n  return (\n    <Button onClick={handleBoost} disabled={disabled || !props.boostAmount || !props.enabled} color=\"yellow\" variant=\"contained\" className=\"border-field-button\">\n        {buttonText}\n    </Button>\n  );\n};\n\nexport default BoostButton;\n","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers } from '@usedapp/core';\n\nimport { SHAZU_BOOST_TOKEN_CONTRACT, SHAZU_BOOST_POOL_ADDRESS } from '../config';\n\nconst ApproveUnstakeButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [buttonText, setButtonText] = useState('ENABLE');\n\n  const value = constants.MaxUint256\n\n\nconst { state, send } = useContractFunction(SHAZU_BOOST_TOKEN_CONTRACT, 'approve', { transactionName: 'Approve SHAZU BOOST' });\n\n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n    \n      setDisabled(false)\n      setButtonText('ENABLET');\n      props.handleOpenFailedDialog('Failed to enable unstake', 0, 'ENABLE')\n    }\n\n    if (state.status === 'None') {\n      setDisabled(false)\n      setButtonText('ENABLE');\n    }\n\n    if (state.status === 'Success') {\n      setDisabled(false)\n      setButtonText('ENABLE');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setButtonText('ENABLING...');\n    }\n  }, [state]);\n\n  const handleApprove = () => {\n    send(SHAZU_BOOST_POOL_ADDRESS, value);\n  };\n\n  return (\n    <Button onClick={handleApprove} disabled={disabled} color=\"yellow\" variant=\"contained\" className=\"border-field-button\">\n        {buttonText}\n    </Button>\n  );\n};\n\nexport default ApproveUnstakeButton;\n","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers } from '@usedapp/core';\n\nimport { SHAZU_BOOST_POOL_CONTRACT} from '../config';\n\nconst UnstakeButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [buttonText, setButtonText] = useState('UNSTAKE');\n\n  const { state, send } = useContractFunction(SHAZU_BOOST_POOL_CONTRACT, 'unstake', { transactionName: 'UNSTAKE' });\n\n  const value = props.boostAmount !== '' &&  parseInt(props.boostAmount) !== 0 ? utils.parseEther(props.boostAmount) : BigNumber.from('0');\n\n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n\n      console.log(state)\n      setDisabled(false)\n      setButtonText('UNSTAKE');\n      props.handleOpenFailedDialog('Unstake failed', props.boostAmount, 'UNSTAKE')\n    }\n\n    if (state.status === 'None') {\n      setDisabled(false)\n      setButtonText('UNSTAKE');\n    }\n\n    if (state.status === 'Success') {\n      setDisabled(false)\n      setButtonText('UNSTAKE');\n      props.handleOpenSuccessDialog('Unstake successful', props.boostAmount, 'UNSTAKE')\n      props.handle()\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setButtonText('UNSTAKE...');\n    }\n  }, [state]);\n\n  const handleBoost = () => {\n    send(value);\n  };\n\n  return (\n    <Button onClick={handleBoost} disabled={disabled || !props.boostAmount || props.boostAmount == 0 || !props.enabled} color=\"yellow\" variant=\"contained\" className=\"border-field-button\">\n        {buttonText}\n    </Button>\n  );\n};\n\nexport default UnstakeButton;\n","// material\nimport { Container, Typography, Button, Paper, Grid, Divider, TextField, Stack, Box, useMediaQuery, DialogContent } from '@mui/material';\nimport { motion } from 'framer-motion';\nimport { styled, useTheme  } from '@mui/material/styles';\nimport { useState, useEffect } from 'react';\nimport Lottie from 'react-lottie';\nimport useSound from 'use-sound';\n\n// hooks\nimport useSettings from '../hooks/useSettings';\nimport useCountdown from '../hooks/useCountdown';\nimport { fCurrency, fCRCurrency } from '../utils/formatNumber';\n\n\n// components\nimport Page from '../components/Page';\nimport { varWrapEnter, varFadeInUp, varFadeInRight, varFadeInLeft, DialogAnimate, varZoomInUp } from '../components/animate';\nimport NFTCard from '../components/main/NFTCard';\n\nimport SuccessCheckLottie from '../assets/lottie/successCheck.json';\nimport FailedLottie from '../assets/lottie/failed.json';\n\nimport popDingSound from '../assets/sfx/popDing.wav';\n\nimport { utils, FixedNumber, BigNumber } from 'ethers';\nimport { useEthers,  useCalls, useContractFunction, useTokenAllowance, useTokenBalance} from '@usedapp/core';\nimport { SHAZU_CONTRACT, SHAZU_NFT_ADDRESS, SHAZU_NFT_CONTRACT, SHAZU_BOOST_POOL_CONTRACT, SHAZU_BOOST_POOL_ADDRESS, SHAZU_BOOST_TOKEN_CONTRACT, SHAZU_BOOST_TOKEN_ADDRESS, SHAZU_ADDRESS} from '../config';\n\nimport ApproveBoostButton from '../components/ApproveBoostButton';\nimport BoostButton from '../components/BoostButton';\nimport ApproveUnstakeButton from '../components/ApproveUnstakeButton';\nimport UnstakeButton from '../components/UnstakeButton';\n// ----------------------------------------------------------------------\n\nconst AnimateContainer = styled(motion.div)(({ theme }) => ({\n\n}));\n\nconst CountdownStyle = styled('div')({\n  display: 'flex',\n  justifyContent: 'left'\n});\n\nconst SeparatorStyle = styled(Typography)(({ theme }) => ({\n  margin: theme.spacing(0, 1),\n  [theme.breakpoints.up('sm')]: {\n      margin: theme.spacing(0, 1.5)\n  }\n}));\n\nDate.prototype.addHours= function(h){\n  this.setHours(this.getHours()+h);\n  return this;\n}\n\nconst DUMMY_START_COUNTDOWN = new Date().addHours(-23);\nconst DUMMY_FINISH_COUNTDOWN = new Date().addHours(2);\n\nconst successCheckOptions = {\n  loop: false,\n  autoplay: true,\n  animationData: SuccessCheckLottie,\n  background: 'transparent'\n};\n\nconst failedOptions = {\n  loop: false,\n  autoplay: true,\n  animationData: FailedLottie,\n  background: 'transparent'\n};\n\nconst NFT_COLLECTION = {\n  common: {\n      name: 'Orange Ninja',\n      rarity: 'Common',\n      video: '/static/SHAZU/nft/ORANGE_NINJA.mp4',\n      smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_orange.jpg'\n  },\n  rare: {\n      name: 'Blue Ninja',\n      rarity: 'Rare',\n      video: '/static/SHAZU/nft/BLUE_NINJA.mp4',\n      smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_blue.jpg'\n  },\n  superrare: {\n      name: 'Green Ninja',\n      rarity: 'Super Rare',\n      video: '/static/SHAZU/nft/GREEN_NINJA.mp4',\n      smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_green.jpg'\n  },\n  ultimaterare: {\n      name: 'Purple Ninja',\n      rarity: 'Ultimate Rare',\n      video: '/static/SHAZU/nft/PURPLE_NINJA.mp4',\n      smallThumbnail: '/static/SHAZU/nft/thumbnail/nft_thumbnail_purple.jpg'\n  },\n}\n\nconst NFT_COLLECTION_TYPES = [\n  {\n    nft: NFT_COLLECTION.common,\n    rarity_id: 'common',\n  },\n  {\n    nft: NFT_COLLECTION.rare,\n    rarity_id: 'rare',\n  },\n  {\n    nft: NFT_COLLECTION.superrare,\n    rarity_id: 'superrare',\n  },\n  {\n    nft: NFT_COLLECTION.ultimaterare,\n    rarity_id: 'ultimaterare',\n  },\n]\n\nexport default function DojoPage() {\n  const { themeStretch } = useSettings();\n  const theme = useTheme();\n\n  const isMobile = useMediaQuery(theme.breakpoints.down('lg'));\n\n  const [playPopDingSound, { stopPopDingSound }] = useSound(popDingSound);\n\n  const [stakingTab, setStakingTab] = useState(\"STAKE\");\n  \n  const handleChangeStakeTab = (e) => {\n    if(e.target.value === 'STAKE'){\n      setStakingTab(\"STAKE\");\n    }else if(e.target.value === 'UNSTAKE'){\n      setStakingTab(\"UNSTAKE\");\n    }\n  }\n\n  let progressPCT = 0;\n  if (new Date().getTime() <= DUMMY_FINISH_COUNTDOWN.getTime()) {\n      progressPCT = ((Date.now() - DUMMY_START_COUNTDOWN) / (DUMMY_FINISH_COUNTDOWN - DUMMY_START_COUNTDOWN)) * 100;\n  } else {\n      progressPCT = 0;\n  }\n\n  // STATUS DIALOG\n  const [openStatusDialog, setOpenStatusDialog] = useState({ open: false, success: false });\n  const [statusDialogMsg, setStatusDialogMsg] = useState('');\n  const [statusDialogAmt, setStatusDialogAmt] = useState(0);\n  const [failedStatusMsg, setFailedStatusMsg] = useState('');\n  const [statusType, setStatusType] = useState('');\n\n  const handleOpenSuccessDialog = (msg, amount, type) => {\n    playPopDingSound();\n    setStatusDialogMsg(msg);\n    setStatusDialogAmt(amount);\n    setStatusType(type);\n    setOpenStatusDialog({ open: true, success: true });\n  }\n\n  const handleOpenFailedDialog = (msg, amount, type, reason) => {\n    playPopDingSound();\n    setStatusDialogMsg(msg);\n    setStatusDialogAmt(amount);\n    setStatusType(type);\n    setOpenStatusDialog({ open: true, success: false });\n    setFailedStatusMsg(reason);\n  }\n\n  // STAKE\n  const [stakedAmount, setStakedAmount] = useState(1000000000);\n\n  // CLAIM REWARDS\n  const [claimAmount, setClaimAmount] = useState(500000);\n  const [canClaim, setCanClaim] = useState(true);\n\n  const countdown = useCountdown(DUMMY_FINISH_COUNTDOWN);\n\n  const { account } = useEthers()\n\n  const [rarityCollection, setRarityCollection] = useState(false)\n\n  const [tokenTypes, setTokenTypes] = useState(false)\n\n  const [rarities, userInfo, rewards, balanceOf] = useCalls([\n    {\n    contract: SHAZU_NFT_CONTRACT,\n    address: SHAZU_NFT_ADDRESS ,\n    method: 'getUserRarities',\n    args: [account]\n    },\n    {\n      contract: SHAZU_BOOST_POOL_CONTRACT,\n      method: 'userInfo',\n      args: [account]\n    },\n    {\n      contract: SHAZU_BOOST_POOL_CONTRACT,\n      method: 'pendingShazu',\n      args: [account]\n    },\n    {\n      contract: SHAZU_CONTRACT,\n      method: 'balanceOf',\n      args: [account]\n    },\n  ]);\n\n\n  useEffect(() => {\n    if (rarities && rarities.value) {\n      setRarityCollection(\n        {\n          \"common\":rarities.value.commonAmount.toString(),\n          \"rare\":rarities.value.rareAmount.toString(),\n          \"superrare\":rarities.value.epicAmount.toString(),\n          \"ultimaterare\":rarities.value.mythicAmount.toString(),\n        }\n      )\n\n      if (rarities.value.areAllTypesAvailable) {\n        setTokenTypes(\n          [\"#\"+rarities.value.commonTokenId.toString(), \"#\"+rarities.value.rareTokenId.toString(),  \"#\"+rarities.value.epicTokenId.toString(), \"#\"+rarities.value.mythicTokenId.toString()]\n        )\n      }\n    }\n  }, [rarities])\n\n\n  const allowance = useTokenAllowance(SHAZU_ADDRESS, account, SHAZU_BOOST_POOL_ADDRESS)\n\n  const allowanceUnstake = useTokenAllowance(SHAZU_BOOST_TOKEN_ADDRESS, account, SHAZU_BOOST_POOL_ADDRESS)\n\n\n  const balance = useTokenBalance(SHAZU_ADDRESS, account)\n\n  const balanceBoost = useTokenBalance(SHAZU_BOOST_TOKEN_ADDRESS, account)\n\n  const [boostAmountMax, setBoostAmountMax] = useState('')\n\n  const [unstakeAmountMax, setUnstakeAmountMax] = useState('')\n\n  const[balanceSetuped, setBalanceSetuped] = useState(false)\n\n  useEffect(() => {\n    if (balance && balanceBoost && !balanceSetuped) {\n      setBoostAmount(utils.formatEther(balance.toString()))\n      setBoostAmountMax(balance)\n    \n\n      setUnstakeAmount(utils.formatEther(balanceBoost.toString()))\n      setUnstakeAmountMax(balanceBoost)\n\n      setBalanceSetuped(true)\n    }\n\n  }, [balance, balanceBoost, balanceSetuped])\n\n\n  // BOOST\n  const [boostAmount, setBoostAmount] = useState('');\n\n  const handleChangeBoostAmount = (e) => {\n    if (e.target.value !== '') {\n      const value = round(e.target.value)\n\n      const number = utils.parseEther(value)\n\n      if (number.gt(boostAmountMax)) {\n        setBoostAmount(utils.formatEther(boostAmountMax.toString()));\n      } else {\n        setBoostAmount(value);\n       }\n    } else {\n      setBoostAmount(e.target.value);\n    }\n  }\n\n\n  const round = (str, decimalPlaces=18) => {\n    const arr = str.split(\".\");\n\n    console.log(arr.length)\n\n    if (arr.length > 1) {\n      const fraction = arr[1] .substr(0, decimalPlaces);\n      return arr[0] + \".\" + fraction;\n    } else {\n      return str;\n    }\n  }\n\n  const handleBoost = () => {\n    setTokenTypes(false)\n    setBalanceSetuped(false)\n  }\n\n  // UNSTAKE\n  const [unstakeAmount, setUnstakeAmount] = useState('');\n\n  const handleChangeUnstakeAmount =(e) => {\n\n    if (e.target.value !== '') {\n      const value = round(e.target.value)\n\n      const number = utils.parseEther(value)\n\n      if (number.gt(unstakeAmountMax)) {\n        setUnstakeAmount(utils.formatEther(unstakeAmountMax.toString()));\n      } else {\n        setUnstakeAmount(value);\n       }\n    } else {\n      setUnstakeAmount(e.target.value);\n    }\n  }\n\n  // CLOSE STATUS DIALOG\n  const handleCloseStatusDialog = () => {\n    setOpenStatusDialog({ ...openStatusDialog, open: false });\n    setStatusDialogMsg('');\n    setStatusDialogAmt(0);\n  }\n\n\n  return (\n    <Page title=\"SHAZU - Dojo\" style={{ overflow: 'hidden'}}>\n      <AnimateContainer initial=\"initial\" animate=\"animate\" variants={varWrapEnter}>\n\n        <motion.div variants={varFadeInUp}>\n          <section style={{ paddingBottom: '1rem', borderBottom: '1px solid #80808085' }}>\n            <Container maxWidth={themeStretch ? false : 'xl'}>\n              <Stack direction=\"row\" spacing={5} style={{ paddingTop: '1rem' }}>\n                <Stack>\n                  <Stack direction=\"row\" alignItems=\"center\">\n                    <img src=\"/static/SHAZU/icons/wallet.svg\" alt=\"\" style={{ width: '1.4rem', marginRight: '0.4rem' }} />\n                    <Typography>\n                      Your balance\n                    </Typography>\n                  </Stack>\n\n                  <Stack direction=\"row\" alignItems=\"center\" style={{ flexWrap: 'wrap' }} >\n                    <Typography variant=\"h4\">\n                    { balanceOf && balanceOf.value ? fCRCurrency(utils.formatEther(balanceOf.value[0].toString())) : 0}&nbsp;\n                    </Typography>\n                    <Stack direction=\"row\" spacing={1} alignItems=\"center\">\n                      <Typography variant=\"h4\">\n                        SHAZU\n                      </Typography>\n                      <img src=\"/static/SHAZU/ShazuCoin.png\" style={{ width: '2rem', height: '2rem', display: 'inline-block' }} alt=\"\" />\n                    </Stack>\n                  </Stack>\n                </Stack>\n\n                <Stack>\n                  <Stack direction=\"row\" alignItems=\"center\">\n                    <Typography>\n                      Current APY\n                    </Typography>\n                  </Stack>\n\n                  <Stack direction=\"row\" spacing={1} alignItems=\"center\" >\n                    <Typography variant=\"h4\">\n                      100%\n                    </Typography>\n                  </Stack>\n                </Stack>\n              </Stack>\n            </Container>\n          </section>\n        </motion.div>\n\n        <motion.div variants={varFadeInUp}>\n          <section style={{ background: 'url(\"/static/SHAZU/abstract/line-bg.png\") 100% 11% / cover' }}>\n            <Container maxWidth={themeStretch ? false : 'xl'}>\n              <motion.div variants={varFadeInLeft} className=\"p-relative w-100\">\n                <img src=\"/static/SHAZU/abstract/flower-spin.svg\" alt=\"\" className=\"rotating-25\" style={{ position: 'absolute', width: '12rem', top: '2rem', opacity: '0.15', left: '-6rem'}} />\n              </motion.div>\n              <Grid container spacing={2} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\" style={{ paddingTop: '4rem' }}>\n                <Grid item xs={12} md={12} lg={12} xl={12}> \n                  <div className=\"gradient-card left-gradient-bar\" style={{ width: 'fit-content', padding: '1rem' }}>\n                    <Typography className=\"neo-font\" style={{ lineHeight: '1', marginBottom: '0.4rem', fontSize: '3rem' }}>\n                      Boost your <span className=\"yellow-color\">reward</span>\n                    </Typography>\n                  </div>\n                  <Typography variant=\"h5\" paragraph style={{ marginTop: '1rem' }}>\n                    To boost your rewards, you need to:\n                  </Typography>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={2} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\" style={{ paddingBottom: '4rem', paddingTop: '1rem' }}>\n                <Grid item xs={12} md={4} lg={4} xl={4} style={{ padding: '1rem', display: 'flex' }}> \n                  <Stack direction=\"row\" justifyContent=\"center\" spacing={2} style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                    <img src=\"/static/SHAZU/icons/boost1.svg\" className=\"boost-icon\" alt=\"\" />\n                    <Stack>\n                      <Typography variant=\"h3\" style={{ lineHeight: '1.2'}}>\n                        1. Collect 4 types of NFT\n                      </Typography>\n                      <Typography paragraph>\n                        Common, Rare, Superare, Ultimate\n                      </Typography>\n                    </Stack>\n                  </Stack>\n                </Grid>\n\n                <Grid item xs={12} md={4} lg={4} xl={4} style={{ padding: '1rem', display: 'flex' }}> \n                  <Stack direction=\"row\" justifyContent=\"center\" spacing={2} style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                    <img src=\"/static/SHAZU/icons/boost2.svg\" className=\"boost-icon\" alt=\"\" />\n                    <Stack>\n                      <Typography variant=\"h3\" style={{ lineHeight: '1.2'}}>\n                        2. Boost Reward\n                      </Typography>\n                      <Typography paragraph>\n                        Click boost button below\n                      </Typography>\n                    </Stack>\n                  </Stack>\n                </Grid>\n\n                <Grid item xs={12} md={4} lg={4} xl={4} style={{ padding: '1rem', display: 'flex' }}> \n                  <Stack direction=\"row\" justifyContent=\"center\" spacing={2} style={{ marginTop: 'auto', marginBottom: 'auto' }}>\n                    <img src=\"/static/SHAZU/icons/boost3.svg\" className=\"boost-icon\" alt=\"\" />\n                    <Stack>\n                      <Typography variant=\"h3\" style={{ lineHeight: '1.2'}}>\n                        3. Enter the Pool\n                      </Typography>\n                      <Typography paragraph>\n                        Once you enter the pool, the tokens will be burned\n                      </Typography>\n                    </Stack>\n                  </Stack>\n                </Grid>\n              </Grid>\n              <motion.div variants={varFadeInRight} className=\"p-relative w-100\">\n                <img src=\"/static/SHAZU/abstract/flower-spin.svg\" alt=\"\" className=\"rotating-30\" style={{ position: 'absolute', width: '8rem', top: '-12rem', opacity: '0.15', right: '-3rem'}} />\n              </motion.div>\n            </Container>\n            <div className=\"bottom-up-black-bg\" style={{ height: '15rem', marginTop: '-15rem', width: '100%'}} />\n          </section>\n        </motion.div>\n\n\n        { account &&\n        <motion.div variants={varFadeInUp}>\n          <section style={{ paddingBottom: '2rem' }}>\n            <Container maxWidth={themeStretch ? false : 'xl'}>\n              <Grid container spacing={2} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\" style={{ paddingBottom: '4rem', paddingTop: '1rem' }}>\n                <Grid item xs={12} md={12} lg={12} xl={12}> \n                  <Box className=\"gradient-card top-gradient-bar\" style={{ width: '100%', maxWidth: '45rem', padding: '2rem', marginRight: 'auto' }}>\n                    <Stack direction=\"row\" className=\"staked-amount\">\n                      <Typography className=\"staked-amount-label\" variant=\"h4\" style={{ fontWeight: '400', lineHeight: '1' }}>\n                        Staked amount\n                      </Typography>\n\n                      \n                      <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                        <Typography variant=\"h4\" style={{ lineHeight: '1' }} >\n                          {userInfo && userInfo.value && userInfo.value[0] ? `${fCRCurrency(utils.formatEther(userInfo.value[0].toString()))}` : '0.00'} SHAZU\n                        </Typography>\n\n                        <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1.5rem', height: '1.5rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }} />\n                      </Stack>\n                    </Stack>\n\n                    <div className=\"faded-bar-right\" style={{ width: '100%', marginTop: '1rem', marginBottom: '1rem'}} />                 \n                      <Stack direction=\"row\" justifyContent=\"space-between\" className=\"dojo-stake-claim\" style={{ flexWrap: 'wrap', marginTop: '2rem' }}>\n                        <Stack>\n                          <Typography>Rewards</Typography>\n\n                          <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                            <Typography variant=\"h4\">\n                              {rewards && rewards.value && rewards.value ? `${utils.formatEther(rewards.value.toString())}` : '0.00'} SHAZU\n                            </Typography>\n                            \n                            <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1.5rem', height: '1.5rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }} />\n                          </Stack>\n                        </Stack>\n\n                        {/* <Button color=\"purple\" variant=\"contained\" size=\"large\" className=\"claim-stake-button\"\n                          style={{ marginTop: 'auto', marginBottom: 'auto', height: 'fit-content'}} \n                          onClick={handleClaimRewards} \n                        >\n                          Claim Rewards\n                        </Button> */}\n                      </Stack>\n                  </Box>\n                </Grid>\n\n                \n                <Grid item xs={12} md={12} lg={12} xl={12}> \n                  <Box className=\"gradient-border gradient-border-purple\" style={{ width: '100%', maxWidth: '45rem', padding: '0.1rem', marginLeft: 'auto', marginTop: '2rem' }}>\n                    <div className=\"shadow-sm\" style={{ backgroundColor: '#141416', padding: '2rem 1rem', borderRadius: '8px', marginBottom: '1rem' }}>\n                      <Stack direction=\"column\">\n                        <div className=\"tab-container\" style={{ width: '100%', maxWidth: '20rem', marginBottom: '2rem' }}>\n                          <Button variant={stakingTab === 'STAKE' ? 'contained' : ''} \n                            onClick={handleChangeStakeTab} value=\"STAKE\" color=\"yellow\" className=\"tab-button\"\n                          >\n                            STAKE\n                          </Button>\n\n                          <Button variant={stakingTab === 'UNSTAKE' ? 'contained' : ''} \n                            onClick={handleChangeStakeTab} value=\"UNSTAKE\"  color=\"error\"  \n                            style={{ marginInline: '0.4rem'}} className=\"tab-button\"\n                          >\n                            UNSTAKE\n                          </Button>\n                        </div>\n\n                        {\n                          stakingTab === 'STAKE' && \n                          <Stack direction=\"column\">\n                            <Stack className=\"border-field-container\">\n                              <TextField onChange={handleChangeBoostAmount} value={boostAmount} color=\"yellow\" variant=\"standard\" label=\"Stake Amount (SHAZU)\"  className=\"border-field-input\" type=\"number\"/>\n\n                              { allowance && boostAmount && allowance.lt(utils.parseEther(boostAmount))? (\n                              <ApproveBoostButton handleOpenFailedDialog={handleOpenFailedDialog} handleOpenSuccessDialog={handleOpenSuccessDialog}/>\n                              ):(\n\n                              <BoostButton handle={handleBoost} handleOpenFailedDialog={handleOpenFailedDialog} handleOpenSuccessDialog={handleOpenSuccessDialog} boostAmount={boostAmount} enabled={rarities && rarities.value && rarities.value.areAllTypesAvailable}/>\n                          \n                              )}\n                            </Stack>\n                            {tokenTypes ? (\n                            <Typography caption style={{ marginTop: '2rem', textAlign: 'end', opacity: '0.5'}}>\n                              *NFT with {tokenTypes.join(',')} will be burned.\n                            </Typography>\n                            ):(\n                              <Typography caption style={{ marginTop: '2rem', textAlign: 'end', opacity: '0.5'}}>\n                              * Collect 4 types of NFT to boost or unstake\n                            </Typography>\n                            )}\n                          </Stack>\n                        }\n\n                        {\n                          stakingTab === 'UNSTAKE' && \n                          <Stack direction=\"column\">\n                            <Stack className=\"border-field-container\">\n                              <TextField onChange={handleChangeUnstakeAmount} value={unstakeAmount} color=\"error\" variant=\"standard\" label=\"Unstake Amount (SHAZU)\"  className=\"border-field-input\" type=\"number\"/>\n                              \n                              { allowanceUnstake && unstakeAmount && allowanceUnstake.lt(utils.parseEther(unstakeAmount))? (\n                              <ApproveUnstakeButton handleOpenFailedDialog={handleOpenFailedDialog} handleOpenSuccessDialog={handleOpenSuccessDialog}/>\n                              ):(\n\n                              <UnstakeButton handle={handleBoost} handleOpenFailedDialog={handleOpenFailedDialog} handleOpenSuccessDialog={handleOpenSuccessDialog} boostAmount={unstakeAmount} enabled={rarities && rarities.value && rarities.value.areAllTypesAvailable}/>\n                          \n                              )}\n                            </Stack>\n                            {tokenTypes ? (\n                            <Typography caption style={{ marginTop: '2rem', textAlign: 'end', opacity: '0.5'}}>\n                              *NFT with {tokenTypes.join(',')} will be burned.\n                            </Typography>\n                            ):(\n                              <Typography caption style={{ marginTop: '2rem', textAlign: 'end', opacity: '0.5'}}>\n                              * Collect 4 types of NFT to boost or unstake\n                            </Typography>\n                            )}\n                          </Stack>\n                        }\n                      </Stack>\n                    </div>\n                  </Box>\n                </Grid>\n              </Grid>\n              \n            </Container>\n            {/* <div className=\"bottom-up-black-bg\" style={{ height: '20rem', width: '100%'}} /> */}\n          </section>\n        </motion.div>\n        }\n        \n\n        {rarities && rarities.value && rarityCollection &&\n        <motion.div variants={varFadeInUp}>\n          <section className=\"gradient-before-4 top-side-faded-bar\" style={{ paddingBottom: '15rem', paddingTop: '6rem'}}>\n            <Container maxWidth={themeStretch ? false : 'xl'}>\n              <Stack alignItems=\"center\" style={{ marginBottom: '2rem' }} >\n                <div className=\"gradient-bar\" style={{ width: '15rem', height: '0.4rem' }} />\n                <Typography variant=\"h1\" className=\"neo-font\">\n                  Owned NFT\n                </Typography>\n\n                <Typography variant=\"h5\" className=\"neo-font yellow-color\">\n                  Shazu Action Cards Collection\n                </Typography>\n              </Stack>\n\n              <Grid container spacing={4} alignItems=\"stretch\" direction=\"row\" justifyContent=\"flex-start\">\n                {NFT_COLLECTION_TYPES.map((collection, index) => {\n                    const ownedAmount = rarityCollection[collection.rarity_id];\n                    \n              \n                     // OWNED\n                    if(parseInt(ownedAmount) !== 0){\n                      return (\n                        <>\n                          <Grid item xs={12} sm={4} md={3} lg={3} xl={3}>\n                            <Typography variant=\"h5\" className=\"neo-font\" align=\"center\">\n                              {collection.rarity}\n                            </Typography>\n\n                            <div className=\"faded-bar\" style={{ width: '70%', marginTop: '0.2rem', marginBottom: '1rem', marginInline: 'auto', height: '2px'}} />\n\n                            <motion.div variants={varFadeInUp} key={index}>\n                              <NFTCard unknown={false} amount={ownedAmount} collection={collection} />\n                              \n                            </motion.div>\n                          </Grid>\n                        </>\n                      )\n                    }\n                  \n                    // NOT OWNED\n                    if(parseInt(ownedAmount) === 0){\n                      return (\n                        <>\n                          <Grid item xs={12} sm={4} md={3} lg={3} xl={3}>\n                            <Typography variant=\"h5\" className=\"neo-font\" align=\"center\">\n                              {collection.rarity}\n                            </Typography>\n\n                            <div className=\"faded-bar\" style={{ width: '70%', marginTop: '0.2rem', marginBottom: '1rem', marginInline: 'auto', height: '2px'}} />\n\n                            <motion.div variants={varFadeInUp} key={index} style={{ height: '100%' }}>\n                              <NFTCard unknown collection={collection} />\n                            </motion.div>\n                          </Grid>\n                        </>\n                      )\n                    }\n\n                    return('');\n                  })}\n              </Grid>\n            </Container>\n          </section>\n        </motion.div>\n        }\n      </AnimateContainer>\n\n      {/* STATUS DIALOG */}\n      <DialogAnimate open={openStatusDialog.open} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseStatusDialog}>\n        <DialogContent style={{ textAlign: 'center' }}>\n          {\n            openStatusDialog.success \n            ?\n            <div className=\"successCheck-lottie-container\">\n              <Lottie options={successCheckOptions} isClickToPauseDisabled />\n            </div>\n            :\n            <div className=\"successCheck-lottie-container\">\n              <Lottie options={failedOptions} isClickToPauseDisabled />\n            </div>\n          }\n          \n          <Typography variant=\"h3\">\n            {statusDialogMsg}\n          </Typography>\n          \n          {\n            openStatusDialog.success && statusDialogAmt > 0\n            ?\n            <div className=\"elevate-card\">\n              <Typography variant=\"h5\">\n                {fCRCurrency(statusDialogAmt)} SHAZU\n              </Typography>\n            </div>\n            :\n            <div>\n              {failedStatusMsg}\n            </div>\n          }\n        </DialogContent>\n      </DialogAnimate>\n\n    </Page>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// ----------------------------------------------------------------------\n\nexport default function useCountdown(date) {\n  const [countdown, setCountdown] = useState({\n    days: '00',\n    hours: '00',\n    minutes: '00',\n    seconds: '00'\n  });\n\n  useEffect(() => {\n    const interval = setInterval(() => setNewTime(), 1000);\n    return () => clearInterval(interval);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [date]);\n\n  const setNewTime = () => {\n    const startTime = date;\n    const endTime = new Date();\n    const distanceToNow = startTime - endTime;\n\n    const getDays = Math.floor(distanceToNow / (1000 * 60 * 60 * 24));\n    const getHours = `0${Math.floor((distanceToNow % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))}`.slice(-2);\n    const getMinutes = `0${Math.floor((distanceToNow % (1000 * 60 * 60)) / (1000 * 60))}`.slice(-2);\n    const getSeconds = `0${Math.floor((distanceToNow % (1000 * 60)) / 1000)}`.slice(-2);\n\n    setCountdown({\n      days: getDays || '000',\n      hours: getHours || '000',\n      minutes: getMinutes || '000',\n      seconds: getSeconds || '000'\n    });\n  };\n\n  return countdown;\n}\n\n// Usage\n// const countdown = useCountdown(new Date('07/07/2022 21:30'));\n","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers, useEtherBalance } from '@usedapp/core';\n\nimport { SHAZU_MARKETPLACE_CONTRACT} from '../config';\n\nconst BuyButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [usingDisabled, setUsingDisabled] = useState(false)\n\n  const [buttonText, setButtonText] = useState('BUY');\n\n  const { state, send } = useContractFunction(SHAZU_MARKETPLACE_CONTRACT, 'fillOffer', { transactionName: 'Fill Offer' });\n\n  const { account } = useEthers()\n\n  const balance = useEtherBalance(account)\n\n  \n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n      setDisabled(false)\n      setUsingDisabled(false)\n      setButtonText('BUY');\n    }\n\n    if (state.status === 'None') {\n\n    }\n\n    if (state.status === 'Success') {\n      setButtonText('BOUGHT');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setUsingDisabled(true)\n      setButtonText('BUYING..');\n    }\n  }, [state]);\n\n  const handleBuy = () => {\n    setDisabled(true)\n    setUsingDisabled(true)\n    send(props.tokenId, {value:utils.parseEther(props.price)});\n  };\n\n  useEffect(() => {\n    if (!account || (account.toLowerCase() === props.seller.toLowerCase())) {\n\n      if (!usingDisabled) {\n        setDisabled(true)\n      }\n    } else {\n      if (account && balance && balance.gte(utils.parseEther(props.price))) {\n        if (!usingDisabled) {\n          setDisabled(false)\n        }\n      } else {\n        if (!usingDisabled) {\n          setDisabled(true)\n        }\n      }\n    }\n\n  \n  }, [account, props.seller, balance]);\n\n\n  return (\n      <Button onClick={handleBuy} \n          variant=\"contained\" color=\"success\" style={{ width: '100%' }} disabled={disabled}>\n          {buttonText}\n      </Button>\n  );\n};\n\nexport default BuyButton;\n","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers, useTokenBalance } from '@usedapp/core';\n\nimport { SHAZU_CONTRACT, SHAZU_ADDRESS, SHAZU_MARKETPLACE_ADDRESS} from '../config';\n\n\nconst ApproveShazuButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [usingDisabled, setUsingDisabled] = useState(false)\n\n  const [buttonText, setButtonText] = useState('APPROVE SHAZU');\n\n  const { state, send } = useContractFunction(SHAZU_CONTRACT, 'approve', { transactionName: 'Approve SHAZU' });\n\n  const { account } = useEthers()\n\n  const value = constants.MaxUint256\n\n  const balance = useTokenBalance(SHAZU_ADDRESS, account)\n\n\n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n      setDisabled(false)\n      setUsingDisabled(false)\n      setButtonText('APPROVE SHAZU');\n    }\n\n    if (state.status === 'None') {\n\n    }\n\n    if (state.status === 'Success') {\n      setButtonText('APPROVED');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setUsingDisabled(true)\n      setButtonText('APPROVING..');\n    }\n  }, [state]);\n\n  const handleApprove = () => {\n    setDisabled(true)\n    setUsingDisabled(true)\n    send(SHAZU_MARKETPLACE_ADDRESS, value);\n  };\n\n\n  useEffect(() => {\n    if (!account || (account.toLowerCase() === props.seller.toLowerCase())) {\n\n      if (!usingDisabled) {\n        setDisabled(true)\n      }\n    } else {\n      if (account && balance && balance.gte(utils.parseEther(props.price))) {\n        if (!usingDisabled) {\n          setDisabled(false)\n        }\n      } else {\n        if (!usingDisabled) {\n          setDisabled(true)\n        }\n      }\n    }\n\n  \n  }, [account, props.seller, balance]);\n\n  return (\n      <Button onClick={handleApprove} \n          variant=\"contained\" color=\"success\" style={{ width: '100%' }} disabled={disabled}>\n          {buttonText}\n      </Button>\n  );\n};\n\nexport default ApproveShazuButton;\n","import { useState, useEffect } from 'react';\nimport { utils, BigNumber, constants} from 'ethers';\n\nimport { Container, Typography, Box, Button, Stack, useTheme, styled, Grid, DialogContent, useMediaQuery, LinearProgress } from '@mui/material';\n\nimport { useContractFunction, useEthers, useTokenBalance } from '@usedapp/core';\n\nimport { SHAZU_CONTRACT, SHAZU_ADDRESS, SHAZU_MARKETPLACE_ADDRESS, SHAZU_MARKETPLACE_CONTRACT} from '../config';\n\n\nconst BuyShazuButton = (props) => {\n  const [disabled, setDisabled] = useState(true);\n\n  const [usingDisabled, setUsingDisabled] = useState(false)\n\n  const [buttonText, setButtonText] = useState('BUY');\n\n  const { state, send } = useContractFunction(SHAZU_MARKETPLACE_CONTRACT, 'fillOffer', { transactionName: 'Fill Offer' });\n\n  const { account } = useEthers()\n\n  const value = constants.MaxUint256\n\n  const balance = useTokenBalance(SHAZU_ADDRESS, account)\n\n\n  useEffect(() => {\n    if (state.status === 'Exception' || state.status === 'Fail') {\n      \n      setDisabled(false)\n      setUsingDisabled(false)\n      setButtonText('BUY');\n    }\n\n    if (state.status === 'None') {\n\n    }\n\n    if (state.status === 'Success') {\n      setButtonText('BOUGHT');\n    }\n\n    if (state.status === 'Mining') {\n      setDisabled(true);\n      setUsingDisabled(true)\n      setButtonText('BUYING..');\n    }\n  }, [state]);\n\n  const handleBuy = () => {\n    setDisabled(true)\n    setUsingDisabled(true)\n    send(props.tokenId);\n  };\n\n\n  useEffect(() => {\n    if (!account || (account.toLowerCase() === props.seller.toLowerCase())) {\n\n      if (!usingDisabled) {\n        setDisabled(true)\n      }\n    } else {\n      if (account && balance && balance.gte(utils.parseEther(props.price))) {\n        if (!usingDisabled) {\n          setDisabled(false)\n        }\n      } else {\n        if (!usingDisabled) {\n          setDisabled(true)\n        }\n      }\n    }\n\n  \n  }, [account, props.seller, balance]);\n\n  return (\n      <Button onClick={handleBuy} \n          variant=\"contained\" color=\"success\" style={{ width: '100%' }} disabled={disabled}>\n          {buttonText}\n      </Button>\n  );\n};\n\nexport default BuyShazuButton;\n","import { styled, useTheme  } from '@mui/material/styles';\nimport { useEffect, useState } from 'react';\nimport { utils, BigNumber, constants} from 'ethers'\nimport Lottie from 'react-lottie';\nimport { Box, Link, Typography, Stack, Popover, Button, TextField, DialogContent } from '@mui/material';\nimport useSound from 'use-sound';\nimport { shortenAddress, shortenIfAddress } from '@usedapp/core';\nimport { NavLink, NavLink as RouterLink } from 'react-router-dom';\n\nimport { fCRCurrency } from '../../utils/formatNumber';\n\n// components\nimport { DialogAnimate, varZoomInUp } from '../animate';\n\nimport SuccessCheckLottie from '../../assets/lottie/successCheck.json';\nimport FailedLottie from '../../assets/lottie/failed.json';\nimport popDingSound from '../../assets/sfx/popDing.wav';\nimport { useEthers, useContractFunction, useTokenAllowance} from '@usedapp/core';\nimport { SHAZU_ADDRESS, SHAZU_MARKETPLACE_ADDRESS, SHAZU_NFT_CONTRACT} from '../../config'\nimport BuyButton from '../BuyButton';\nimport ApproveShazuButton from '../ApproveShazuButton';\nimport BuyShazuButton from '../BuyShazuButton';\n\nconst successCheckOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: SuccessCheckLottie,\n    background: 'transparent'\n};\n\nconst failedOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: FailedLottie,\n    background: 'transparent'\n};\n\nconst infoButtonStyle = { padding: '0.25rem', borderRadius: '10rem', width: '2.4rem', height: '2.4rem', minWidth: 'unset'}\n\nconst editButtonStyle = { padding: '0.4rem', borderRadius: '8px', width: '2.2rem', height: '2.2rem', minWidth: 'unset'}\n\nconst CustomTextField = styled(TextField)({\n    '& label.Mui-focused': {\n        color: 'white',\n    },\n    '& .MuiInput-underline:after': {\n        borderBottomColor: 'white',\n    },\n    '& .MuiOutlinedInput-root': {\n        '& fieldset': {\n            borderColor: '#3B3B3B',\n        },\n        '&:hover fieldset': {\n            borderColor: 'white',\n        },\n        '&.Mui-focused fieldset': {\n            borderColor: 'white',\n        },\n    },\n});\n\nexport default function NFTCard(props){\n\n    const {account} = useEthers()\n\n\n    const allowance = useTokenAllowance(SHAZU_ADDRESS, account, SHAZU_MARKETPLACE_ADDRESS)\n\n    const { state, send } = useContractFunction(SHAZU_NFT_CONTRACT, 'transferFrom', {\n        transactionName: 'Transfer SHAZU NFT'\n    });\n\n    const [isTransfering, setisTransfering] = useState(false)\n\n    const [isTransfered, setIsTransfered] = useState(false)\n\n    useEffect(() => {\n        if (state.status === 'Exception') {\n\n\n            setisTransfering(false)\n        }\n    \n        if (state.status === 'Fail') {\n\n            setisTransfering(false)\n        }\n    \n        if (state.status === 'None') {\n\n        }\n    \n        if (state.status === 'Success') {\n\n            setisTransfering(true)\n\n            setIsTransfered(true)\n        }\n    \n    }, [state, account]);\n\n    const theme = useTheme();\n    const collectionCardStyle = {\n        borderRadius: theme.shape.borderRadiusMd,\n        backgroundColor: '#1C1C1C',\n        border: 'solid 1px',\n        borderColor: '#3B3B3B',\n        padding: '0.5rem 0.8rem',\n        transition: 'border-color 0.3s',\n        maxWidth: props.big ? '25rem' : '17rem',\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        textAlign: 'left'\n    }\n\n    function getRarityColor(){\n        if(props.collection.nft.rarity === 'Common'){\n            return 'var(--shazu-yellow)';\n        }\n        if(props.collection.nft.rarity === 'Rare'){\n            return 'var(--shazu-blue)';\n        }\n        if(props.collection.nft.rarity === 'Super Rare'){\n            return 'var(--shazu-green)';\n        }\n        if(props.collection.nft.rarity === 'Ultimate Rare'){\n            return 'linear-gradient(90deg, rgba(236,35,255,1) 0%, rgba(166,37,255,1) 34%, rgba(173,0,255,1) 100%)';\n        }\n    }\n\n    function getGradientClass(){\n        if(props.collection.nft.rarity === 'Common'){\n            return 'gradient-border-yellow';\n        }\n        if(props.collection.nft.rarity === 'Rare'){\n            return 'gradient-border-blue';\n        }\n        if(props.collection.nft.rarity === 'Super Rare'){\n            return 'gradient-border-green';\n        }\n        if(props.collection.nft.rarity === 'Ultimate Rare'){\n            return 'gradient-border-purple';\n        }\n    }\n    const rarityLabelStyle = {\n        position: 'absolute', \n        padding: '0.1rem 0.5rem', \n        borderRadius: '4px', \n        background: getRarityColor(), \n        color: props.collection.nft.rarity !== 'Ultimate Rare' ? 'black' : 'white', \n        fontSize: '0.8rem', \n        top: '-3rem', \n        left: '-0.5rem', \n        transform: 'rotate(-12deg)',\n        width: 'max-content'\n    }\n\n\n    const [infoOpen, setInfoOpen] = useState(null);\n    \n    // EDIT LISTING\n    const handleEditListing = (e) => {        \n        const listingData = JSON.parse(e.target.value);\n        props.handleOpenEditListingDialog(listingData);\n    }\n\n    // TRANSFER\n    const [playPopDingSound, { stopPopDingSound }] = useSound(popDingSound);\n    const [openSuccessTransferDialog, setOpenSuccessTransferDialog] = useState(false);\n    const [openFailedTransferDialog, setOpenFailedTransferDialog] = useState(false);\n    const [shortenedTransferAddress, setShortenedTransferAddress] = useState('');\n    \n\n\n    const handleOpenSuccessTransferDialog = () => {\n        setOpenSuccessTransferDialog(true);\n    }\n    const handleCloseSuccessTransferDialog = () => {\n        setOpenSuccessTransferDialog(false);\n        setTransferAddress('');\n    }\n\n\n    const handleOpenFailedTransferDialog = () => {\n        setOpenFailedTransferDialog(true);\n    }\n    const handleCloseFailedTransferDialog = () => {\n        setOpenFailedTransferDialog(false);\n    }\n\n    const [transferAddress, setTransferAddress] = useState('');\n    const [isValidAddress, setIsValidAddress] = useState(false);\n\n    const checkTransferAddress = () => {\n        try {\n            shortenAddress(transferAddress);\n            return true;\n        } catch (error) {\n            return false;\n        }\n    }\n\n    useEffect(() => {\n        setIsValidAddress(checkTransferAddress());\n    }, [transferAddress]);\n\n    const handleInputChange = (e) => {\n        setTransferAddress(e.target.value);\n    }\n\n    const [click, setCLickTransfer] = useState(null);\n    const handleClickTransfer = (event) => {\n        setCLickTransfer(event.currentTarget);\n    };\n\n    const handleCloseTransfer = () => {\n        setCLickTransfer(null);\n    };\n\n    const handleTransfer = () => {\n        if(transferAddress === '' || transferAddress === null){\n            alert('Fill the Destination Address first!');\n            return false;\n        }\n\n        if (transferAddress === account) {\n            alert('You cannot send token to yourself!');\n            return false;\n        }\n        send(account, transferAddress, props.collection.id)\n\n        setShortenedTransferAddress(shortenAddress(transferAddress));\n\n        setisTransfering(true)\n    }\n\n    const handleListing = (e) => {\n        const listingData = JSON.parse(e.target.value);\n        console.info(listingData);\n\n        props.handleOpenListingDialog(listingData);\n    }\n\n    // BUY NFT\n    // STATUS DIALOG\n    const [openStatusDialog, setOpenStatusDialog] = useState({ open: false, success: false });\n    const [statusDialogMsg, setStatusDialogMsg] = useState('');\n    const [statusDialogInfo, setStatusDialogInfo] = useState('');\n    const [failedStatusMsg, setFailedStatusMsg] = useState('');\n\n    const handleOpenSuccessDialog = (msg, info) => {\n        playPopDingSound();\n        setStatusDialogMsg(msg);\n        setStatusDialogInfo(info);\n        setOpenStatusDialog({ open: true, success: true });\n    }\n\n    const handleOpenFailedDialog = (msg, reason) => {\n        playPopDingSound();\n        /*setStatusDialogMsg(msg);\n        setFailedStatusMsg(reason);\n        setOpenStatusDialog({ open: true, success: true });\n        */\n        setStatusDialogMsg(msg);\n        setStatusDialogInfo(reason);\n        setOpenStatusDialog({ open: true, success: true });\n    }\n\n    const handleCloseStatusDialog = () => {\n        setOpenStatusDialog({ ...openStatusDialog, open: false });\n        setStatusDialogMsg('');\n        setFailedStatusMsg('');\n    }\n\n    const handleBuy = (e) => {\n        const nftData = JSON.parse(e.target.value);\n\n        //handleOpenSuccessDialog('Buy NFT Successful', `id: ${nftData.nftId}`)\n        // handleOpenFailedDialog('Buy NFT Failed', 'failed reason here');\n    }\n\n    if(props.unknown){\n        return(\n            <div style={{ height: '100%' }}>\n                <Box className={`gradient-border p-relative ${getGradientClass()}`} style={ collectionCardStyle }>\n                    <div style={{ visibility: 'hidden' }}>\n                        <div style={{ width: '100%', borderRadius: theme.shape.borderRadiusMd, marginTop: '0.5rem', marginBottom: '0.5em'  }} >\n                            <video className=\"vid\" playsInline muted autoPlay loop style={{ width: '100%', borderRadius: '8px', aspectRatio: '1' }} >\n                                <source src={props.collection.nft.video} type=\"video/mp4\"/>\n                            </video>\n                        </div>\n                        <div style={{ position: 'relative', height: '0', width: '0'}}>\n                            <div style={rarityLabelStyle}>\n                                {props.collection.nft.rarity}\n                            </div>\n                        </div>\n        \n                        <Typography variant=\"h6\" style={{ fontWeight: '700', marginBottom: '0.8rem' }}>\n                            {props.collection.nft.name}\n                        </Typography>\n        \n                        {(props.amount || props.amount !== 0 || props.amount !== null) &&\n                            <div className=\"p-relative w-100\">\n                                <div className=\"nft-card-amount\">\n                                    x{props.amount}\n                                </div>\n                            </div>\n                        }\n                    </div>\n\n                    <div style={{ position: 'absolute', top: '0', left: '0', \n                        width: '100%', height: '100%', display: 'flex', \n                        flexDirection: 'column', justifyContent: 'center', \n                        alignItems: 'center', opacity: '0.2' }}\n                    >\n                        <Typography style={{ fontSize: '4rem'}}>\n                            ?\n                        </Typography>\n                        <Typography>\n                            Not owned yet\n                        </Typography>\n                    </div>\n                </Box>\n            </div>\n        )\n    }\n\n    if(props.sold){\n        return(\n            <div>\n                <Box className={`gradient-border ${getGradientClass()}`} style={{ ...collectionCardStyle, position: 'relative' }}>\n                    <div style={{ width: '100%', borderRadius: theme.shape.borderRadiusMd, marginTop: '0.5rem', marginBottom: '0.5em'  }} >\n                        <video className=\"vid\" playsInline muted autoPlay loop style={{ width: '100%', borderRadius: '8px', aspectRatio: '1' }} >\n                            <source src={props.collection.nft.video} type=\"video/mp4\"/>\n                        </video>\n                    </div>\n                    <div style={{ position: 'relative', height: '0', width: '0'}}>\n                        <div style={rarityLabelStyle}>\n                            {props.collection.nft.rarity}\n                        </div>\n                    </div>\n    \n                    <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" style={{ marginBottom: '0.8rem'}} >\n                        <Stack>\n                            <Typography variant=\"h6\" style={{ fontWeight: '700', marginBottom: '0.8rem' }}>\n                                {props.collection.nft.name}\n                            </Typography>\n\n                            {(typeof props.collection.id !== 'undefined') &&\n                                <Typography style={{ opacity: '0.5', fontSize: '0.8rem', marginTop: '-1rem' }}>\n                                    id: {props.collection.id}\n                                </Typography>\n                            }\n                        </Stack>\n\n                        {typeof props.collection.description !== 'undefined' &&\n                            <>\n                                <Button variant=\"container\" style={infoButtonStyle} onClick={(e) => setInfoOpen(e.currentTarget)}>\n                                    <img src=\"/static/SHAZU/icons/info.svg\" className=\"pe-none\" alt=\"\" style={{ width: '100%', opacity: '0.5' }} />\n                                </Button>\n                                \n                                <Popover\n                                    open={Boolean(infoOpen)}\n                                    anchorEl={infoOpen}\n                                    onClose={() => setInfoOpen(null)}\n                                    anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                                    transformOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                                    PaperProps={{\n                                        sx: {\n                                            p: 1,\n                                            maxWidth: 200\n                                        }\n                                    }}\n                                >\n                                    {props.collection.description}\n                                </Popover>\n                            </>\n                        }   \n                    </Stack>\n    \n                    {(typeof props.amount !== 'undefined') &&\n                        <div className=\"p-relative w-100\">\n                            <div className=\"nft-card-amount\">\n                                x{props.amount}\n                            </div>\n                        </div>\n                    }\n\n                    <div className=\"sold-overlay\">\n                        <img src=\"/static/SHAZU/misc/sold-tape.png\" alt=\"\" />\n                    </div>\n                </Box>\n            </div>\n        )\n    }\n\n    return(\n        <div>\n            {/* TRANSFER DIALOG */}\n            <DialogAnimate open={openSuccessTransferDialog} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseSuccessTransferDialog}>\n                <DialogContent style={{ textAlign: 'center' }}>\n                <div className=\"successCheck-lottie-container\">\n                    <Lottie options={successCheckOptions} isClickToPauseDisabled />\n                </div>\n                <Typography variant=\"h3\">\n                    Transfer Successful!\n                </Typography>\n                \n                <div className=\"elevate-card\">\n                    <Typography variant=\"h6\">\n                        Transferred to: <br/> \n                        <a href={`https://bscscan.com/address/${transferAddress}`} rel=\"noreferrer\" target=\"_blank\">\n                            {shortenedTransferAddress}\n                        </a>\n                    </Typography>\n                </div>\n                </DialogContent>\n            </DialogAnimate>\n\n            {/* TRANSFER DIALOG FAILED */}\n            <DialogAnimate open={openFailedTransferDialog} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseFailedTransferDialog}>\n                <DialogContent style={{ textAlign: 'center' }}>\n                <div className=\"successCheck-lottie-container\">\n                <Lottie options={failedOptions} isClickToPauseDisabled />\n                </div>\n                <Typography variant=\"h3\">\n                    Transfer Failed\n                </Typography>\n                </DialogContent>\n            </DialogAnimate>\n\n            <Box className={`gradient-border ${getGradientClass()}`} style={ collectionCardStyle }>\n                {(typeof props.collection.saleData !== 'undefined' && props.editListingAction) &&\n                    <>\n                        <div className=\"p-relative w-100\">\n                            <img src=\"/static/SHAZU/misc/sale-sticker.svg\" alt=\"\" className=\"swing-rotate-normal\" style={{ position: 'absolute', width: '6rem', right: '-2.4rem', top: '-2.4rem' }} />\n                        </div>\n                    </>\n                }\n\n                <div style={{ width: '100%', borderRadius: theme.shape.borderRadiusMd, marginTop: '0.5rem', marginBottom: '0.5em'  }} >\n                    <video className=\"vid\" playsInline muted autoPlay loop style={{ width: '100%', borderRadius: '8px', aspectRatio: '1' }} >\n                        <source src={props.collection.nft.video} type=\"video/mp4\"/>\n                    </video>\n                </div>\n                <div style={{ position: 'relative', height: '0', width: '0'}}>\n                    <div style={rarityLabelStyle}>\n                        {props.collection.nft.rarity}\n                    </div>\n                </div>\n\n                <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" style={{ marginBottom: '0.8rem'}} >\n                    <Stack>\n                        <Typography variant=\"h6\" style={{ fontWeight: '700', marginBottom: '0.8rem' }}>\n                            {props.collection.nft.name}\n                        </Typography>\n\n                        {(typeof props.collection.id !== 'undefined') &&\n                            <Typography style={{ opacity: '0.5', fontSize: '0.8rem', marginTop: '-1rem' }}>\n                                id: {props.collection.id}\n                            </Typography>\n                        }\n                    </Stack>\n\n                    {typeof props.collection.description !== 'undefined' &&\n                        <>\n                            <Button variant=\"container\" style={infoButtonStyle} onClick={(e) => setInfoOpen(e.currentTarget)}>\n                                <img src=\"/static/SHAZU/icons/info.svg\" className=\"pe-none\" alt=\"\" style={{ width: '100%', opacity: '0.5' }} />\n                            </Button>\n                            \n                            <Popover\n                                open={Boolean(infoOpen)}\n                                anchorEl={infoOpen}\n                                onClose={() => setInfoOpen(null)}\n                                anchorOrigin={{ vertical: 'top', horizontal: 'left' }}\n                                transformOrigin={{ vertical: 'bottom', horizontal: 'center' }}\n                                PaperProps={{\n                                    sx: {\n                                        p: 1,\n                                        maxWidth: 200\n                                    }\n                                }}\n                            >\n                                {props.collection.description}\n                            </Popover>\n                        </>\n                    }   \n                </Stack>\n\n                {props.ownedAction && !isTransfered &&\n                    <div className=\"nft-owned-action shadow-sm\">\n                        <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\" alignItems=\"center\">\n                            <Stack direction=\"row\" spacing={1} style={{ width: '100%'}}>\n                                <Button onClick={handleClickTransfer} variant=\"contained\" color=\"yellow\" className=\"nft-owned-action-btn\">\n                                    Transfer\n                                </Button>\n\n                                <Popover\n                                    open={Boolean(click)}\n                                    anchorEl={click}\n                                    onClose={handleCloseTransfer}\n                                    anchorOrigin={{\n                                        vertical: 'bottom',\n                                        horizontal: 'center'\n                                    }}\n                                    transformOrigin={{\n                                        vertical: 'top',\n                                        horizontal: 'center'\n                                }}\n                                >\n                                    <Box sx={{ p: 2, maxWidth: '30rem', width: '90vw' }}>\n                                        <Typography variant=\"subtitle1\" gutterBottom>\n                                            Destination Address\n                                        </Typography>\n\n                                        <CustomTextField fullWidth type=\"search\" size=\"small\" onChange={handleInputChange}/>\n\n                                        <Typography variant=\"body2\" sx={{ color: 'text.secondary', marginTop: '0.2rem' }}>\n                                            {props.collection.nft.name} ({props.collection.id})\n                                        </Typography>\n\n                                        <Button disabled={!isValidAddress || isTransfering}\n                                            variant=\"contained\" color=\"yellow\"\n                                            onClick={handleTransfer} style={{ marginTop: '2rem', width: '100%' }}\n                                        >\n                                            {isTransfering ? \"Transferring...\" : \"Transfer\" }\n                                        </Button>\n                                    </Box>\n                                </Popover>\n\n                                <Button onClick={handleListing} value={JSON.stringify(props.collection)} variant=\"contained\" color=\"success\" className=\"nft-owned-action-btn\">\n                                    List\n                                </Button>\n                            </Stack>\n                        </Stack>\n                    </div>\n                }\n\n                {(typeof props.amount !== 'undefined') &&\n                    <div className=\"p-relative w-100\">\n                        <div className=\"nft-card-amount\">\n                            x{props.amount}\n                        </div>\n                    </div>\n                }\n\n                {/* EDIT LISTING ACTION */}\n                {(typeof props.collection.saleData !== 'undefined' && props.editListingAction) \n                    &&\n                    <div className=\"p-relative w-100\">\n                        <div className=\"nft-sale-info shadow-sm\">\n                            <Stack direction=\"row\" spacing={2} justifyContent=\"space-between\" alignItems=\"center\">\n                                <Stack>\n                                    <div className=\"nft-sale-caption\">\n                                        Listing price\n                                    </div>\n                                    <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                                        <div>\n                                        {utils.parseEther(props.collection.saleData.price).gt(utils.parseEther(\"1\")) ? fCRCurrency(props.collection.saleData.price) : props.collection.saleData.price} {props.collection.saleData.currency}\n                                        </div>\n                                        {\n                                            props.collection.saleData.currency === 'BNB' &&\n                                            <img src=\"/static/SHAZU/icons/ic_bnb.svg\" alt=\"\" style={{ width: '1rem', height: '1rem', marginLeft: '0.2rem', marginBottom: '0.2rem' }}/>\n                                        }\n                                        {\n                                            props.collection.saleData.currency === 'SHAZU' &&\n                                            <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1rem', height: '1rem', marginLeft: '0.2rem', marginBottom: '0.2rem' }} />\n                                        }\n                                    </Stack>\n                                </Stack>\n\n                                <Button variant=\"container\" value={JSON.stringify(props.collection)} style={editButtonStyle} onClick={handleEditListing}>\n                                    <img src=\"/static/SHAZU/icons/edit.svg\" className=\"pe-none\" alt=\"\" style={{ width: '100%', opacity: '0.5' }} />\n                                </Button>\n                            </Stack>\n                        </div>\n                    </div>\n                }\n\n                {/* MARKETPLACE LISTING ACTION */}\n                {(typeof props.collection.marketData !== 'undefined' && props.marketplaceListing)\n                    &&\n                    <>\n                        <div className=\"elevate-card-sm\" style={{ marginBottom: '1rem'}}>\n                            <Stack direction=\"column\" justifyContent=\"space-between\" >\n                                <div style={{ fontSize: '0.8rem'}}>\n                                    Price: \n                                </div>\n\n                                <Stack direction=\"row\" alignItems=\"center\" spacing={1}>\n                                    <div style={{ fontSize: '1rem', fontWeight: '700'}}>\n                                        {utils.parseEther(props.collection.saleData.price).gt(utils.parseEther(\"1\")) ? fCRCurrency(props.collection.saleData.price) : props.collection.saleData.price} {props.collection.saleData.currency}\n                                    </div>\n                                    {\n                                        props.collection.saleData.currency === 'BNB' &&\n                                        <img src=\"/static/SHAZU/icons/ic_bnb.svg\" alt=\"\" style={{ width: '1.2rem', height: '1.2rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }}/>\n                                    }\n                                    {\n                                        props.collection.saleData.currency === 'SHAZU' &&\n                                        <img src=\"/static/SHAZU/icons/ic_shazu.png\" alt=\"\" style={{ width: '1.2rem', height: '1.2rem', marginLeft: '0.2rem', marginBottom: '0.1rem' }} />\n                                    }\n                                </Stack>\n                            </Stack>\n                        </div>\n                      \n                        <Stack direction=\"row\" spacing={1}>\n                            \n                            {(props.collection.saleData.currency == 'SHAZU') ? (\n                                (allowance && allowance.gte(utils.parseEther(props.collection.saleData.price))) ? (\n                                    <BuyShazuButton tokenId = {props.collection.saleData.saleId} price={props.collection.saleData.price} seller={props.collection.saleData.seller}/>\n                                ):(\n                                    <ApproveShazuButton price={props.collection.saleData.price} seller={props.collection.saleData.seller} />\n                                )\n                            ): (\n                                <BuyButton tokenId = {props.collection.saleData.saleId} price={props.collection.saleData.price} seller={props.collection.saleData.seller}/>\n                            )}\n                        </Stack>\n\n                        {/* STATUS DIALOG */}\n                        <DialogAnimate open={openStatusDialog.open} maxWidth=\"xs\" animate={varZoomInUp} scroll=\"paper\" onClose={handleCloseStatusDialog}>\n                            <DialogContent style={{ textAlign: 'center' }}>\n                                {\n                                    openStatusDialog.success \n                                    ?\n                                    <div className=\"successCheck-lottie-container\">\n                                        <Lottie options={successCheckOptions} isClickToPauseDisabled />\n                                    </div>\n                                    :\n                                    <div className=\"successCheck-lottie-container\">\n                                        <Lottie options={failedOptions} isClickToPauseDisabled />\n                                    </div>\n                                }\n                                \n                                <Typography variant=\"h3\">\n                                    {statusDialogMsg}\n                                </Typography>\n                                \n                                {\n                                    openStatusDialog.success \n                                    ?\n                                    <div className=\"elevate-card\">\n                                        <Typography variant=\"h5\">\n                                            {statusDialogInfo}\n                                        </Typography>\n                                    </div>\n                                    :\n                                    <div>\n                                        {failedStatusMsg}\n                                    </div>\n                                }\n                            </DialogContent>\n                        </DialogAnimate>\n                    </>\n                }\n\n                {/* TOP SALE */}\n                {(typeof props.collection.topSaleData !== 'undefined' && props.topSale)\n                    &&\n                    <>\n                        <div className=\"elevate-card\" style={{ marginBottom: '0.4rem', marginTop: '-0.4rem' }}>\n                            <Stack alignItems=\"center\">\n                                <div style={{ fontSize: '1.2rem', fontWeight: '700'}}>\n                                {utils.parseEther(props.collection.topSaleData.price).gt(utils.parseEther(\"1\")) ? fCRCurrency(props.collection.topSaleData.price) : props.collection.topSaleData.price} {props.collection.topSaleData.currency}\n                                </div>\n                            </Stack>\n                        </div>\n                    </>\n                }\n            </Box>\n        </div>\n    )\n\n}\n"],"sourceRoot":""}